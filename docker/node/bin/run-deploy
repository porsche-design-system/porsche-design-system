#!/usr/bin/env bash

set -o errexit
set -o pipefail

SCRIPT_DIR="$(cd `dirname ${0}` && pwd)"
source "${SCRIPT_DIR}/../shared/ensure-github-credentials.sh"

if [[ -z "${GITHUB_REPOSITORY}" ]]; then
  echo "Please provide the \$GITHUB_REPOSITORY environment variable."
  exit 1
fi

if [[ -z "${GITHUB_ACTOR}" ]]; then
  echo "Please provide the \$GITHUB_ACTOR environment variable."
  exit 1
fi

if [[ -z "${GITHUB_REF}" ]]; then
  echo "Please provide the \$GITHUB_REF environment variable."
  exit 1
fi

if [[ -z "${GITHUB_SHA}" ]]; then
  echo "Please provide the \$GITHUB_SHA environment variable."
  exit 1
fi

if [[ -z "$(ls -A ./packages/design-system/dist)" ]]; then
  echo "Please provide the build artifact."
  exit 1
fi

setup() {
  echo "task: [$(date)] \"setup\""
  git config --global user.name "${GITHUB_ACTOR}"
  git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
  git remote set-url origin "git@github.com:${GITHUB_REPOSITORY}.git"

  P_WORKING_BRANCH="${GITHUB_REF:11}"
  P_LATEST_STABLE_BRANCH="$(git remote show origin | grep "HEAD branch" | sed "s/.*: //")"
  P_LATEST_STABLE_SKETCH_PUBLISH_DATE="$(git log -1 --format=%aD ${GITHUB_SHA} | cat)"
  P_LATEST_STABLE_SKETCH_VERSION="0.0.9"
}

checkout_gh_pages() {
  echo "task: [$(date)] \"checkout_gh_pages\""
  git clone --single-branch -b gh-pages "git@github.com:${GITHUB_REPOSITORY}.git" "/opt/porsche-ui-kit-gh-pages"
}

prepare_deployment() {
  echo "task: [$(date)] \"prepare_deployment\" (${1})"
  rm -rf "/opt/porsche-ui-kit-gh-pages/${1}"
}

copy_porsche_ui_kit() {
  echo "task: [$(date)] \"copy_porsche_ui_kit\" (${1})"
  mkdir -p "/opt/porsche-ui-kit-gh-pages/${1}"
  cp -r "./packages/design-system/dist/." "/opt/porsche-ui-kit-gh-pages/${1}"
}

add_deployment_version() {
  echo "task: [$(date)] \"add_deployment_version\" (${1})"
  mkdir -p "/opt/porsche-ui-kit-gh-pages/${1}"
  echo "${GITHUB_SHA}" > "/opt/porsche-ui-kit-gh-pages/${1}/version.md"
}

copy_latest_stable_sketch_library_and_create_rss_feed() {
  echo "task: [$(date)] \"copy_latest_stable_sketch_library_and_create_rss_feed\" (${1}, ${2})"
  mkdir -p "/opt/porsche-ui-kit-gh-pages/latest"
  cp "./sketch/${2}" "/opt/porsche-ui-kit-gh-pages/latest"
  cat << _EOF_ > "/opt/porsche-ui-kit-gh-pages/${2}.xml"
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:sparkle="http://www.andymatuschak.org/xml-namespaces/sparkle" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Porsche Design System</title>
    <description>Porsche Design System Sketch Library</description>
    <item>
      <title>${1} (v${P_LATEST_STABLE_SKETCH_VERSION})</title>
      <pubDate>${P_LATEST_STABLE_SKETCH_PUBLISH_DATE}</pubDate>
      <enclosure url="https://designsystem.porsche.com/latest/${2}" sparkle:version="${P_LATEST_STABLE_SKETCH_VERSION}" type="application/octet-stream"/>
    </item>
  </channel>
</rss>
_EOF_
}

copy_latest_stable_sketch_file() {
  echo "task: [$(date)] \"copy_latest_stable_sketch_file\" (${1})"
  mkdir -p "/opt/porsche-ui-kit-gh-pages/latest"
  cp "./sketch/${1}" "/opt/porsche-ui-kit-gh-pages/latest"
}

deploy_to_gh_pages() {
  echo "task: [$(date)] \"deploy_to_gh_pages\""
  pushd "/opt/porsche-ui-kit-gh-pages"
    git add -A
    git commit -m "Automated deployment of Porsche Design System (${P_WORKING_BRANCH}): ${GITHUB_SHA}" --allow-empty
    git push origin gh-pages --force-with-lease
  popd
}

verify_deployment() {
  echo "task: [$(date)] \"verify_deployment\" (${1})"
  local n=1
  local max=20
  local delay=60
  local http_response=""
  while true
  do
    http_response="$(curl -s -H "Cache-Control: no-cache" "https://designsystem.porsche.com/${1}/version.md")"
    echo "Check deployment status (${1}). Attempt ${n}/${max} (${http_response}). [$(date)]"
    if [[ "${http_response}" == "${GITHUB_SHA}" ]]; then
      echo "All right, deployment was verified (${1})."
      break
    elif [[ ${n} -lt ${max} ]]; then
      ((n++))
    else
      echo "Deployment could not be verified after ${n} attempts (${1})."
      exit 1
    fi
    sleep ${delay}
  done
}

isWorkingBranchLatestStableBranch() {
  if [[ "${P_WORKING_BRANCH}" == "${P_LATEST_STABLE_BRANCH}" ]]; then
    return 0
  fi
  return 1
}

setup
checkout_gh_pages
prepare_deployment "${P_WORKING_BRANCH}"
copy_porsche_ui_kit "${P_WORKING_BRANCH}"
add_deployment_version "${P_WORKING_BRANCH}"
if isWorkingBranchLatestStableBranch; then
  prepare_deployment "latest"
  copy_porsche_ui_kit "latest"
  add_deployment_version "latest"
  copy_latest_stable_sketch_file "porsche-ui-kit-layout-template.sketch"
  copy_latest_stable_sketch_file "porsche-ui-kit-colors.sketchpalette"
  copy_latest_stable_sketch_library_and_create_rss_feed "Porsche Design System App" "porsche-ui-kit-app.sketch"
  copy_latest_stable_sketch_library_and_create_rss_feed "Porsche Design System Basic" "porsche-ui-kit-basic.sketch"
  copy_latest_stable_sketch_library_and_create_rss_feed "Porsche Design System Web \"Prep\"" "porsche-ui-kit-web.prep.sketch"
  copy_latest_stable_sketch_library_and_create_rss_feed "Porsche Design System Web" "porsche-ui-kit-web.sketch"
fi
deploy_to_gh_pages
verify_deployment "${P_WORKING_BRANCH}"
if isWorkingBranchLatestStableBranch; then
  verify_deployment "latest"
fi
