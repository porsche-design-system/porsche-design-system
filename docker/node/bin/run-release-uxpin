#!/usr/bin/env bash

set -o errexit
set -o pipefail

if [[ -z "${UXPIN_TOKEN_DEV}" ]]; then
  echo "Please provide the \$UXPIN_TOKEN_DEV environment variable."
  exit 1
fi

if [[ -z "${UXPIN_TOKEN_LATEST}" ]]; then
  echo "Please provide the \$UXPIN_TOKEN_LATEST environment variable."
  exit 1
fi

is_version_published() {
  echo "task: [$(date)] \"is_version_published\" ${PACKAGE_NAME}@${PACKAGE_VERSION}"
  http_status_code="$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${PORSCHE_NPM_REGISTRY_TOKEN}" "https://porscheui.jfrog.io/porscheui/api/npm/npm/${PACKAGE_NAME}/${PACKAGE_VERSION}")"
  if [[ ${http_status_code} == 200 ]]; then
    return 0 # true
  else
    return 1 # false
  fi
}

publish() {
  echo "task: [$(date)] \"publish\""
  pushd "./packages/components-react/projects/uxpin-wrapper"
    uxpin_token=$UXPIN_TOKEN_DEV
    pushParam=""

    # TODO: how to handle v2, v3 branches?
    if [[ "${P_CURRENT_BRANCH}" == "master" ]]; then
      uxpin_token=$UXPIN_TOKEN_LATEST
      echo "Using UXPIN_TOKEN_LATEST"

      source "${SCRIPT_DIR}/../shared/ensure-artifactory-credentials.sh"
      if ! is_version_published; then
        pushParam="--tag ${PACKAGE_VERSION}"
      fi
    else
      echo "Using UXPIN_TOKEN_DEV"
      pushParam="--branch ${P_CURRENT_BRANCH}"
    fi
    echo "Adding param: ${pushParam}"

    result=$(./node_modules/.bin/uxpin-merge push --token ${uxpin_token} ${pushParam})
    echo "$result"
  popd

  if [[ ${result} == *"Library bundle uploaded successfully!"* ]]; then
    return 0 # true
  else
    return 1 # false
  fi
}

SCRIPT_DIR="$(cd $(dirname ${0}) && pwd)"
P_CURRENT_BRANCH="${GITHUB_REF:11}" # strip first 11 characters from "refs/heads/issue/1405"

PACKAGE_LOCATION="./packages/components-js/dist/components-wrapper"
PACKAGE_JSON="${PACKAGE_LOCATION}/package.json"
PACKAGE_NAME=$(grep name "${PACKAGE_JSON}" | head -1 | awk -F= "{ print ${2} }" | sed 's/[:,\",]//g;s/name//' | tr -d '[[:space:]]')
PACKAGE_VERSION=$(grep version "${PACKAGE_JSON}" | head -1 | awk -F= "{ print ${2} }" | sed 's/[:,\",]//g;s/version//' | tr -d '[[:space:]]')

if publish; then
  echo "New version of components-uxpin published ðŸŽ‰"
else
  echo "Publishing new version of components-uxpin failed ðŸ˜¢"
  exit 1
fi
