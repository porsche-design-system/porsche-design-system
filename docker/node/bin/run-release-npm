#!/usr/bin/env bash

set -o errexit
set -o pipefail

if [[ -z "${GITHUB_SHA}" ]]; then
  echo "Please provide the \$GITHUB_SHA environment variable."
  exit 1
fi

if [[ -z "${GITHUB_TOKEN}" ]]; then
  echo "Please provide the \$GITHUB_TOKEN environment variable."
  exit 1
fi

publish() {
  echo "task: [$(date)] \"publish\" (${PACKAGE_LOCATION})"
  result=$(yarn publish --non-interactive --registry=https://porscheui.jfrog.io/porscheui/api/npm/npm-local/ "${PACKAGE_LOCATION}")

  if [[ ${result} == *"Done"* ]]; then
    return 0 # true
  else
    return 1 # false
  fi
}

is_version_published() {
  echo "task: [$(date)] \"is_version_published\" ${PACKAGE_NAME}@${PACKAGE_VERSION}"
  http_status_code="$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${PORSCHE_NPM_REGISTRY_TOKEN}" "https://porscheui.jfrog.io/porscheui/api/npm/npm/${PACKAGE_NAME}/${PACKAGE_VERSION}")"

  if [[ ${http_status_code} == 200 ]]; then
    return 0 # true
  else
    return 1 # false
  fi
}

add_git_tag() {
  echo "task: [$(date)] \"add_git_tag\" ${GIT_TAG_NAME}, ${GITHUB_SHA}"
  curl -s -X POST "https://api.github.com/repos/porscheui/porsche-design-system/git/refs" \
    -H "Authorization: token ${GITHUB_TOKEN}" \
    -d @- <<EOF
{
  "ref": "refs/tags/${GIT_TAG_NAME}",
  "sha": "${GITHUB_SHA}"
}
EOF
}

SCRIPT_DIR="$(cd $(dirname ${0}) && pwd)"
source "${SCRIPT_DIR}/../shared/ensure-artifactory-credentials.sh"

PACKAGE_LOCATION="${1}"
PACKAGE_JSON="${PACKAGE_LOCATION}/package.json"
PACKAGE_NAME=$(grep name "${PACKAGE_JSON}" | head -1 | awk -F= "{ print ${2} }" | sed 's/[:,\",]//g;s/name//' | tr -d '[[:space:]]')
PACKAGE_VERSION=$(grep version "${PACKAGE_JSON}" | head -1 | awk -F= "{ print ${2} }" | sed 's/[:,\",]//g;s/version//' | tr -d '[[:space:]]')
GIT_TAG_NAME="${PACKAGE_NAME:23}-v${PACKAGE_VERSION}"

if ! is_version_published; then
  if publish; then
    add_git_tag
    echo "Version \"${PACKAGE_VERSION}\" of \"${PACKAGE_NAME}\" published 🎉"
  else
    echo "Publishing version \"${PACKAGE_VERSION}\" of \"${PACKAGE_NAME}\" failed 😢"
    exit 1
  fi
else
  echo "Version \"${PACKAGE_VERSION}\" of \"${PACKAGE_NAME}\" is already published 🤷‍♂️"
fi
