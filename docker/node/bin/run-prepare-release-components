#!/usr/bin/env bash

set -o errexit
set -o pipefail

if [[ -z "${1}" ]]; then
  echo "Please provide a target version, e.g. './docker.sh run-prepare-release-components 1.2.3'"
  exit 1
fi

pushd "./packages/components"
  # version is needed for tracking pixel to work properly
  yarn version --no-git-tag-version --new-version "${1}"
  sed -i -e "s/### \[Unreleased\]/### \[Unreleased\]\n\n### \[${1}\] - $(date +'%F')/" "./CHANGELOG.md"
popd

# update "components" in packages
packages=( "components-js" "partials" )
for pkg in ${packages[@]}; do
  pushd "./packages/${pkg}"
    sed -i -E -e 's$("@porsche-design-system/components": )(".*")$\1"'${1}'"$' package.json
  popd
done

# update "components-js" in wrapper projects
packages=( "components-js" "components-angular" "components-react" )
for pkg in ${packages[@]}; do
  pushd "./packages/${pkg}/projects/components-wrapper"
    yarn version --no-git-tag-version --new-version "${1}"
    sed -i -E -e 's$("@porsche-design-system/components-js": )(".*")$\1"'${1}'"$' package.json
  popd
done

# update "wrapper packages" in packages
packages=( "components-angular" "components-react" )
for pkg in ${packages[@]}; do
  pushd "./packages/${pkg}"
    sed -i -E -e 's$("@porsche-design-system/'${pkg}'": )(".*")$\1"'${1}'"$' package.json
  popd
done

# update "components-js" in packages
packages=( "components-js" "storefront" )
for pkg in ${packages[@]}; do
  pushd "./packages/${pkg}"
    sed -i -E -e 's$("@porsche-design-system/components-js": )(".*")$\1"'${1}'"$' package.json
  popd
done
