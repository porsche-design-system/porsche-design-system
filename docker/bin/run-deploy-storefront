#!/usr/bin/env bash

set -o errexit
set -o pipefail

if [[ -z "${GH_REPOSITORY_STOREFRONT}" ]]; then
  echo "Please provide the \$GH_REPOSITORY_STOREFRONT environment variable."
  exit 1
fi

if [[ -z "${GITHUB_ACTOR}" ]]; then
  echo "Please provide the \$GITHUB_ACTOR environment variable."
  exit 1
fi

if [[ -z "${GITHUB_REF_TYPE}" ]]; then
  echo "Please provide the \$GITHUB_REF_TYPE environment variable."
  exit 1
fi

if [[ -z "${GITHUB_REF_NAME}" ]]; then
  echo "Please provide the \$GITHUB_REF_NAME environment variable."
  exit 1
fi

if [[ -z "${GITHUB_SHA}" ]]; then
  echo "Please provide the \$GITHUB_SHA environment variable."
  exit 1
fi

if [[ -z "$(ls -A ./packages/storefront/dist)" ]]; then
  echo "Please provide the build artifact."
  exit 1
fi

if [[ -z "${ALGOLIA_APP_ID}" ]]; then
  echo "Please provide the \$ALGOLIA_APP_ID environment variable."
  exit 1
fi

if [[ -z "${ALGOLIA_API_KEY}" ]]; then
  echo "Please provide the \$ALGOLIA_API_KEY environment variable."
  exit 1
fi

setup() {
  echo "task: [$(date)] \"setup\""
  git config --global --add safe.directory /github/workspace # fix detected dubious ownership in repository at '/github/workspace'
  git config --global user.name "${GITHUB_ACTOR}"
  git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
  git remote set-url origin "${GH_REPOSITORY_STOREFRONT}"
}

checkout_gh_pages() {
  echo "task: [$(date)] \"checkout_gh_pages\""
  git clone --single-branch -b main "${GH_REPOSITORY_STOREFRONT}" "/opt/porsche-design-system-gh-pages"
}

add_deployment_version() {
  echo "task: [$(date)] \"add_deployment_version\""
  echo "${GITHUB_SHA}" > "./packages/storefront/dist/version.md"
}

prepare_deployment() {
  echo "task: [$(date)] \"prepare_deployment\" (${1})"
  rm -rf "/opt/porsche-design-system-gh-pages/${1}"
}

update_base_tag() {
  echo "task: [$(date)] \"update_base_tag\" (${1})"
  pushd "./packages/storefront/dist"
    find . -type f -name "index.html" -exec sed -i -E -e 's$<base href="/">$<base href="/'${1}'/">$' {} +
  popd
}

copy_storefront() {
  echo "task: [$(date)] \"copy_storefront\" (${1})"
  mkdir -p "/opt/porsche-design-system-gh-pages/${1}"
  cp -r "./packages/storefront/dist/." "/opt/porsche-design-system-gh-pages/${1}"
}

deploy_to_gh_pages() {
  echo "task: [$(date)] \"deploy_to_gh_pages\""
  pushd "/opt/porsche-design-system-gh-pages"
    git add -A
    git commit -m "Automated deployment to GitHub Pages (${1}): ${GITHUB_SHA}" --allow-empty
    git push origin main --force
  popd
}

update_algolia_index(){
  echo "task: [$(date)] \"update_algolia_index\" (${1})"
  pushd "./packages/storefront"
    yarn build:prepareChangelog
  popd
  result=$(P_CURRENT_BRANCH=${1} yarn updateAlgolia)
  echo $result | sed "s/.*updateAlgoliaIndex\\.ts' //g"
}

SCRIPT_DIR="$(cd `dirname ${0}` && pwd)"

source "${SCRIPT_DIR}/../shared/ensure-github-credentials.sh"

if [[ "${GITHUB_REF_TYPE}" == "branch" ]]; then
  setup
  checkout_gh_pages
  add_deployment_version
  if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
    prepare_deployment "nightly"
    update_base_tag "nightly"
    copy_storefront "nightly"
    deploy_to_gh_pages "nightly"
    update_algolia_index "nightly"
  else
    prepare_deployment "${GITHUB_REF_NAME}"
    update_base_tag "${GITHUB_REF_NAME}"
    copy_storefront "${GITHUB_REF_NAME}"
    deploy_to_gh_pages "${GITHUB_REF_NAME}"
    if [[ "${GITHUB_REF_NAME}" == v* ]]; then
      update_algolia_index "${GITHUB_REF_NAME}"
    fi
  fi
fi
