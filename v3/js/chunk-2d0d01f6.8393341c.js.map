{"version":3,"sources":["webpack:///../components/src/components/pin-code/pin-code.examples.md","webpack:///../components/src/components/pin-code/pin-code-utils.ts","webpack:///../components/src/components/pin-code/pin-code.examples.md?6ed2","webpack:///../components/src/components/pin-code/pin-code.examples.md?b146","webpack:///../components/src/components/pin-code/pin-code.examples.md?8830"],"names":["render","_vm","this","_c","_self","_setupProxy","staticClass","attrs","_m","_v","hideLabelMarkup","config","hideLabels","model","value","hideLabel","callback","$$v","expression","withDescriptionText","lengthMarkup","lengths","length","typeMarkup","types","type","stateMarkup","states","state","disabledMarkup","loadingMarkup","requiredMarkup","slots","formExample","on","$event","preventDefault","onSubmit","apply","arguments","theme","staticStyle","_s","submittedValue","eventHandlingExample","currentValueControlled","onUpdate","isComplete","staticRenderFns","PIN_CODE_LENGTHS","Code","Vue","constructor","args","_defineProperty","themeable","getAnchorLink","FORM_STATES","getPinCodeCodeSamples","attr","e","detail","formData","FormData","target","Array","from","values","join","$store","getters","playgroundTheme","__decorate","Component","component"],"mappings":"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","file":"js/chunk-2d0d01f6.8393341c.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"vmark\"},[_c('ComponentHeading',{attrs:{\"name\":\"Pin Code\"}}),_vm._m(0),_c('p',[_vm._v(\"A few things to note:\")]),_vm._m(1),_c('TableOfContents'),_c('h2',[_vm._v(\"Basic\")]),_vm._m(2),_c('Playground',{attrs:{\"markup\":_vm.hideLabelMarkup,\"config\":_vm.config}},[_c('PlaygroundSelect',{attrs:{\"values\":_vm.hideLabels,\"name\":\"hideLabel\"},model:{value:(_vm.hideLabel),callback:function ($$v) {_vm.hideLabel=$$v},expression:\"hideLabel\"}})],1),_c('h2',[_vm._v(\"With description text\")]),_vm._m(3),_c('Playground',{attrs:{\"markup\":_vm.withDescriptionText,\"config\":_vm.config}}),_c('h2',[_vm._v(\"Length\")]),_vm._m(4),_c('Playground',{attrs:{\"markup\":_vm.lengthMarkup,\"config\":_vm.config}},[_c('PlaygroundSelect',{attrs:{\"values\":_vm.lengths},model:{value:(_vm.length),callback:function ($$v) {_vm.length=$$v},expression:\"length\"}})],1),_c('h2',[_vm._v(\"Type\")]),_vm._m(5),_c('Playground',{attrs:{\"markup\":_vm.typeMarkup,\"config\":_vm.config}},[_c('PlaygroundSelect',{attrs:{\"values\":_vm.types},model:{value:(_vm.type),callback:function ($$v) {_vm.type=$$v},expression:\"type\"}})],1),_c('h2',[_vm._v(\"Validation states\")]),_vm._m(6),_c('Playground',{attrs:{\"markup\":_vm.stateMarkup,\"config\":_vm.config}},[_c('PlaygroundSelect',{attrs:{\"values\":_vm.states,\"name\":\"state\"},model:{value:(_vm.state),callback:function ($$v) {_vm.state=$$v},expression:\"state\"}})],1),_c('h2',[_vm._v(\"Disabled\")]),_c('Playground',{attrs:{\"markup\":_vm.disabledMarkup,\"config\":_vm.config}}),_c('h3',[_c('A11yIcon'),_vm._v(\" Accessibility hints\")],1),_vm._m(7),_c('h2',[_vm._v(\"Loading\")]),_c('Playground',{attrs:{\"markup\":_vm.loadingMarkup,\"config\":_vm.config}}),_c('h2',[_vm._v(\"Required\")]),_c('Playground',{attrs:{\"markup\":_vm.requiredMarkup,\"config\":_vm.config}}),_c('h2',[_vm._v(\"Slots\")]),_vm._m(8),_c('Playground',{attrs:{\"markup\":_vm.slots,\"config\":_vm.config}}),_c('h2',[_vm._v(\"Framework Implementation (within form)\")]),_vm._m(9),_c('Playground',{attrs:{\"frameworkMarkup\":_vm.formExample,\"config\":_vm.config}},[_c('form',{on:{\"submit\":function($event){$event.preventDefault();return _vm.onSubmit.apply(null, arguments)}}},[_c('p-pin-code',{attrs:{\"theme\":_vm.theme,\"label\":\"Some Label\",\"name\":\"pin-code\"}}),_c('p-button',{staticStyle:{\"margin\":\"1rem 0\"},attrs:{\"theme\":_vm.theme,\"type\":\"submit\"}},[_vm._v(\"Submit\")])],1),_c('p-text',{attrs:{\"theme\":_vm.theme}},[_vm._v(\"Last submitted data: \"+_vm._s(_vm.submittedValue))])],1),_c('h2',[_vm._v(\"Framework implementation (controlled)\")]),_vm._m(10),_c('Playground',{attrs:{\"frameworkMarkup\":_vm.eventHandlingExample,\"config\":_vm.config}},[_c('p-pin-code',{attrs:{\"theme\":_vm.theme,\"label\":\"Some Label\",\"value\":_vm.currentValueControlled},on:{\"update\":_vm.onUpdate}}),_c('p-text',{staticStyle:{\"margin\":\"1rem 0\"},attrs:{\"theme\":_vm.theme}},[_vm._v(\"Current value: \"+_vm._s(_vm.currentValueControlled))]),_c('p-text',{attrs:{\"theme\":_vm.theme}},[_vm._v(\"Completely filled: \"+_vm._s(_vm.isComplete))])],1),_c('h2',[_vm._v(\"Copy+Paste and autocomplete\")]),_vm._m(11),_vm._m(12),_vm._m(13),_vm._m(14),_c('Playground',{attrs:{\"markup\":_vm.hideLabelMarkup,\"config\":_vm.config}},[_c('PlaygroundSelect',{attrs:{\"values\":_vm.hideLabels,\"name\":\"hideLabel\"},model:{value:(_vm.hideLabel),callback:function ($$v) {_vm.hideLabel=$$v},expression:\"hideLabel\"}})],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"The \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\" component is optimized for entering sequences of digits. The most common use case is for entering one-time-passwords (OTP) or pin codes. The input fields allow only one digit at a time. When a digit is entered, the focus shifts automatically to the next input, until every input is filled.\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('ul',[_c('li',[_vm._v(\"Only digits can be entered.\")]),_c('li',[_vm._v(\"Only one digit can be entered per input.\")]),_c('li',[_vm._v(\"Pressing \"),_c('code',[_vm._v(\"Delete\")]),_vm._v(\" or \"),_c('code',[_vm._v(\"Backspace\")]),_vm._v(\": If the focussed input is blank and \"),_c('code',[_vm._v(\"Delete\")]),_vm._v(\"/\"),_c('code',[_vm._v(\"Backspace\")]),_vm._v(\" is pressed the focus transfers to the next/previous input, and clears the value of the next/previous input (if any). This avoids the need to explicitly \"),_c('code',[_vm._v(\"Shift+Tab & Delete\")]),_vm._v(\"/ \"),_c('code',[_vm._v(\"Tab & Backspace\")]),_vm._v(\".\")])])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"A \"),_c('code',[_vm._v(\"label\")]),_vm._v(\" is a caption which informs the user what information a particular form field is asking for. The \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\" component can be used with or without a label, but it's recommended to keep the label visible for better accessibility whenever possible. When used without a label, it's best practice to provide a descriptive label text for screen readers.\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"A description text can be added to explain the meaning of the form field. It's meant to be a textual enhancement of the label text and is technically related to the \"),_c('code',[_vm._v(\"hide-label\")]),_vm._v(\" property.\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"By default, the \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\" component renders four input fields. For other security codes you can choose to set the \"),_c('code',[_vm._v(\"length\")]),_vm._v(\" prop between \"),_c('code',[_vm._v(\"1\")]),_vm._v(\" and \"),_c('code',[_vm._v(\"6\")]),_vm._v(\".\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"When collecting private or sensitive information, the entered value might be masked. The security code can be masked by setting the prop \"),_c('code',[_vm._v(\"type\")]),_vm._v(\" to \"),_c('code',[_vm._v(\"password\")]),_vm._v(\". Even with \"),_c('code',[_vm._v(\"type=password\")]),_vm._v(\", the input fields of the \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\" component allow digits only.\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"The \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\" component supports the visualisation of inline validation. The \"),_c('code',[_vm._v(\"message\")]),_vm._v(\" is colored and visible/hidden depending on the defined \"),_c('code',[_vm._v(\"state\")]),_vm._v(\".\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"In general, you should \"),_c('strong',[_vm._v(\"prevent\")]),_vm._v(\" using the \"),_c('code',[_vm._v(\"disabled=\\\"true\\\"\")]),_vm._v(\" state. Disabled elements are not reachable (focusable) anymore and can be missed by screen reader users. They can be confusing for sighted users as well by not pointing out why these elements are disabled. A good practice when to use the disabled state is during \"),_c('strong',[_vm._v(\"form submission\")]),_vm._v(\" to prevent changes while this process is performed.\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"Sometimes it's useful to be able to render markup (e.g. an anchor tag) for \"),_c('code',[_vm._v(\"label\")]),_vm._v(\", \"),_c('code',[_vm._v(\"description\")]),_vm._v(\" or \"),_c('code',[_vm._v(\"message\")]),_vm._v(\". Therefore, a named slot can be used. Make sure \"),_c('strong',[_vm._v(\"not\")]),_vm._v(\" to define the corresponding property on the host element when a named slot is used (because a property definition is preferred over a named slot). For named slots only \"),_c('a',{attrs:{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content\"}},[_vm._v(\"phrasing content\")]),_vm._v(\" is allowed.\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"When used within a form element, the \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\" component creates a native hidden input in light DOM to process the \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\"'s value. This is required due to the constraints of shadow DOM boundaries. To ensure proper submission of the form, it's required to provide an individual \"),_c('code',[_vm._v(\"name\")]),_vm._v(\" prop to the \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\" component. The prop will be shared with the hidden input in light DOM', enabling the \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\"'s value to be included in the form's data when it is submitted.\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"We do not envision a lot of scenarios where you would need this level of control, however the \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\" can be used as a controlled component. This means it does not contain any internal state, and you got full control over its behavior. Any change of the input's values triggers a custom update event and the value is updated immediately. The prop \"),_c('code',[_vm._v(\"value\")]),_vm._v(\" is an array of strings synchronized with the input's values.\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"By default, only one input can be changed at a time. The \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\" component also supports copying and pasting a value and OTP auto-suggestion on mobile.\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"The \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\" component performs basic validation of the pasted value:\")])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('ul',[_c('li',[_vm._v(\"If the pasted string is too long the \"),_c('code',[_vm._v(\"p-pin-code\")]),_vm._v(\" attempts to fill in the other inputs.\")]),_c('li',[_vm._v(\"If the pasted value contains whitespaces, these will be removed.\")]),_c('li',[_vm._v(\"If the value contains other characters than digits, the value can not be pasted.\")])])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('p',[_vm._v(\"Try copy+paste \"),_c('code',[_vm._v(\"1234\")]),_vm._v(\" into any of the inputs in the example below.\")])\n}]\n\nexport { render, staticRenderFns }","import type { FormState } from '../../utils/form/form-state';\nimport type { Styles } from 'jss';\nimport { consoleWarn, getPrefixedTagNames, getTagNameWithoutPrefix, setAttributes } from '../../utils';\n\nexport const PIN_CODE_TYPES = ['number', 'password'] as const;\nexport type PinCodeType = (typeof PIN_CODE_TYPES)[number];\n\nexport const PIN_CODE_LENGTHS = [1, 2, 3, 4, 5, 6] as const;\nexport type PinCodeLength = (typeof PIN_CODE_LENGTHS)[number];\n\n/** @deprecated */\nexport type PinCodeUpdateEvent = { value: string; isComplete: boolean };\nexport type PinCodeUpdateEventDetail = PinCodeUpdateEvent;\n\nexport type PinCodeState = FormState;\n\nexport type HTMLInputElementEventTarget = {\n  target: HTMLInputElement & { previousElementSibling: HTMLInputElement; nextElementSibling: HTMLInputElement };\n};\n\nexport const removeSlottedSelector = (styles: Styles): Styles =>\n  Object.fromEntries(\n    Object.entries(styles).map(([key, value]) => {\n      value = typeof value === 'object' ? removeSlottedSelector(value as Styles) : value;\n      return [key.replace(/::slotted\\(([^,]+)\\)/g, '$1'), value];\n    })\n  );\n\nexport const removeStyles = (selector: string, styles: Styles): Styles =>\n  Object.fromEntries(\n    Object.entries(styles)\n      .filter(([key]) => key !== selector)\n      .map(([key, value]) => {\n        value = typeof value === 'object' ? removeStyles(selector, value as Styles) : value;\n        return [key, value];\n      })\n  );\n\nexport const warnAboutTransformedValue = (host: HTMLElement, length?: number): void => {\n  const warningPrefix = `Property value of component ${getTagNameWithoutPrefix(host)}:`;\n  consoleWarn(\n    warningPrefix,\n    length\n      ? `Provided value has too many characters and was truncated to the max length of ${length}.`\n      : 'Provided value contains characters that are not of type number, the value was therefore reset.'\n  );\n};\n\nexport const isInputOnlyDigits = (input: string): boolean => /^[0-9]*$/.test(input);\n\nexport const hasInputOnlyDigitsOrWhitespaces = (input: string): boolean => /^[\\d ]+$/.test(input);\n\nexport const getConcatenatedInputValues = (pinCodeElements: HTMLInputElement[]): string =>\n  pinCodeElements.map((el) => el.value || ' ').join('');\n\n// reset value if it contains invalid characters and cut string if pasted value is longer than pin code length\nexport const getSanitisedValue = (host: HTMLElement, value: string, length: number): string => {\n  if (value && !hasInputOnlyDigitsOrWhitespaces(value)) {\n    warnAboutTransformedValue(host);\n    return '';\n  } else if (removeWhiteSpaces(value)?.length > length) {\n    warnAboutTransformedValue(host, length);\n    return value.slice(0, length);\n  } else {\n    return value;\n  }\n};\n\nexport const removeWhiteSpaces = (value): string => value.replace(/\\s/g, '');\n\nexport const initHiddenInput = (\n  host: HTMLElement,\n  name: string,\n  value: string,\n  disabled: boolean,\n  required: boolean\n): HTMLInputElement => {\n  const hiddenInput = document.createElement('input');\n  setAttributes(hiddenInput, {\n    'aria-hidden': 'true',\n    slot: 'internal-input',\n    tabindex: '-1',\n  });\n  syncHiddenInput(hiddenInput, name, value, disabled, required);\n  host.prepend(hiddenInput);\n  return hiddenInput;\n};\n\nexport const syncHiddenInput = (\n  hiddenInput: HTMLInputElement,\n  name: string,\n  value: string,\n  disabled: boolean,\n  required: boolean\n): void => {\n  setAttributes(hiddenInput, {\n    ...(name && { name }),\n    value: removeWhiteSpaces(value),\n  });\n  hiddenInput.toggleAttribute('disabled', disabled);\n  hiddenInput.toggleAttribute('required', required);\n};\n\n// This reproduces native behavior where the form is only submittable under certain circumstances\nexport const isFormSubmittable = (host: HTMLElement, form: HTMLFormElement): boolean => {\n  const PrefixedTagNames = getPrefixedTagNames(host);\n\n  return !!(\n    form.querySelectorAll('input:not([type=submit]):not([type=hidden])').length === 1 || // other sibling form elements e.g. select, textarea do not prevent submission\n    Array.from(\n      form.querySelectorAll(\n        `${PrefixedTagNames.pButton},${PrefixedTagNames.pButtonPure},button[type=submit],input[type=submit]`\n      )\n    ).some((el) => (el as HTMLButtonElement).type === 'submit')\n  );\n};\n\n/**\n * Determines if the current input element corresponds to the first non-filled input\n *\n * @param {number} index - The index of the current input element.\n * @param {string} value - The input value.\n * @param {number} length - The total number of input elements.\n * @returns {boolean} - True if the current input should have a specific identifier, indicating it corresponds to the first non-filled input; otherwise, false.\n */\nexport const isCurrentInput = (index: number, value: string, length: number): boolean => {\n  if (!value) {\n    return index === 0; // No value entered at all: set current-input id on the first input element\n  }\n  const firstWhitespaceIndex = value.indexOf(' ');\n  if (firstWhitespaceIndex === -1) {\n    return index === length - 1; // All inputs have a value: set current-input id on the last input element\n  }\n  return index === firstWhitespaceIndex; // Some value is entered: set current-input id on the first input element which does not have a value\n};\n","\nimport Vue from 'vue';\nimport Component from 'vue-class-component';\nimport { getPinCodeCodeSamples } from '@porsche-design-system/shared';\nimport { FORM_STATES } from '../../utils';\nimport { PIN_CODE_LENGTHS } from './pin-code-utils';\nimport { getAnchorLink } from '@/utils';\n \n@Component\nexport default class Code extends Vue {\n  config = { themeable: true };\n  eventHandlingUrl = getAnchorLink('event-handling');\n\n  hideLabel = false;\n  hideLabels = [false, true, '{ base: true, l: false }'];\n  get hideLabelMarkup() {\n    return `<p-pin-code label=\"Some label\" hide-label=\"${this.hideLabel}\"></p-pin-code>`;\n  }\n\n  withDescriptionText = `<p-pin-code label=\"Some label\" description=\"Some description\"></p-pin-code>`;\n\n  length = 4;\n  lengths = PIN_CODE_LENGTHS;\n  get lengthMarkup() {\n    return `<p-pin-code label=\"Some label\" length=\"${this.length}\"></p-pin-code>`;\n  }\n\n  type = 'number';\n  types = ['number', 'password'];\n  get typeMarkup() {\n    return `<p-pin-code label=\"Some label\" type=\"${this.type}\"></p-pin-code>`;\n  }\n\n  state = 'error';\n  states = FORM_STATES;\n  get stateMarkup() {\n    const attr = `message=\"${this.state !== 'none' ? `Some ${this.state} validation message.` : ''}\"`;\n    return `<p-pin-code label=\"Some label\" state=\"${this.state}\" ${attr}></p-pin-code>`;\n  }\n\n  disabledMarkup = `<p-pin-code label=\"Some label\" disabled=\"true\"></p-pin-code>`;\n\n  loadingMarkup = `<p-pin-code label=\"Some label\" loading=\"true\"></p-pin-code>`;\n\n  requiredMarkup = `<p-pin-code label=\"Some label\" required=\"true\"></p-pin-code>`;\n\n  slots =\n`<p-pin-code state=\"error\">\n    <span slot=\"label\" id=\"some-label-id\">\n      Some label with a <a href=\"https://designsystem.porsche.com\">link</a>.\n    </span>\n    <span slot=\"description\" id=\"some-description-id\">\n      Some description with a <a href=\"https://designsystem.porsche.com\">link</a>.\n    </span>\n    <span slot=\"message\" id=\"some-message-id\">\n      Some error message with a <a href=\"https://designsystem.porsche.com\">link</a>.\n    </span>\n  </p-pin-code>`;\n\n  currentValueControlled = '';\n  isComplete = false;\n  onUpdate(e): void {\n    this.currentValueControlled = e.detail.value;\n    this.isComplete = e.detail.isComplete;\n  }\n  eventHandlingExample = getPinCodeCodeSamples('example-controlled');\n\n  submittedValue = 'none';\n  formExample = getPinCodeCodeSamples('default');\n  onSubmit(e) {\n    const formData = new FormData(e.target);\n    this.submittedValue = Array.from(formData.values()).join() || 'none';\n  }\n\n  get theme(): Theme {\n    return this.$store.getters.playgroundTheme;\n  }\n}\n","import mod from \"-!../../../../storefront/node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../storefront/node_modules/thread-loader/dist/cjs.js!../../../../storefront/node_modules/babel-loader/lib/index.js!../../../../storefront/node_modules/ts-loader/index.js??ref--14-3!../../../../storefront/node_modules/vue-loader/lib/index.js!../../../../../node_modules/vmark-loader/index.js!./pin-code.examples.md?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../../storefront/node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../storefront/node_modules/thread-loader/dist/cjs.js!../../../../storefront/node_modules/babel-loader/lib/index.js!../../../../storefront/node_modules/ts-loader/index.js??ref--14-3!../../../../storefront/node_modules/vue-loader/lib/index.js!../../../../../node_modules/vmark-loader/index.js!./pin-code.examples.md?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./pin-code.examples.md?vue&type=template&id=7c355eba\"\nimport script from \"./pin-code.examples.md?vue&type=script&lang=ts\"\nexport * from \"./pin-code.examples.md?vue&type=script&lang=ts\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../storefront/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}