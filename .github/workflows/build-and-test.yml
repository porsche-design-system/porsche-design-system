on:
  workflow_call:
    secrets:
      github-token:
        description: 'github token for container registry'
        required: true
name: 'Build and Test'
env:
  PDS_PLAYWRIGHT_DOCKER_IMAGE: ghcr.io/porsche-design-system/porsche-design-system/playwright:v1.35.1-focal
jobs:
  components-unit:
    name: 'Components Unit'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build Core Dependencies'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --core-dependencies
      - name: 'Lint'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-lint
          args: --components
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --components
  components-js-unit:
    name: 'Components JS Unit'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build Core Dependencies'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --core-dependencies
      - name: 'Unit Test Components Manager Core'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --components-js:components-manager-core
      - name: 'Build Components Prod'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-prod
      - name: 'Build Components JS Prod'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-js-prod
      - name: 'Unit Test Components Wrapper'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --components-js:components-wrapper
      - name: 'Unit Test jsdom-polyfill'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --components-js:jsdom-polyfill
      - name: 'Unit Test Partials'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --components-js:partials
      - name: 'Unit Regression'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: components-js-unit-regression
          path: ./packages/components-js/tests/unit/results
  components-js-e2e-puppeteer:
    name: 'Components JS E2E (Puppeteer)'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'E2E Test (Puppeteer)'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-e2e-puppeteer
          args: --components-js
  components-js-e2e-playwright:
    name: 'Components JS E2E (Playwright)'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'E2E Test (Playwright)'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-e2e-playwright
          args: --components-js
  components-js-vrt-puppeteer:
    name: 'Components JS VRT (Puppeteer)'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'VRT Test (Puppeteer)'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-vrt-puppeteer
          args: --components-js
      - name: 'VRT Regression (Puppeteer)'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: components-js-vrt-puppeteer-regression
          path: ./packages/components-js/tests/vrt/puppeteer/results
  components-js-vrt-playwright:
    name: 'Components JS VRT (Playwright)'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'VRT Test (Playwright)'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-vrt-playwright
          args: --components-js
      - name: 'VRT Regression (Playwright)'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: components-js-vrt-playwright-regression
          path: ./packages/components-js/tests/vrt/playwright/results
  components-angular:
    name: 'Components Angular'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'Build Components Angular'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-angular
      - name: 'Unit Test (Jest)'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --components-angular:jest
      - name: 'Unit Test (Karma)'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --components-angular:karma
      - name: 'E2E Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-e2e
          args: --components-angular
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-vrt
          args: --components-angular
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: components-angular-vrt-regression
          path: ./packages/components-angular/tests/vrt/results
  components-react:
    name: 'Components React'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'Build Components React'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-react
      - name: 'Unit Test react-wrapper'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --components-react:react-wrapper
      - name: 'Unit Test uxpin-wrapper'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --components-react:uxpin-wrapper
      - name: 'E2E Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-e2e
          args: --components-react
      - name: 'VRT Test components-react'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-vrt
          args: --components-react
      - name: 'VRT Regression components-react'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: components-react-vrt-regression
          path: ./packages/components-react/tests/vrt/results
  components-react-remix:
    name: 'Components React Remix'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'Build Components React'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-react
      - name: 'VRT Test components-react/remix'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-vrt
          args: --components-react/remix
      - name: 'VRT Regression components-react/remix'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: components-react-remix-vrt-regression
          path: ./packages/components-react/projects/remix/tests/vrt/results
  components-react-nextjs:
    name: 'Components React NextJS'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'Build Components React'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-react
      - name: 'Build Remix' # remix build is checked as part of nextjs unit tests
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-react/remix
      - name: 'E2E Test components-react/nextjs'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-e2e
          args: --components-react/nextjs
      - name: 'VRT Test components-react/nextjs'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-vrt
          args: --components-react/nextjs
      - name: 'Unit Test react-ssr-wrapper'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --components-react:react-ssr-wrapper
      - name: 'VRT Regression components-react/nextjs'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: components-react-nextjs-vrt-regression
          path: ./packages/components-react/projects/nextjs/tests/vrt/results
  components-vue:
    name: 'Components Vue'
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v3
    - name: 'Setup and install'
      uses: ./.github/actions/setup-and-install
      with:
        github-token: ${{ secrets.github-token }}
    - name: 'Build assets, component-meta, components, components-js, shared and utilities'
      uses: ./.github/actions/build-components-js
    - name: 'Lint'
      uses: ./.github/actions/docker-run-playwright
      with:
        entrypoint: run-lint
        args: --components-vue
    - name: 'Build Components Vue'
      uses: ./.github/actions/docker-run-playwright
      with:
        entrypoint: run-build
        args: --components-vue
    - name: 'Unit Test vue-wrapper'
      uses: ./.github/actions/docker-run-playwright
      with:
        entrypoint: run-test-unit
        args: --components-vue
    - name: 'E2E Test components-vue'
      uses: ./.github/actions/docker-run-playwright
      with:
        entrypoint: run-test-e2e
        args: --components-vue
    - name: 'VRT Test components-vue'
      uses: ./.github/actions/docker-run-playwright
      with:
        entrypoint: run-test-vrt
        args: --components-vue
    - name: 'VRT Regression components-vue'
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: components-vue-vrt-regression
        path: ./packages/components-vue/tests/vrt/results
  crawler-e2e-puppeteer:
    name: 'Crawler E2E (Puppeteer)'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'E2E Test (Puppeteer)'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-e2e
          args: --crawler
  fallbacks:
    name: 'Fallbacks'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build Shared'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --shared
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --fallbacks
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-vrt
          args: --fallbacks
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: fallbacks-vrt-regression
          path: ./packages/fallbacks/tests/vrt/results
  component-meta:
    name: 'Component Meta'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build Core Dependencies'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --core-dependencies
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --component-meta
  shared:
    name: 'Shared'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build Shared'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --shared
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --shared
  storefront-unit:
    name: 'Storefront Unit'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'Build Components Angular'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-angular
      - name: 'Build Components React'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-react
      - name: 'Lint'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-lint
          args: --storefront
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --storefront
  storefront-e2e:
    name: 'Storefront E2E'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'Build Components Angular'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-angular
      - name: 'Build Components React'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-react
      - name: 'E2E Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-e2e
          args: --storefront
      - name: 'E2E Regression'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: storefront-e2e-regression
          path: ./packages/storefront/tests/e2e/results
  storefront-a11y:
    name: 'Storefront a11y'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'Build Components Angular'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-angular
      - name: 'Build Components React'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-react
      - name: 'a11y Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-a11y
          args: --storefront
      - name: 'a11y Regression'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: storefront-a11y-regression
          path: ./packages/storefront/tests/e2e/results
  storefront-vrt:
    name: 'Storefront VRT'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build assets, component-meta, components, components-js, shared and utilities'
        uses: ./.github/actions/build-components-js
      - name: 'Build Components Angular'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-angular
      - name: 'Build Components React'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --components-react
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-vrt
          args: --storefront
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: storefront-vrt-regression
          path: ./packages/storefront/tests/vrt/results
  production-builds:
    name: 'Production Builds'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build Core Dependencies'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build-prod
          args: --core-dependencies
      - name: 'Build Components Prod'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build-prod
          args: --components
      - name: 'Build Components JS Prod'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build-prod
          args: --components-js
      - name: 'Build Components Angular Prod'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build-prod
          args: --components-angular
      - name: 'Build Components React Prod'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build-prod
          args: --components-react
      - name: 'Build Components Vue Prod'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build-prod
          args: --components-vue
      - name: 'Build Storefront Prod'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build-prod
          args: --storefront
      - name: 'Store Assets CDN Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: assets-cdn
          path: ./packages/assets/cdn
      - name: 'Store Assets Build Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: assets-build
          path: ./packages/assets/dist
      - name: 'Store Components JS Build Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: components-js-prod-build
          path: ./packages/components-js/dist
      - name: 'Store Components Angular Build Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: components-angular-prod-build
          path: ./packages/components-angular/dist/angular-wrapper
      - name: 'Store Components React Build Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: components-react-prod-build
          path: ./packages/components-react/dist/react-wrapper
      - name: 'Store Components UXPin Source Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: components-uxpin-source
          path: |
            ./packages/components-react/projects/uxpin-wrapper/src
            ./packages/components-react/projects/uxpin-wrapper/uxpin.config.js
      - name: 'Store Components Vue Build Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: components-vue-prod-build
          path: ./packages/components-vue/dist/vue-wrapper
      - name: 'Store Chunks Manifest Build Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: components-js-chunks-manifest-prod-build
          path: ./packages/components-js/projects/components-wrapper/lib
      - name: 'Store Shared Build Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: shared-build
          path: ./packages/shared/dist
      - name: 'Store Storefront Build Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: storefront-build
          path: ./packages/storefront/dist
  utilities:
    name: 'Utilities'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Setup and install'
        uses: ./.github/actions/setup-and-install
        with:
          github-token: ${{ secrets.github-token }}
      - name: 'Build Core Dependencies'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-build
          args: --core-dependencies
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run-playwright
        with:
          entrypoint: run-test-unit
          args: --utilities

