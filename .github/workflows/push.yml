on:
  push:
    branches:
      - master
      - v*
      - issue/*
      - housekeeping/*
      - release/*
name: 'Porsche Design System'
jobs:
  components-js:
    name: 'Components JS'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Lint'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-lint
          args: --components-js
      - name: 'Build Core Dependencies'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --core-dependencies
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-unit
          args: --components-js
      - name: 'Build Components JS'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --components-js
      - name: 'E2E Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-e2e
          args: --components-js
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-vrt
          args: --components-js
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: components-js-vrt-regression
          path: ./packages/components-js/tests/vrt/results
  components-angular:
    name: 'Components Angular'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build Core Dependencies'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --core-dependencies
      - name: 'Build Components JS'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --components-js
      - name: 'Build Components Angular'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --components-angular
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-vrt
          args: --components-angular
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: components-angular-vrt-regression
          path: ./packages/components-angular/tests/vrt/results
      - name: 'Store Build Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: components-angular-build
          path: ./packages/components-angular/dist/components-wrapper
  components-react:
    name: 'Components React'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build Core Dependencies'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --core-dependencies
      - name: 'Build Components JS'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --components-js
      - name: 'Build Components React'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --components-react
      - name: 'Mock Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-mocks
          args: --components-react
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-vrt
          args: --components-react
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: components-react-vrt-regression
          path: ./packages/components-react/tests/vrt/results
      - name: 'Store Build Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: components-react-build
          path: ./packages/components-react/projects/components-wrapper
  storefront:
    name: 'Storefront'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Lint'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-lint
          args: --storefront
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-unit
          args: --storefront
      - name: 'Build Core Dependencies'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --core-dependencies
      - name: 'Build Components JS'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --components-js
      - name: 'Build Storefront'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --storefront
      - name: 'E2E Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-e2e
          args: --storefront
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-vrt
          args: --storefront
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: storefront-vrt-regression
          path: ./packages/storefront/tests/vrt/results
  production-builds:
    name: 'Production Builds'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build Core Dependencies'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --core-dependencies
      - name: 'Build Components JS Prod'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --components-js-prod
      - name: 'Build Storefront'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --storefront
      - name: 'Store Components JS Build Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: components-js-prod-build
          path: ./packages/components-js/dist
      - name: 'Store Components JS Loader Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: components-js-prod-loader
          path: ./packages/components-js/loader
      - name: 'Store Storefront Build Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: storefront-prod-build
          path: ./packages/storefront/dist
  utilities:
    name: 'Utilities'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build Fonts'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --fonts
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --utilities
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-unit
          args: --utilities
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-vrt
          args: --utilities
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: utilities-vrt-regression
          path: ./packages/utilities/tests/vrt/results
  assets:
    name: 'Assets'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build Fonts'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --fonts
      - name: 'Build Icons'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --icons
      - name: 'Build Marque'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --marque
      - name: 'Build Metaicons'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --metaicons
      - name: 'Build Utilities'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --utilities
      - name: 'Build Assets'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --assets
      - name: 'Store Fonts Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: fonts-build
          path: ./packages/fonts/dist/fonts
      - name: 'Store Icons Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: icons-build
          path: ./packages/icons/dist/icons
      - name: 'Store Marque Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: marque-build
          path: ./packages/marque/dist/marque
      - name: 'Store Metaicons Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: metaicons-build
          path: ./packages/metaicons/dist/metaicons
      - name: 'Store Utilities Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: utilities-full-build
          path: ./packages/utilities/projects/utilities # We have to provide the full directory to avoid nested directory in npm package (scss.scss in package directory)
      - name: 'Store Assets Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: assets-build
          path: ./packages/assets/dist
  assets-deployment:
    name: 'Assets Deployment'
    needs: [assets]
    runs-on: ubuntu-latest
    steps:
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Restore Fonts Artifact'
        uses: actions/download-artifact@v2
        with:
          name: fonts-build
          path: ./packages/fonts/dist/fonts
      - name: 'Restore Icons Artifact'
        uses: actions/download-artifact@v2
        with:
          name: icons-build
          path: ./packages/icons/dist/icons
      - name: 'Restore Marque Artifact'
        uses: actions/download-artifact@v2
        with:
          name: marque-build
          path: ./packages/marque/dist/marque
      - name: 'Restore Metaicons Artifact'
        uses: actions/download-artifact@v2
        with:
          name: metaicons-build
          path: ./packages/metaicons/dist/metaicons
      - name: 'Restore Utilities Artifact'
        uses: actions/download-artifact@v2
        with:
          name: utilities-full-build
          path: ./packages/utilities/projects/utilities # See store artifact comment -> full directory and build of utilities
      - name: 'Deploy Assets to CDN'
        uses: ./.github/actions/docker-run
        env:
          CDN_USER: ${{ secrets.CDN_USER }}
          CDN_SSH_KEY: ${{ secrets.CDN_SSH_KEY }}
        with:
          entrypoint: run-deploy-assets
  storefront-deployment:
    name: 'Storefront Deployment'
    needs: [components-js, components-angular, components-react, storefront, production-builds, utilities, assets-deployment]
    runs-on: ubuntu-latest
    steps:
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Restore Build Artifact'
        uses: actions/download-artifact@v2
        with:
          name: storefront-prod-build
          path: ./packages/storefront/dist
      - name: 'Deploy'
        uses: ./.github/actions/docker-run
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          entrypoint: run-deploy-storefront
  release-components-js:
    name: 'Release Components JS'
    needs: [storefront-deployment]
    if: startsWith( github.ref, 'refs/heads/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Restore Build Artifact'
        uses: actions/download-artifact@v2
        with:
          name: components-js-prod-build
          path: ./packages/components-js/dist
      - name: 'Restore Loader Artifact'
        uses: actions/download-artifact@v2
        with:
          name: components-js-prod-loader
          path: ./packages/components-js/loader
      - name: 'Publish NPM Package'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          entrypoint: run-release-npm
          args: packages/components-js
  release-components-angular:
    name: 'Release Components Angular'
    needs: [release-components-js]
    if: startsWith( github.ref, 'refs/heads/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Restore Build Artifact'
        uses: actions/download-artifact@v2
        with:
          name: components-angular-build
          path: ./packages/components-angular/dist/components-wrapper
      - name: 'Publish NPM Package'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          entrypoint: run-release-npm
          args: packages/components-angular/dist/components-wrapper
  release-components-react:
    name: 'Release Components React'
    needs: [release-components-js]
    if: startsWith( github.ref, 'refs/heads/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Restore Build Artifact'
        uses: actions/download-artifact@v2
        with:
          name: components-react-build
          path: ./packages/components-react/projects/components-wrapper
      - name: 'Publish NPM Package'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          entrypoint: run-release-npm
          args: packages/components-react/projects/components-wrapper
  release-assets:
    name: 'Release Assets'
    needs: [storefront-deployment]
    if: startsWith( github.ref, 'refs/heads/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Restore Build Artifact'
        uses: actions/download-artifact@v2
        with:
          name: assets-build
          path: ./packages/assets/dist
      - name: 'Publish NPM Package'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          entrypoint: run-release-npm
          args: packages/assets
  release-utilities:
    name: 'Release Utilities'
    needs: [storefront-deployment]
    if: startsWith( github.ref, 'refs/heads/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Restore Utilities Artifact'
        uses: actions/download-artifact@v2
        with:
          name: utilities-full-build
          path: ./packages/utilities/projects/utilities # See store artifact comment -> full directory and build of utilities
      - name: 'Publish NPM Package'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          entrypoint: run-release-npm
          args: packages/utilities/projects/utilities
  release-sketch-libraries:
    name: 'Release Sketch Library Basic'
    needs: [storefront-deployment]
    if: startsWith( github.ref, 'refs/heads/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker Pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:14.16.1-stretch-slim
      - name: 'Publish Sketch Library Basic'
        uses: ./.github/actions/docker-run
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          entrypoint: run-release-sketch
          args: sketch/basic
      - name: 'Publish Sketch Library Web'
        uses: ./.github/actions/docker-run
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          entrypoint: run-release-sketch
          args: sketch/web
