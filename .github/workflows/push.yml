on:
  push:
    branches:
      - master
      - v*
      - issue/*
      - housekeeping/*
      - release/*
name: 'Porsche Design System'
jobs:
  components-js:
    name: 'Components JS'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Lint'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-lint
          args: --components-js
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-unit
          args: --components-js
      - name: 'E2E Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-e2e
          args: --components-js
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-vrt
          args: --components-js
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: components-js-vrt-regression
          path: ./packages/components-js/tests/vrt/results
  components-angular:
    name: 'Components Angular'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-vrt
          args: --components-angular
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: components-angular-vrt-regression
          path: ./packages/components-angular/tests/vrt/results
      - name: 'Store build artifact'
        uses: actions/upload-artifact@v2
        with:
          name: components-angular-build
          path: ./packages/components-angular/dist/components-wrapper
  components-react:
    name: 'Components React'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Mock Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-mocks
          args: --components-react
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-vrt
          args: --components-react
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: components-react-vrt-regression
          path: ./packages/components-react/tests/vrt/results
  storefront:
    name: 'Storefront'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Lint'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-lint
          args: --storefront
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-unit
          args: --storefront
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
      - name: 'E2E Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-e2e
          args: --storefront
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-vrt
          args: --storefront
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: storefront-vrt-regression
          path: ./packages/storefront/tests/vrt/results
      - name: 'Build components-js prod'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --components-js-prod
      - name: 'Build storefront prod'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --storefront
      - name: 'Store build artifact'
        uses: actions/upload-artifact@v2
        with:
          name: storefront-build
          path: ./packages/storefront/dist
  utilities:
    name: 'Utilities'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --utilities
      - name: 'Unit Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-unit
          args: --utilities
      - name: 'VRT Test'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-test-vrt
          args: --utilities
      - name: 'VRT Regression'
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: utilities-vrt-regression
          path: ./packages/utilities/tests/vrt/results
  marque:
    name: 'Marque'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --marque
      - name: 'Store build artifact'
        uses: actions/upload-artifact@v2
        with:
          name: marque-build
          path: ./packages/marque/dist/marque
  icons:
    name: 'Icons'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --icons
      - name: 'Store build artifact'
        uses: actions/upload-artifact@v2
        with:
          name: icons-build
          path: ./packages/icons/dist/icons
  fonts:
    name: 'Fonts'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build utilities'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --utilities
      - name: 'Build fonts'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --fonts
      - name: 'Store build artifact'
        uses: actions/upload-artifact@v2
        with:
          name: fonts-build
          path: ./packages/fonts/dist/fonts
  assets-deployment:
    name: 'Assets Deployment'
    needs: [marque, icons, fonts]
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Restore marque build artifact'
        uses: actions/download-artifact@v2
        with:
          name: marque-build
          path: ./packages/marque/dist/marque
      - name: 'Restore icons build artifact'
        uses: actions/download-artifact@v2
        with:
          name: icons-build
          path: ./packages/icons/dist/icons
      - name: 'Restore fonts build artifact'
        uses: actions/download-artifact@v2
        with:
          name: fonts-build
          path: ./packages/fonts/dist/fonts
      - name: 'Deploy'
        uses: ./.github/actions/docker-run
        env:
          CDN_USER: ${{ secrets.CDN_USER }}
          CDN_SSH_KEY: ${{ secrets.CDN_SSH_KEY }}
        with:
          entrypoint: run-deploy-assets
  storefront-deployment:
    name: 'Storefront Deployment'
    needs: [components-js, components-angular, components-react, storefront, utilities, assets-deployment]
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Restore build artifact'
        uses: actions/download-artifact@v2
        with:
          name: storefront-build
          path: ./packages/storefront/dist
      - name: 'Deploy'
        uses: ./.github/actions/docker-run
        env:
          GIT_DEPLOY_KEY: ${{ secrets.GIT_DEPLOY_KEY }}
        with:
          entrypoint: run-deploy-storefront
  release-components-js:
    name: 'Release components-js'
    needs: [storefront-deployment]
    if: startsWith( github.ref, 'refs/heads/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
      - name: 'Build components-js prod'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --components-js-prod
      - name: 'Publish npm package'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-release
          args: packages/components-js
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
  release-components-angular:
    name: 'Release components-angular'
    needs: [storefront-deployment, release-components-js]
    if: startsWith( github.ref, 'refs/heads/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Restore build artifact'
        uses: actions/download-artifact@v2
        with:
          name: components-angular-build
          path: ./packages/components-angular/dist/components-wrapper
      - name: 'Publish npm package'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-release
          args: packages/components-angular/dist/components-wrapper
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
  release-components-react:
    name: 'Release components-react'
    needs: [storefront-deployment, release-components-js]
    if: startsWith( github.ref, 'refs/heads/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
      - name: 'Publish npm package'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-release
          args: packages/components-react/projects/components-wrapper
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
  release-utilities:
    name: 'Release utilities'
    needs: [storefront-deployment]
    if: startsWith( github.ref, 'refs/heads/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Install'
        uses: ./.github/actions/docker-run
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
        with:
          entrypoint: run-install
      - name: 'Build'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-build
          args: --utilities
      - name: 'Publish npm package'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-release
          args: packages/utilities/projects/utilities
        env:
          PORSCHE_NPM_REGISTRY_TOKEN: ${{ secrets.PORSCHE_NPM_REGISTRY_TOKEN }}
  release-sketch-library:
    name: 'Release Sketch Library'
    needs: [storefront-deployment]
    if: startsWith( github.ref, 'refs/heads/v') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Docker pull'
        run: docker pull docker.pkg.github.com/porscheui/porsche-design-system/node:12.16.1-stretch-slim
      - name: 'Publish RSS feed'
        uses: ./.github/actions/docker-run
        with:
          entrypoint: run-release-feed
