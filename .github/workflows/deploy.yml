name: 'Deploy'

on:
  workflow_call:
    inputs:
      image:
        description: 'Docker image to be used in workflow.'
        required: true
        type: string
    secrets:
      linode-aws-access-key-id:
        description: 'AWS Access Key ID for Linode / Akamai CDN.'
        required: true
      linode-aws-secret-access-key:
        description: 'AWS Secret Access Key for Linode / Akamai CDN.'
        required: true
      gh-deploy-key-storefront:
        description: 'GitHub Deploy Key for GitHub Pages (Storefront).'
        required: true
      algolia-app-id:
        description: 'Algolia App ID (Storefront).'
        required: true
      algolia-api-key:
        description: 'Algolia API Key (Storefront).'
        required: true

jobs:
  akamai-cdn-assets:
    name: 'Akamai CDN (Assets)'
    runs-on: ubuntu-latest
    # container:
    #   image: ${{ inputs.image }}
    #   options: --user root
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Install'
        uses: ./.github/actions/install
      - name: 'Setup Node'
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: 'Install rclone'
        run: |
          sudo apt-get -yq --no-install-suggests --no-install-recommends install rclone
      - name: 'Restore'
        uses: ./.github/actions/restore
        with:
          artifact: 'build-production'
      - run: chmod +x ./.github/workflows/deploy-akamai-cdn.sh
      - name: 'Deploy'
        run: |
          ./.github/workflows/deploy-akamai-cdn.sh packages/assets/cdn/components/ components/
          ./.github/workflows/deploy-akamai-cdn.sh packages/assets/cdn/crest/ crest/
          ./.github/workflows/deploy-akamai-cdn.sh packages/assets/cdn/fallbacks/ fallbacks/
          ./.github/workflows/deploy-akamai-cdn.sh packages/assets/cdn/fonts/ fonts/
          ./.github/workflows/deploy-akamai-cdn.sh packages/assets/cdn/icons/ icons/
          ./.github/workflows/deploy-akamai-cdn.sh packages/assets/cdn/marque/ marque/
          ./.github/workflows/deploy-akamai-cdn.sh packages/assets/cdn/meta-icons/ meta-icons/
          ./.github/workflows/deploy-akamai-cdn.sh packages/assets/cdn/model-signatures/ model-signatures/
          ./.github/workflows/deploy-akamai-cdn.sh packages/assets/cdn/styles/ styles/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.linode-aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.linode-aws-secret-access-key }}
  akamai-cdn-assets-smoke:
    name: 'Akamai CDN (Assets) Smoke'
    needs:
     - akamai-cdn-assets
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.image }}
      options: --user 1001
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Install'
        uses: ./.github/actions/install
      - name: 'Restore'
        uses: ./.github/actions/restore
        with:
          artifact: 'build-production'
      - name: 'Components JS'
        run: yarn test:smoke:components-js
      - name: 'Components Angular'
        run: yarn test:smoke:components-angular
      - name: 'Components React'
        run: yarn test:smoke:components-react
      - name: 'Components Vue'
        run: yarn test:smoke:components-vue
  github-pages-storefront:
    name: 'GitHub Pages (Storefront)'
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.image }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Checkout (GH Pages)'
        uses: actions/checkout@v4
        with:
          repository: 'porsche-design-system/porsche-design-system-storefront'
          ssh-key: ${{ secrets.gh-deploy-key-storefront }}
          ref: 'main'
          path: 'gh-pages'
      - name: 'Install'
        uses: ./.github/actions/install
      - name: 'Restore'
        uses: ./.github/actions/restore
        with:
          artifact: 'build-production'
      - run: chmod +x ./.github/workflows/deploy-github-pages.sh
      - name: 'Deploy'
        run: ./.github/workflows/deploy-github-pages.sh
        env:
          ALGOLIA_APP_ID: ${{ secrets.algolia-app-id }}
          ALGOLIA_API_KEY: ${{ secrets.algolia-api-key }}
