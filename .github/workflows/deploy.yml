name: 'Deploy'

on:
  workflow_call:
    inputs:
      image:
        description: 'Docker image to be used in workflow.'
        required: true
        type: string
    secrets:
      linode-aws-access-key-id:
        description: 'AWS Access Key ID for Linode'
        required: true
      linode-aws-secret-access-key:
        description: 'AWS Secret Access Key for Linode'
        required: true

jobs:
  cdn:
    name: 'CDN'
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.image }}
      options: --user 1001
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Install'
        uses: ./.github/actions/install
      - name: 'Restore'
        uses: ./.github/actions/restore
        with:
          artifact: 'build-production'
      - name: 'Deploy'
        run: |
          function upload_to_akamai {
            if [ -d "${1}" ]; then
              rclone copy "${1}" "linode:porsche-design-system/porsche-design-system/${2}" --config=./rclone.conf --ignore-existing -v --exclude=font-face.css
              echo "matching files in directory '${1}' have been uploaded to cdn ✅"
            else
              echo "directory '${1}' does not exist, skipping upload ❌️️"
            fi
          }
          upload_to_akamai packages/assets/cdn/components/ components/
          upload_to_akamai packages/assets/cdn/crest/ crest/
          upload_to_akamai packages/assets/cdn/fallbacks/ fallbacks/
          upload_to_akamai packages/assets/cdn/fonts/ fonts/
          upload_to_akamai packages/assets/cdn/icons/ icons/
          upload_to_akamai packages/assets/cdn/marque/ marque/
          upload_to_akamai packages/assets/cdn/meta-icons/ meta-icons/
          upload_to_akamai packages/assets/cdn/model-signatures/ model-signatures/
          upload_to_akamai packages/assets/cdn/styles/ styles/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.linode-aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.linode-aws-secret-access-key }}
  cdn-smoke:
    name: 'CDN Smoke'
    needs:
     - cdn
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.image }}
      options: --user 1001
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Install'
        uses: ./.github/actions/install
      - name: 'Restore'
        uses: ./.github/actions/restore
        with:
          artifact: 'build-production'
      - name: 'Components JS'
        run: yarn test:smoke:components-js
      - name: 'Components Angular'
        run: yarn test:smoke:components-angular
      - name: 'Components React'
        run: yarn test:smoke:components-react
      - name: 'Components Vue'
        run: yarn test:smoke:components-vue
