{"version":3,"sources":["webpack:///./src/pages/general/testing.md","webpack:///./src/pages/general/testing.md?18ce"],"names":["render","_vm","this","_c","_self","staticClass","_v","_m","staticRenderFns","attrs","script","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,KAAK,CAACF,EAAIK,GAAG,aAAaL,EAAIM,GAAG,GAAGN,EAAIM,GAAG,GAAGJ,EAAG,mBAAmBA,EAAG,KAAK,CAACF,EAAIK,GAAG,gBAAgBH,EAAG,IAAI,CAACF,EAAIK,GAAG,oDAAoDL,EAAIM,GAAG,GAAGJ,EAAG,KAAK,CAACF,EAAIK,GAAG,eAAeH,EAAG,IAAI,CAACF,EAAIK,GAAG,uJAAuJL,EAAIM,GAAG,GAAGJ,EAAG,KAAK,CAACF,EAAIK,GAAG,+BAA+BH,EAAG,IAAI,CAACF,EAAIK,GAAG,wKAAwK,IAExsBE,EAAkB,CAAC,WAAY,IAAIP,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,IAAI,CAACF,EAAIK,GAAG,mLAAmLH,EAAG,MAAMF,EAAIK,GAAG,qCAAqCH,EAAG,IAAI,CAACM,MAAM,CAAC,KAAO,6BAA6B,CAACR,EAAIK,GAAG,8BAA8BL,EAAIK,GAAG,6CAC5Z,WAAY,IAAIL,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,IAAI,CAACF,EAAIK,GAAG,wDAAwDH,EAAG,IAAI,CAACM,MAAM,CAAC,KAAO,uBAAuB,CAACR,EAAIK,GAAG,WAAWL,EAAIK,GAAG,kEAC9L,WAAY,IAAIL,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,OAAO,CAACE,YAAY,uBAAuB,CAACJ,EAAIK,GAAG,8wCAChH,WAAY,IAAIL,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,IAAI,CAACF,EAAIK,GAAG,2GAA2GH,EAAG,MAAMF,EAAIK,GAAG,+DAA+DH,EAAG,OAAO,CAACF,EAAIK,GAAG,cAAcL,EAAIK,GAAG,2IAA2IH,EAAG,MAAMF,EAAIK,GAAG,yCAAyCH,EAAG,OAAO,CAACF,EAAIK,GAAG,qBAAqBL,EAAIK,GAAG,yG,YCJhhBI,EAAS,GAKTC,EAAY,eACdD,EACAV,EACAQ,GACA,EACA,KACA,KACA,MAIa,aAAAG,E","file":"js/chunk-2d214049.5dbe3d18.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"vmark\"},[_c('h1',[_vm._v(\"Testing\")]),_vm._m(0),_vm._m(1),_c('TableOfContents'),_c('h2',[_vm._v(\"Unit Tests\")]),_c('p',[_vm._v(\"A simple Jasmine example could look like this:\")]),_vm._m(2),_c('h2',[_vm._v(\"E2E Tests\")]),_c('p',[_vm._v(\"Usually E2E tests are robust enough that the lazy loading shouldn't cause any issues. However, there are a lot of different setups for E2E tests.\")]),_vm._m(3),_c('h2',[_vm._v(\"Visual Regression Testing\")]),_c('p',[_vm._v(\"For Visual Regression Testing we recommend waiting for all network traffic to be finished. This should be handled by the Visual Regression Testing tools you use.\")])],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\"One problem you might encounter while testing is, that the components get lazily loaded. That means, that they might not be ready when your tests start to access the elements.\"),_c('br'),_vm._v(\" You can solve that by using the \"),_c('a',{attrs:{\"href\":\"helpers/components-ready\"}},[_vm._v(\"componentsReady-function\")]),_vm._v(\" to know when all loading is finished.\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\"Detailed information about tests in frameworks like \"),_c('a',{attrs:{\"href\":\"start-coding/react\"}},[_vm._v(\"React\")]),_vm._v(\", Angular etc. can be found in the respective test projects\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('pre',[_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"import { componentsReady } from '@porsche-design-system/components-js';\\n\\n/*\\n * the function to test which adds a porsche design system\\n * component to the document (usually this is done by a\\n * template engine of a framework)\\n */\\n\\nfunction addPText() {\\n  const element = document.createElement('p-text');\\n  element.innerText = 'Hello World';\\n  document.body.appendChild(element);\\n}\\n\\ndescribe('The p-text', function () {\\n  /**\\n   * this test might fail, because the component is not\\n   * ready if it wasn't used before\\n   * in that case innerText would be empty string until\\n   * the component finished loading\\n   */\\n  it('should have content', function () {\\n    addPText();\\n    const element = document.querySelector('p-text');\\n    expect(element.innerText).toBe('Hello World');\\n    element.remove();\\n  });\\n\\n  /**\\n   * this test should work, even if the component\\n   * still needs to be loaded, because the\\n   * componentsReady() function returns a promise\\n   * that resolves as soon as everything is ready\\n   */\\n  it('should have content', async function () {\\n    addPText();\\n    await componentsReady();\\n    const element = document.querySelector('p-text');\\n    expect(element.innerText).toBe('Hello World');\\n    element.remove();\\n  });\\n});\\n\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_vm._v(\"If you face any problems, we would appreciate if you report them. We'll do our best to find a solution.\"),_c('br'),_vm._v(\" Also, it might be handy to know that all components get a \"),_c('code',[_vm._v(\"hydrated\")]),_vm._v(\" class, as soon as they are loaded and ready, that you can wait for. Waiting for the functionality is available in most E2E frameworks.\"),_c('br'),_vm._v(\" Another option would be to make the \"),_c('code',[_vm._v(\"componentsReady\")]),_vm._v(\" function available in the browser and call it from the E2E tests to know when the page is ready.\")])\n}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./testing.md?vue&type=template&id=58f887c9&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}