(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c8a56"],{5687:function(e,n,o){"use strict";o.r(n);var t=function(){var e=this,n=e._self._c;return n("div",{staticClass:"vmark"},[n("h1",[e._v("Angular")]),n("TableOfContents"),n("h2",[e._v("Prefixing")]),n("p",[e._v("In case of a micro-service architecture, multiple instances and versions of the Porsche Design System can be combined in a final application. This could cause conflicts due to the way how custom webcomponents are registered in the browser. During the bootstrap phase of the Porsche Design System, custom elements are defined. If a second application wants to register Porsche Design System again it will cause issues especially when different versions are used.")]),e._m(0),e._m(1),e._m(2),n("p",[e._v("Be aware, that you still have to set the component name without the prefix as an attribute, otherwise you might get unexpected results. The component might display as usual, but it is no longer an Angular component which means bindings of inputs and outputs won't work.")]),n("p",[e._v("You can now use the prefixed component as follows:")]),e._m(3),e._m(4),e._m(5)],1)},s=[function(){var e=this,n=e._self._c;return n("p",[e._v("A way of preventing those conflicts is by using a unique custom prefix for the components. Simply pass your desired prefix to the parameter of the static "),n("code",[e._v("PorscheDesignSystemModule.load()")]),e._v(" function.")])},function(){var e=this,n=e._self._c;return n("p",[e._v("When using custom prefixed component tags, you've to add the "),n("a",{attrs:{href:"https://angular.io/api/core/CUSTOM_ELEMENTS_SCHEMA"}},[e._v("schema "),n("code",[e._v("CUSTOM_ELEMENTS_SCHEMA")])]),e._v(" to the modules that use the prefixed components.")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-ts"},[e._v("// app.module.ts\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { PorscheDesignSystemModule, WEB_COMPONENTS_PREFIX } from '@porsche-design-system/components-angular';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, PorscheDesignSystemModule.load({ prefix: 'sample-prefix' })],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n")])])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-ts"},[e._v("// app.component.ts\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div id=\"app\">\n      <sample-prefix-p-headline p-headline variant=\"headline-1\">Headline</sample-prefix-p-headline>\n    </div>\n  `,\n  styles: [],\n})\nexport class AppComponent {}\n")])])},function(){var e=this,n=e._self._c;return n("p",[e._v("You can add more prefixes by calling "),n("code",[e._v("PorscheDesignSystemModule.load()")]),e._v(" multiple times or in your sub modules:")])},function(){var e=this,n=e._self._c;return n("pre",[n("code",{staticClass:"language-ts"},[e._v("// app.module.ts\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { PorscheDesignSystemModule } from '@porsche-design-system/components-angular';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    PorscheDesignSystemModule.load({ prefix: 'sample-prefix' }),\n    PorscheDesignSystemModule.load({ prefix: 'another-prefix' }),\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n")])])}],r=o("2877"),a={},p=Object(r["a"])(a,t,s,!1,null,null,null);n["default"]=p.exports}}]);
//# sourceMappingURL=chunk-2d0c8a56.5620af1c.js.map