(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0daec0"],{"6e50":function(e,t,o){"use strict";o.r(t);var d=function(){var e=this;e._self._c;return e._m(0)},v=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"vmark"},[t("h2",[e._v("Text")]),t("h3",[e._v("Properties")]),t("p",{staticStyle:{"max-width":"100%"}}),t("p",[t("code",[e._v("type Size = 'small' | 'inherit' | 'medium' | 'large' | 'x-large' | 'x-small'")]),t("br"),t("code",[e._v("type BreakpointCustomizable<T> = { base: T; xs?: T; s?: T; m?: T; l?: T; xl?: T; }")])]),t("p"),t("table",[t("thead",[t("tr",[t("th",[e._v("Property")]),t("th",[e._v("Attribute")]),t("th",[e._v("Description")]),t("th",[e._v("Type")]),t("th",[e._v("Default")])])]),t("tbody",[t("tr",[t("td",[t("code",[e._v("align")])]),t("td",[t("code",[e._v("align")])]),t("td",[e._v("Text alignment of the component.")]),t("td",[t("code",[e._v("'center'")]),e._v(" "),t("br"),t("code",[e._v("'left'")]),e._v(" "),t("br"),t("code",[e._v("'right'")])]),t("td",[t("code",[e._v("'left'")])])]),t("tr",[t("td",[t("code",[e._v("color")])]),t("td",[t("code",[e._v("color")])]),t("td",[e._v("Basic text color variations depending on theme property.")]),t("td",[t("code",[e._v("'brand'")]),e._v(" "),t("br"),t("code",[e._v("'default'")]),e._v(" "),t("br"),t("code",[e._v("'inherit'")]),e._v(" "),t("br"),t("code",[e._v("'neutral-contrast-high'")]),e._v(" "),t("br"),t("code",[e._v("'neutral-contrast-low'")]),e._v(" "),t("br"),t("code",[e._v("'neutral-contrast-medium'")]),e._v(" "),t("br"),t("code",[e._v("'notification-error'")]),e._v(" "),t("br"),t("code",[e._v("'notification-neutral'")]),e._v(" "),t("br"),t("code",[e._v("'notification-success'")]),e._v(" "),t("br"),t("code",[e._v("'notification-warning'")])]),t("td",[t("code",[e._v("'default'")])])]),t("tr",[t("td",[t("code",[e._v("ellipsis")])]),t("td",[t("code",[e._v("ellipsis")])]),t("td",[e._v("Adds an ellipsis to a single line of text if it overflows.")]),t("td",[t("code",[e._v("boolean")])]),t("td",[t("code",[e._v("false")])])]),t("tr",[t("td",[t("code",[e._v("size")])]),t("td",[t("code",[e._v("size")])]),t("td",[e._v("Size of the text. Also defines the size for specific breakpoints, like {base: 'small', l: 'medium'}. You always need to provide a base value when doing this.")]),t("td",[t("code",[e._v("'small'")]),e._v(" "),t("br"),t("code",[e._v("'inherit'")]),e._v(" "),t("br"),t("code",[e._v("'medium'")]),e._v(" "),t("br"),t("code",[e._v("'large'")]),e._v(" "),t("br"),t("code",[e._v("'x-large'")]),e._v(" "),t("br"),t("code",[e._v("'x-small'")]),e._v(" "),t("br"),t("code",[e._v("BreakpointCustomizable<Size>")])]),t("td",[t("code",[e._v("'small'")])])]),t("tr",[t("td",[t("code",[e._v("tag")])]),t("td",[t("code",[e._v("tag")])]),t("td",[e._v("Sets a custom HTML tag depending of the usage of the text component.")]),t("td",[t("code",[e._v("'address'")]),e._v(" "),t("br"),t("code",[e._v("'blockquote'")]),e._v(" "),t("br"),t("code",[e._v("'cite'")]),e._v(" "),t("br"),t("code",[e._v("'div'")]),e._v(" "),t("br"),t("code",[e._v("'figcaption'")]),e._v(" "),t("br"),t("code",[e._v("'legend'")]),e._v(" "),t("br"),t("code",[e._v("'p'")]),e._v(" "),t("br"),t("code",[e._v("'span'")]),e._v(" "),t("br"),t("code",[e._v("'time'")])]),t("td",[t("code",[e._v("'p'")])])]),t("tr",[t("td",[t("code",[e._v("theme")])]),t("td",[t("code",[e._v("theme")])]),t("td",[e._v("Adapts the text color depending on the theme. Has no effect when 'inherit' is set as color prop.")]),t("td",[t("code",[e._v("'dark'")]),e._v(" "),t("br"),t("code",[e._v("'light'")])]),t("td",[t("code",[e._v("'light'")])])]),t("tr",[t("td",[t("code",[e._v("weight")])]),t("td",[t("code",[e._v("weight")])]),t("td",[e._v("The weight of the text.")]),t("td",[t("code",[e._v("'bold'")]),e._v(" "),t("br"),t("code",[e._v("'regular'")]),e._v(" "),t("br"),t("code",[e._v("'semibold'")]),e._v(" "),t("br"),t("code",[e._v("'thin'")])]),t("td",[t("code",[e._v("'regular'")])])])])])])}],_=o("2877"),c={},r=Object(_["a"])(c,d,v,!1,null,null,null);t["default"]=r.exports}}]);
//# sourceMappingURL=chunk-2d0daec0.fc8f52bb.js.map