{"version":3,"sources":["/github/workspace/packages/storefront/src/components/example/example.module.scss","/github/workspace/packages/workshop/src/styles/utility/variable/color.scss","/github/workspace/packages/workshop/src/styles/utility/mixin/text.mixin.scss","/github/workspace/packages/storefront/src/components/example/example.global.scss","/github/workspace/packages/workshop/src/styles/utility/function/rem.function.scss","/github/workspace/packages/workshop/src/styles/utility/mixin/breakpoint.mixin.scss","/github/workspace/packages/workshop/src/styles/utility/mixin/spacing.mixin.scss"],"names":[],"mappings":"AAEA,+BAEI,eAAA,CACA,4BAAA,CAAA,wBAAA,CACA,eAAA,CAAA,qBAAsB,CAG1B,0BACE,cAAe,CADjB,8BAII,YAAA,CACA,eAAA,CACA,sBAAA,CACA,uBAAyB,CAP7B,mDAWI,eAAgB,CAIpB,uBACE,YAAA,CACA,eAAgB,CAGlB,4CACE,wBAAA,CACA,qBC9BkB,CDiCpB,2CACE,wBAAA,CACA,wBCxBuB,CD2BzB,iCACE,eAAgB,CAGlB,uBACE,eAAA,CACA,iBAAA,CACA,WAAA,CACA,eAAA,CACA,wBAAA,CACA,cAAA,CACA,UAAA,CEqEA,sDAAA,CACA,eAAA,CACA,iBAAA,CACA,gBAAiB,CF/EnB,6BAUI,SAAU,CAId,2CACE,qBCzDkB,CEcjB,uCAEG,YAAa,CAHnB,kCAQI,mBAAA,CACA,iBAAA,CACA,UFvBgB,CEapB,iCAcI,gBChB6B,CDEjC,oHAqBQ,WAAY,CArBpB,oHAwBQ,WAAY,CAxBpB,oHA2BQ,WAAY,CA3BpB,8DAmCM,iBCrC2B,CDEjC,8CAyCM,wBAhDwB,CAO9B,8CA4CM,wBAlDuB,CAM7B,8CA+CM,wBApDsB,CAK5B,8CAkDM,wBAtDqB,CAI3B,qDAuDM,iBCzD2B,CDEjC,gEA8DM,kBAAA,CACA,mBCjE2B,CDsE9B,qCAEG,sCAAwC,CAF3C,qDAKK,wBAhFsB,CA2E3B,qDAQK,wBAlFqB,CA0E1B,qDAWK,wBApFoB,CAyEzB,qDAcK,wBAtFmB,CA6F3B,wCAEI,iBAAA,CACA,UAAA,CACA,wBAnGyB,CA+F7B,kCAOI,UAAA,CACA,cAAA,CACA,iBAAA,CACA,UAAA,CACA,wBA3G0B,CAgG9B,iCAeI,gBC1G6B,CD+GjC,4CAEI,wBAAA,CACA,yBAAA,CAAA,sBAAA,CAAA,iBAAkB,CAItB,oBACE,YAAa,CADf,wBAII,mBAAA,CACA,wBAhI0B,CA2H9B,qCASI,wBAAA,CACA,UAAA,CACA,WCjI6B,CDoI9B,kCAEG,cCtI2B,CD0I9B,0DAEG,UAAA,CACA,WAAwB,CE5HxB,yBFyHH,0DAKK,UAAA,CACA,WAA0B,CAAA,CE/H5B,0BFyHH,0DASK,UAAA,CACA,WAA0B,CAAA,CEnI5B,0BFyHH,0DAaK,UAAA,CACA,WAA0B,CAAA,CEvI5B,0BFyHH,0DAiBK,UAAA,CACA,WAA2B,CAAA,CAlBhC,6CGQC,cAAU,CDjIR,yBFyHH,6CGiBG,YAAU,CAAA,CD1IV,0BFyHH,6CG2BG,cAAU,CAAA,CDpJV,0BFyHH,6CGqCG,YAAU,CAAA,CD9JV,0BFyHH,6CG+CG,cAAU,CAAA","file":"8.1f10e1cf.chunk.css","sourcesContent":["/**\n * basic hover animation timing (of color and opacity).\n * timing and bezier should be refactored after official Porsche animation guidelines are defined\n */\n/*\n* responsive spacing\n*/\n.container code {\n  padding: initial;\n  background-color: initial;\n  border-radius: initial; }\n\n.codeblock {\n  font-size: 16px; }\n  .codeblock pre {\n    height: 200px;\n    resize: vertical;\n    padding: 2rem !important;\n    overflow: auto !important; }\n  .codeblock .hljs-tag {\n    line-height: 1.5; }\n\n.render {\n  padding: 2rem;\n  overflow-x: auto; }\n\n.render.light {\n  border: 1px solid #c8cacb;\n  background-color: #fff; }\n\n.render.dark {\n  border: 1px solid #191f22;\n  background-color: #191f22; }\n\n.toggle-container {\n  margin-top: -1px; }\n\n.toggle {\n  padding: 0 0.5rem;\n  position: relative;\n  height: 30px;\n  background: none;\n  border: 1px solid #afb1b2;\n  cursor: pointer;\n  color: #000;\n  font-family: \"Porsche Next\", \"Arial Narrow\", Arial, sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 150%; }\n  .toggle:focus {\n    outline: 0; }\n\n.toggle.open {\n  background-color: #fff; }\n","// ci colors\n$p-color-white: #fff;\n$p-color-grey-1: #eff0f1;\n$p-color-grey-2: #e3e4e4;\n$p-color-grey-3: #c8cacb;\n$p-color-grey-4: #afb1b2;\n$p-color-grey-5: #959899;\n$p-color-grey-6: #7b7e80;\n$p-color-grey-7: #626669;\n$p-color-grey-8: #494e51;\n$p-color-grey-9: #313639;\n$p-color-grey-9-1: #1c2225;\n$p-color-grey-10: #191f22;\n$p-color-grey-10-1: #12181c;\n$p-color-black: #000;\n\n$p-color-red-1: #d5001c;\n$p-color-red-2: #960014;\n\n$p-color-blue-1: #196a99;\n$p-color-blue-2: #15577e;\n$p-color-blue-3: #2da6d5;\n\n// status colors\n$p-color-status-green: #13d246;\n$p-color-status-yellow: #ff0;\n$p-color-status-orange: #e6950a;\n$p-color-status-red: #d5001c;\n\n// external brand colors\n$p-color-facebook: #3b5998;\n$p-color-google: #cc3732;\n$p-color-youtube: #cd201f;\n$p-color-twitter: #55acee;\n$p-color-pinterest: #cc2127;\n$p-color-instagram: #3f729b;\n$p-color-linkedin: #0077b5;\n","$p-font-primary: \"Porsche Next\", \"Arial Narrow\", Arial, sans-serif;\n\n// EXPONENTIAL LINEAR //\n@mixin -text-size-1($weight: 400) {\n  font-family: $p-font-primary;\n  font-weight: $weight;\n  font-size: rem(29px);\n  line-height: 1.4;\n\n  @include breakpoint(\"s\", \"m\") {\n    font-size: rem(37px);\n    line-height: 1.35;\n  }\n\n  @include breakpoint(\"m\", \"l\") {\n    font-size: rem(42px);\n    line-height: 1.35;\n  }\n\n  @include breakpoint(\"l\", \"xl\") {\n    font-size: rem(49px);\n    line-height: 1.3;\n  }\n\n  @include breakpoint(\"xl\") {\n    font-size: rem(60px);\n    line-height: 1.3;\n  }\n}\n\n@mixin -text-size-2($weight: 400) {\n  font-family: $p-font-primary;\n  font-weight: $weight;\n  font-size: rem(25px);\n  line-height: 1.4;\n\n  @include breakpoint(\"s\", \"m\") {\n    font-size: rem(29px);\n    line-height: 1.35;\n  }\n\n  @include breakpoint(\"m\", \"l\") {\n    font-size: rem(32px);\n    line-height: 1.35;\n  }\n\n  @include breakpoint(\"l\", \"xl\") {\n    font-size: rem(36px);\n    line-height: 1.35;\n  }\n\n  @include breakpoint(\"xl\") {\n    font-size: rem(43px);\n    line-height: 1.35;\n  }\n}\n\n@mixin -text-size-3($weight: 400) {\n  font-family: $p-font-primary;\n  font-weight: $weight;\n  font-size: rem(21px);\n  line-height: 1.4;\n\n  @include breakpoint(\"s\", \"m\") {\n    font-size: rem(24px);\n    line-height: 1.4;\n  }\n\n  @include breakpoint(\"m\", \"l\") {\n    font-size: rem(25px);\n    line-height: 1.4;\n  }\n\n  @include breakpoint(\"l\", \"xl\") {\n    font-size: rem(28px);\n    line-height: 1.35;\n  }\n\n  @include breakpoint(\"xl\") {\n    font-size: rem(31px);\n    line-height: 1.35;\n  }\n}\n\n@mixin -text-size-4($weight: 400) {\n  font-family: $p-font-primary;\n  font-weight: $weight;\n  font-size: rem(18px);\n  line-height: 150%;\n\n  @include breakpoint(\"s\", \"m\") {\n    font-size: rem(19px);\n    line-height: 150%;\n  }\n\n  @include breakpoint(\"m\", \"l\") {\n    font-size: rem(20px);\n    line-height: 1.4;\n  }\n\n  @include breakpoint(\"l\", \"xl\") {\n    font-size: rem(21px);\n    line-height: 1.4;\n  }\n\n  @include breakpoint(\"xl\") {\n    font-size: rem(22px);\n    line-height: 1.4;\n  }\n}\n\n@mixin -text-size-copy($weight: 400) {\n  font-family: $p-font-primary;\n  font-weight: $weight;\n  font-size: rem(16px);\n  line-height: 150%;\n}\n\n@mixin -text-size-small($weight: 400) {\n  font-family: $p-font-primary;\n  font-weight: $weight;\n  font-size: rem(14px);\n  line-height: 150%;\n}\n","/**\n * basic hover animation timing (of color and opacity).\n * timing and bezier should be refactored after official Porsche animation guidelines are defined\n */\n/*\n* responsive spacing\n*/\n/**\n * Define styles for component representation\n */\n/* ----------  flex component styles ---------- */\n.sg-example-flex--fixed-height .p-flex {\n  height: 180px; }\n\n.sg-example-flex .sg-example-item {\n  padding: 0.25rem 5rem;\n  text-align: center;\n  color: #fff; }\n\n.sg-example-flex .p-flex + .p-flex {\n  margin-top: 0.5rem; }\n\n.sg-example-flex [class*=\"p-flex--align-items-\"] .p-flex__child:not(.p-flex__child--align-self-stretch):nth-child(1n) {\n  height: 40px; }\n\n.sg-example-flex [class*=\"p-flex--align-items-\"] .p-flex__child:not(.p-flex__child--align-self-stretch):nth-child(2n) {\n  height: 80px; }\n\n.sg-example-flex [class*=\"p-flex--align-items-\"] .p-flex__child:not(.p-flex__child--align-self-stretch):nth-child(3n) {\n  height: 54px; }\n\n.sg-example-flex .p-flex--align-items-baseline .p-flex__child {\n  margin-top: 1.5rem; }\n\n.sg-example-flex .p-flex__child:nth-child(1n) {\n  background-color: lightskyblue; }\n\n.sg-example-flex .p-flex__child:nth-child(2n) {\n  background-color: deepskyblue; }\n\n.sg-example-flex .p-flex__child:nth-child(3n) {\n  background-color: dodgerblue; }\n\n.sg-example-flex .p-flex__child:nth-child(4n) {\n  background-color: royalblue; }\n\n.sg-example-flex .p-flex__child--align-self-baseline {\n  margin-top: 1.5rem; }\n\n.sg-example-flex [class*=\"p-flex__child--width\"] .sg-example-item {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem; }\n\n.sg-example-flex--gap .p-flex__child {\n  background-color: transparent !important; }\n  .sg-example-flex--gap .p-flex__child:nth-child(1n) p {\n    background-color: lightskyblue; }\n  .sg-example-flex--gap .p-flex__child:nth-child(2n) p {\n    background-color: deepskyblue; }\n  .sg-example-flex--gap .p-flex__child:nth-child(3n) p {\n    background-color: dodgerblue; }\n  .sg-example-flex--gap .p-flex__child:nth-child(4n) p {\n    background-color: royalblue; }\n\n/* ----------  flex component styles ---------- */\n.sg-example-grid .sg-example-item-outer {\n  text-align: center;\n  color: #fff;\n  background-color: deepskyblue; }\n\n.sg-example-grid .sg-example-item {\n  width: 100%;\n  padding: 0.25rem;\n  text-align: center;\n  color: #fff;\n  background-color: lightskyblue; }\n\n.sg-example-grid .p-grid + .p-grid {\n  margin-top: 0.5rem; }\n\n/* ----------  spacing component styles ---------- */\n.sg-example-spacing-visual .sg-example-item {\n  background-color: lightskyblue;\n  width: fit-content; }\n\n.sg-example-spacing {\n  display: flex; }\n  .sg-example-spacing > div {\n    display: inline-flex;\n    background-color: lightskyblue; }\n  .sg-example-spacing .sg-example-item {\n    background-color: deepskyblue;\n    width: 5rem;\n    height: 5rem; }\n  .sg-example-spacing--negative > div {\n    padding: 2.5rem; }\n  .sg-example-spacing--negative-responsive .sg-example-item {\n    width: 3rem;\n    height: 3rem; }\n    @media (min-width: 760px) {\n      .sg-example-spacing--negative-responsive .sg-example-item {\n        width: 4rem;\n        height: 4rem; } }\n    @media (min-width: 1000px) {\n      .sg-example-spacing--negative-responsive .sg-example-item {\n        width: 5rem;\n        height: 5rem; } }\n    @media (min-width: 1300px) {\n      .sg-example-spacing--negative-responsive .sg-example-item {\n        width: 6rem;\n        height: 6rem; } }\n    @media (min-width: 1760px) {\n      .sg-example-spacing--negative-responsive .sg-example-item {\n        width: 7rem;\n        height: 7rem; } }\n  .sg-example-spacing--negative-responsive > div {\n    padding: 1.5rem; }\n    @media (min-width: 760px) {\n      .sg-example-spacing--negative-responsive > div {\n        padding: 2rem; } }\n    @media (min-width: 1000px) {\n      .sg-example-spacing--negative-responsive > div {\n        padding: 2.5rem; } }\n    @media (min-width: 1300px) {\n      .sg-example-spacing--negative-responsive > div {\n        padding: 3rem; } }\n    @media (min-width: 1760px) {\n      .sg-example-spacing--negative-responsive > div {\n        padding: 3.5rem; } }\n","@import \"../variable/global\";\n@import \"strip-units.function\";\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $p-global-rem-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n","$p-breakpoints: (\n  \"xxs\": 0,\n  \"xs\": 480px,\n  \"s\": 760px,\n  \"m\": 1000px,\n  \"l\": 1300px,\n  \"xl\": 1760px\n);\n\n@mixin breakpoint($min-breakpoint: null, $max-breakpoint: null) {\n  @if ($min-breakpoint and $max-breakpoint) {\n    @if map-has-key($p-breakpoints, $min-breakpoint) and map-has-key($p-breakpoints, $max-breakpoint) {\n      @media (min-width: #{map-get($p-breakpoints, $min-breakpoint)}) and (max-width: #{map-get($p-breakpoints, $max-breakpoint) - 1px}) {\n        @content;\n      }\n    } @else {\n      @if unitless($min-breakpoint) {\n        $min-breakpoint: $min-breakpoint + 0;\n      }\n      @if unitless($max-breakpoint) {\n        $max-breakpoint: $max-breakpoint + 0;\n      }\n\n      @media (min-width: $min-breakpoint) and (max-width: $max-breakpoint) {\n        @content;\n      }\n    }\n  } @else if ($min-breakpoint) {\n    @if map-has-key($p-breakpoints, $min-breakpoint) {\n      @media (min-width: #{map-get($p-breakpoints, $min-breakpoint)}) {\n        @content;\n      }\n    } @else {\n      @if unitless($min-breakpoint) {\n        $min-breakpoint: $min-breakpoint + 0;\n      }\n\n      @media (min-width: $min-breakpoint) {\n        @content;\n      }\n    }\n  }\n}\n\n// generate major breakpoint styles\n@mixin generate-major-breakpoints() {\n  @each $name, $breakpoint in $p-breakpoints {\n    @if ($name == \"xxs\") {\n      @content;\n    } @else {\n      @include breakpoint($breakpoint) {\n        &-#{$name} {\n          @content;\n        }\n      }\n    }\n  }\n}\n","@import \"../variable/spacing\";\n@import \"./breakpoint.mixin\";\n\n/*\n* responsive spacing\n*/\n@mixin p-spacing-a($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-a;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-a;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-a-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-a-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-a-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-a-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-a-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-a-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-a-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-a-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-b($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-b;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-b;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-b-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-b-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-b-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-b-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-b-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-b-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-b-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-b-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-c($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-c;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-c;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-c-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-c-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-c-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-c-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-c-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-c-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-c-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-c-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-d($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-d;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-d;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-d-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-d-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-d-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-d-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-d-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-d-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-d-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-d-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-e($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-e;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-e;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-e-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-e-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-e-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-e-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-e-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-e-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-e-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-e-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-f($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-f;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-f;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-f-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-f-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-f-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-f-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-f-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-f-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-f-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-f-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-g($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-g;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-g;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-g-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-g-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-g-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-g-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-g-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-g-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-g-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-g-xl;\n      }\n    }\n  }\n}\n"]}