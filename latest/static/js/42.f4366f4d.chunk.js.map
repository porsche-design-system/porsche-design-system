{"version":3,"sources":["../../ui-kit-js/dist/esm/polyfills/fetch.js"],"names":["e","l","a","String","test","TypeError","toLowerCase","q","n","b","next","shift","done","value","g","iterable","Symbol","iterator","d","this","map","forEach","c","append","Array","isArray","Object","getOwnPropertyNames","p","bodyUsed","Promise","reject","r","onload","result","onerror","error","w","FileReader","readAsArrayBuffer","t","slice","Uint8Array","byteLength","set","buffer","u","_initBody","_bodyInit","_bodyText","blob","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","y","_bodyArrayBuffer","ArrayBuffer","z","Error","headers","get","type","resolve","then","text","readAsText","length","fromCharCode","join","x","A","json","JSON","parse","k","body","url","credentials","method","mode","v","toUpperCase","B","indexOf","referrer","trim","split","replace","decodeURIComponent","C","h","status","ok","statusText","fetch","m","D","E","DataView","isView","call","has","hasOwnProperty","keys","push","values","entries","clone","F","redirect","RangeError","location","Headers","Request","Response","f","XMLHttpRequest","getAllResponseHeaders","responseURL","response","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","self","window"],"mappings":"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","file":"static/js/42.f4366f4d.chunk.js","sourcesContent":["/*!\nwhatwg-fetch, 2.0.3\nhttps://github.com/github/fetch\nCopyright (c) 2014-2016 GitHub, Inc. - MIT License\n*/\n(function (e) {\n  function l(a) {\n    \"string\" !== typeof a && (a = String(a));\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(a)) throw new TypeError(\"Invalid character in header field name\");\n    return a.toLowerCase();\n  }\n\n  function q(a) {\n    \"string\" !== typeof a && (a = String(a));\n    return a;\n  }\n\n  function n(a) {\n    var b = {\n      next: function next() {\n        var b = a.shift();\n        return {\n          done: void 0 === b,\n          value: b\n        };\n      }\n    };\n    g.iterable && (b[Symbol.iterator] = function () {\n      return b;\n    });\n    return b;\n  }\n\n  function d(a) {\n    this.map = {};\n    a instanceof d ? a.forEach(function (a, c) {\n      this.append(c, a);\n    }, this) : Array.isArray(a) ? a.forEach(function (a) {\n      this.append(a[0], a[1]);\n    }, this) : a && Object.getOwnPropertyNames(a).forEach(function (b) {\n      this.append(b, a[b]);\n    }, this);\n  }\n\n  function p(a) {\n    if (a.bodyUsed) return Promise.reject(new TypeError(\"Already read\"));\n    a.bodyUsed = !0;\n  }\n\n  function r(a) {\n    return new Promise(function (b, c) {\n      a.onload = function () {\n        b(a.result);\n      };\n\n      a.onerror = function () {\n        c(a.error);\n      };\n    });\n  }\n\n  function w(a) {\n    var b = new FileReader(),\n        c = r(b);\n    b.readAsArrayBuffer(a);\n    return c;\n  }\n\n  function x(a) {\n    a = new Uint8Array(a);\n\n    for (var b = Array(a.length), c = 0; c < a.length; c++) {\n      b[c] = String.fromCharCode(a[c]);\n    }\n\n    return b.join(\"\");\n  }\n\n  function t(a) {\n    if (a.slice) return a.slice(0);\n    var b = new Uint8Array(a.byteLength);\n    b.set(new Uint8Array(a));\n    return b.buffer;\n  }\n\n  function u() {\n    this.bodyUsed = !1;\n\n    this._initBody = function (a) {\n      if (this._bodyInit = a) {\n        if (\"string\" === typeof a) this._bodyText = a;else if (g.blob && Blob.prototype.isPrototypeOf(a)) this._bodyBlob = a;else if (g.formData && FormData.prototype.isPrototypeOf(a)) this._bodyFormData = a;else if (g.searchParams && URLSearchParams.prototype.isPrototypeOf(a)) this._bodyText = a.toString();else if (g.arrayBuffer && g.blob && y(a)) this._bodyArrayBuffer = t(a.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer]);else if (g.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(a) || z(a))) this._bodyArrayBuffer = t(a);else throw Error(\"unsupported BodyInit type\");\n      } else this._bodyText = \"\";\n      this.headers.get(\"content-type\") || (\"string\" === typeof a ? this.headers.set(\"content-type\", \"text/plain;charset=UTF-8\") : this._bodyBlob && this._bodyBlob.type ? this.headers.set(\"content-type\", this._bodyBlob.type) : g.searchParams && URLSearchParams.prototype.isPrototypeOf(a) && this.headers.set(\"content-type\", \"application/x-www-form-urlencoded;charset=UTF-8\"));\n    };\n\n    g.blob && (this.blob = function () {\n      var a = p(this);\n      if (a) return a;\n      if (this._bodyBlob) return Promise.resolve(this._bodyBlob);\n      if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n      if (this._bodyFormData) throw Error(\"could not read FormData body as blob\");\n      return Promise.resolve(new Blob([this._bodyText]));\n    }, this.arrayBuffer = function () {\n      return this._bodyArrayBuffer ? p(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(w);\n    });\n\n    this.text = function () {\n      var a = p(this);\n      if (a) return a;\n\n      if (this._bodyBlob) {\n        a = this._bodyBlob;\n        var b = new FileReader(),\n            c = r(b);\n        b.readAsText(a);\n        return c;\n      }\n\n      if (this._bodyArrayBuffer) return Promise.resolve(x(this._bodyArrayBuffer));\n      if (this._bodyFormData) throw Error(\"could not read FormData body as text\");\n      return Promise.resolve(this._bodyText);\n    };\n\n    g.formData && (this.formData = function () {\n      return this.text().then(A);\n    });\n\n    this.json = function () {\n      return this.text().then(JSON.parse);\n    };\n\n    return this;\n  }\n\n  function k(a, b) {\n    b = b || {};\n    var c = b.body;\n\n    if (a instanceof k) {\n      if (a.bodyUsed) throw new TypeError(\"Already read\");\n      this.url = a.url;\n      this.credentials = a.credentials;\n      b.headers || (this.headers = new d(a.headers));\n      this.method = a.method;\n      this.mode = a.mode;\n      c || null == a._bodyInit || (c = a._bodyInit, a.bodyUsed = !0);\n    } else this.url = String(a);\n\n    this.credentials = b.credentials || this.credentials || \"omit\";\n    if (b.headers || !this.headers) this.headers = new d(b.headers);\n    var v = b.method || this.method || \"GET\",\n        g = v.toUpperCase();\n    this.method = -1 < B.indexOf(g) ? g : v;\n    this.mode = b.mode || this.mode || null;\n    this.referrer = null;\n    if ((\"GET\" === this.method || \"HEAD\" === this.method) && c) throw new TypeError(\"Body not allowed for GET or HEAD requests\");\n\n    this._initBody(c);\n  }\n\n  function A(a) {\n    var b = new FormData();\n    a.trim().split(\"&\").forEach(function (a) {\n      if (a) {\n        var c = a.split(\"=\");\n        a = c.shift().replace(/\\+/g, \" \");\n        c = c.join(\"=\").replace(/\\+/g, \" \");\n        b.append(decodeURIComponent(a), decodeURIComponent(c));\n      }\n    });\n    return b;\n  }\n\n  function C(a) {\n    var b = new d();\n    a.replace(/\\r?\\n[\\t ]+/g, \" \").split(/\\r?\\n/).forEach(function (a) {\n      var c = a.split(\":\");\n      if (a = c.shift().trim()) c = c.join(\":\").trim(), b.append(a, c);\n    });\n    return b;\n  }\n\n  function h(a, b) {\n    b || (b = {});\n    this.type = \"default\";\n    this.status = void 0 === b.status ? 200 : b.status;\n    this.ok = 200 <= this.status && 300 > this.status;\n    this.statusText = \"statusText\" in b ? b.statusText : \"OK\";\n    this.headers = new d(b.headers);\n    this.url = b.url || \"\";\n\n    this._initBody(a);\n  }\n\n  if (!e.fetch) {\n    var D = \"Symbol\" in e && \"iterator\" in Symbol,\n        m;\n    if (m = \"FileReader\" in e && \"Blob\" in e) try {\n      new Blob(), m = !0;\n    } catch (a) {\n      m = !1;\n    }\n    var g = {\n      searchParams: \"URLSearchParams\" in e,\n      iterable: D,\n      blob: m,\n      formData: \"FormData\" in e,\n      arrayBuffer: \"ArrayBuffer\" in e\n    };\n\n    if (g.arrayBuffer) {\n      var E = \"[object Int8Array];[object Uint8Array];[object Uint8ClampedArray];[object Int16Array];[object Uint16Array];[object Int32Array];[object Uint32Array];[object Float32Array];[object Float64Array]\".split(\";\");\n\n      var y = function y(a) {\n        return a && DataView.prototype.isPrototypeOf(a);\n      };\n\n      var z = ArrayBuffer.isView || function (a) {\n        return a && -1 < E.indexOf(Object.prototype.toString.call(a));\n      };\n    }\n\n    d.prototype.append = function (a, b) {\n      a = l(a);\n      b = q(b);\n      var c = this.map[a];\n      this.map[a] = c ? c + \",\" + b : b;\n    };\n\n    d.prototype[\"delete\"] = function (a) {\n      delete this.map[l(a)];\n    };\n\n    d.prototype.get = function (a) {\n      a = l(a);\n      return this.has(a) ? this.map[a] : null;\n    };\n\n    d.prototype.has = function (a) {\n      return this.map.hasOwnProperty(l(a));\n    };\n\n    d.prototype.set = function (a, b) {\n      this.map[l(a)] = q(b);\n    };\n\n    d.prototype.forEach = function (a, b) {\n      for (var c in this.map) {\n        this.map.hasOwnProperty(c) && a.call(b, this.map[c], c, this);\n      }\n    };\n\n    d.prototype.keys = function () {\n      var a = [];\n      this.forEach(function (b, c) {\n        a.push(c);\n      });\n      return n(a);\n    };\n\n    d.prototype.values = function () {\n      var a = [];\n      this.forEach(function (b) {\n        a.push(b);\n      });\n      return n(a);\n    };\n\n    d.prototype.entries = function () {\n      var a = [];\n      this.forEach(function (b, c) {\n        a.push([c, b]);\n      });\n      return n(a);\n    };\n\n    g.iterable && (d.prototype[Symbol.iterator] = d.prototype.entries);\n    var B = \"DELETE GET HEAD OPTIONS POST PUT\".split(\" \");\n\n    k.prototype.clone = function () {\n      return new k(this, {\n        body: this._bodyInit\n      });\n    };\n\n    u.call(k.prototype);\n    u.call(h.prototype);\n\n    h.prototype.clone = function () {\n      return new h(this._bodyInit, {\n        status: this.status,\n        statusText: this.statusText,\n        headers: new d(this.headers),\n        url: this.url\n      });\n    };\n\n    h.error = function () {\n      var a = new h(null, {\n        status: 0,\n        statusText: \"\"\n      });\n      a.type = \"error\";\n      return a;\n    };\n\n    var F = [301, 302, 303, 307, 308];\n\n    h.redirect = function (a, b) {\n      if (-1 === F.indexOf(b)) throw new RangeError(\"Invalid status code\");\n      return new h(null, {\n        status: b,\n        headers: {\n          location: a\n        }\n      });\n    };\n\n    e.Headers = d;\n    e.Request = k;\n    e.Response = h;\n\n    e.fetch = function (a, b) {\n      return new Promise(function (c, d) {\n        var e = new k(a, b),\n            f = new XMLHttpRequest();\n\n        f.onload = function () {\n          var a = {\n            status: f.status,\n            statusText: f.statusText,\n            headers: C(f.getAllResponseHeaders() || \"\")\n          };\n          a.url = \"responseURL\" in f ? f.responseURL : a.headers.get(\"X-Request-URL\");\n          c(new h(\"response\" in f ? f.response : f.responseText, a));\n        };\n\n        f.onerror = function () {\n          d(new TypeError(\"Network request failed\"));\n        };\n\n        f.ontimeout = function () {\n          d(new TypeError(\"Network request failed\"));\n        };\n\n        f.open(e.method, e.url, !0);\n        \"include\" === e.credentials ? f.withCredentials = !0 : \"omit\" === e.credentials && (f.withCredentials = !1);\n        \"responseType\" in f && g.blob && (f.responseType = \"blob\");\n        e.headers.forEach(function (a, b) {\n          f.setRequestHeader(b, a);\n        });\n        f.send(\"undefined\" === typeof e._bodyInit ? null : e._bodyInit);\n      });\n    };\n\n    e.fetch.polyfill = !0;\n  }\n})(\"undefined\" !== typeof self ? self : window);"],"sourceRoot":""}