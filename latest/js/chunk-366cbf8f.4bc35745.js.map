{"version":3,"sources":["webpack:////github/workspace/node_modules/core-js/modules/es6.regexp.match.js","webpack:///../ui-kit-js/dist/esm-es5/shadow-css-9e778f69-3d3c4ecb.js"],"names":["anObject","toLength","advanceStringIndex","regExpExec","defined","MATCH","$match","maybeCallNative","regexp","O","this","fn","undefined","call","RegExp","String","res","done","value","rx","S","global","fullUnicode","unicode","lastIndex","result","A","n","matchStr","safeSelector","selector","content","placeholders","index","replace","_","keep","replaceBy","push","pseudo","exp","ss","restoreSafeSelector","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_selectorReSuffix","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","stripComments","input","_commentWithHashRe","extractCommentsWithHash","match","_ruleRe","_curlyRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","m","_i","arguments","length","suffix","contentPrefix","startsWith","blocks","substring","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","join","strEscapedBlocks","insertPolyfillHostInCssText","convertColonRule","cssText","regExp","partReplacer","parts","r","i","p","trim","colonHostPartReplacer","host","convertColonHost","colonHostContextPartReplacer","indexOf","convertColonSlotted","slotAttr","compound","sel","convertColonHostContext","convertShadowDOMSelectors","reduce","pattern","makeScopeMatcher","scopeSelector","lre","rre","selectorNeedsScoping","re","test","applySimpleSelectorScope","hostSelector","replaceBy_1","before","colon","after","applyStrictSelectorScope","isRe","className","_scopeSelectorPart","scopedP","t","matches","safeContent","scopedSelector","startIndex","sep","hasHost","shouldScope","exec","separator","part_1","slice","scopedPart","scopeSelectorText","slotSelector","map","shallowPart","scopeSelectors","commentOriginalSelector","scopeCssText","scopeId","hostScopeId","slotScopeId","scopeCss","commentsWithHash","orgSelectors","processCommentedSelector_1","placeholder","comment","scopedCssText","concat","forEach","_a"],"mappings":"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","file":"js/chunk-366cbf8f.4bc35745.js","sourcesContent":["'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function (selector) {\n    var placeholders = [];\n    var index = 0;\n    var content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    var ss = {\n        content: content,\n        placeholders: placeholders,\n    };\n    return ss;\n};\nvar restoreSafeSelector = function (placeholders, content) {\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g\n];\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n    return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n    return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var cssRule = {\n            selector: selector,\n            content: content\n        };\n        var rule = ruleCallback(cssRule);\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n};\nvar escapeBlocks = function (input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    var strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks\n    };\n    return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function (selector) {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var parts = m[2].split(',');\n            var r = [];\n            for (var i = 0; i < parts.length; i++) {\n                var p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar colonHostPartReplacer = function (host, part, suffix) {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nvar convertColonSlotted = function (cssText, slotAttr) {\n    var regExp = _cssColonSlottedRe;\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var compound = m[2].trim();\n            var suffix = m[3];\n            var sel = '.' + slotAttr + ' > ' + compound + suffix;\n            return sel;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar convertColonHostContext = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function (cssText) {\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n};\nvar makeScopeMatcher = function (scopeSelector) {\n    var lre = /\\[/g;\n    var rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n    var re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        var replaceBy_1 = \".\" + hostSelector;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                return before + replaceBy_1 + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n    var isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\n        var parts = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parts[_i - 1] = arguments[_i];\n        }\n        return parts[0];\n    });\n    var className = '.' + scopeSelector;\n    var _scopeSelectorPart = function (p) {\n        var scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            var t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                var matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    var safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    var scopedSelector = '';\n    var startIndex = 0;\n    var res;\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    var shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        var separator = res[1];\n        var part_1 = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n        scopedSelector += scopedPart + \" \" + separator + \" \";\n        startIndex = sep.lastIndex;\n    }\n    var part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n    return selector.split(',')\n        .map(function (shallowPart) {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n    return processRules(cssText, function (rule) {\n        var selector = rule.selector;\n        var content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n            rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        var cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content: content\n        };\n        return cssRule;\n    });\n};\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    cssText = convertColonSlotted(cssText, slotScopeId);\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return cssText.trim();\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n    var hostScopeId = scopeId + '-h';\n    var slotScopeId = scopeId + '-s';\n    var commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    var orgSelectors = [];\n    if (commentOriginalSelector) {\n        var processCommentedSelector_1 = function (rule) {\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n            var comment = \"/*!@\" + rule.selector + \"*/\";\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, function (rule) {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector_1(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector_1);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    var scopedCssText = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = [scopedCssText].concat(commentsWithHash).join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(function (_a) {\n            var placeholder = _a.placeholder, comment = _a.comment;\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    return cssText;\n};\nexport { scopeCss };\n"],"sourceRoot":""}