(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c9af9"],{"59cb":function(e,n,t){"use strict";t.r(n);var i=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},o=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"vmark"},[t("h1",[e._v("Js")]),t("h2",[e._v("Breakpoints")]),t("p",[e._v("We provide a "),t("code",[e._v("breakpoint")]),e._v(" object with predefined values: "),t("code",[e._v("xxs | xs | s | m | l | xl | xxl")])]),t("h4",[e._v("Example")]),t("pre",[t("code",[e._v("import { breakpoint } from '@porsche-design-system/utilities';\n\nif (window.matchMedia(`(min-width: ${breakpoint.m}px)`).matches) {\n  /* The viewport is greater than, or equal to the breakpointValue wide */\n} else {\n  /* The viewport is less than breakpointValue wide */\n}\n")])]),t("h2",[e._v("Media Query")]),t("p",[e._v("The function has two parameter "),t("code",[e._v("mediaQuery(minBreakpoint: breakpoint | number, maxBreakpoint?: breakpoints | number)")]),e._v(" where the "),t("code",[e._v("minBreakpoint")]),e._v(" parameter is mandatory. You can choose any number as pixel value or our predefined breakpoints as "),t("code",[e._v("minBreakpoint")]),e._v(" or "),t("code",[e._v("maxBreakpoint")]),e._v(".")]),t("p",[e._v("The type "),t("code",[e._v("breakpoint")]),e._v(" includes predefined breakpoints: "),t("code",[e._v("xxs | xs | s | m | l | xl | xxl")])]),t("p",[e._v("The "),t("code",[e._v("mediaQuery()")]),e._v(" function returns a "),t("code",[e._v("@media (min-width: minBreakpoints) || @media (min-width: minBreakpoint) and (max-width: maxBreakpoint)")])]),t("h4",[e._v("Example predefined breakpoint")]),t("pre",[t("code",[e._v("import { mediaQuery, breakpoint, font, color } from '@porsche-design-system/utilities';\n\nconst StyledDiv = css`{\n  ...font.size['small']\n  color: color.brand,\n  fontFamily: font.family\n  [mediaQuery(breakpoint.s)]: { color: color.external.facebook }\n}`\n\nrender (\n  <StyledDiv>\n    Styled Text\n  </StyledDiv>\n)\n")])]),t("hr"),t("h4",[e._v("Example custom breakpoint")]),t("pre",[t("code",[e._v("import { mediaQuery, font, color } from '@porsche-design-system/utilities';\n\nconst StyledDiv = css`{\n  ...font.size['small']\n  color: color.brand,\n  fontFamily: font.family\n  [mediaQuery(320)]: { color: color.external.facebook }\n}`\n\nrender (\n  <StyledDiv>\n    Styled Text\n  </StyledDiv>\n)\n")])]),t("hr"),t("h4",[e._v("Example predefined min and max breakpoint")]),t("pre",[t("code",[e._v("import { mediaQuery, font, color } from '@porsche-design-system/utilities';\n\nconst StyledDiv = div`{\n  ...font.size['small']\n  color: color.brand,\n  fontFamily: font.family\n  [mediaQuery('s', 'm')]: { color: color.external.facebook }\n}`\n\nrender (\n  <StyledDiv>\n    Styled Text\n  </StyledDiv>\n)\n")])]),t("h4",[e._v("Example custom min and max breakpoint")]),t("pre",[t("code",[e._v("import { mediaQuery, font, color } from '@porsche-design-system/utilities';\n\nconst StyledDiv = css`{\n  ...font.size['small']\n  color: color.brand,\n  fontFamily: font.family\n  mediaQuery(320, 640)]: { color: color.external.facebook }\n}`\n\nrender (\n  <StyledDiv>\n    Styled Text\n  </StyledDiv>\n)\n")])]),t("hr"),t("h2",[e._v("Typography")]),t("p",[t("strong",[e._v("Note:")]),e._v(" For font-styling it's recommended to use the "),t("a",{attrs:{href:"#/components/typography#headline"}},[t("code",[e._v("<p-headline>")])]),e._v("/"),t("a",{attrs:{href:"#/components/typography#text"}},[t("code",[e._v("<p-text>")])]),e._v(" components.")]),t("h3",[e._v("Headline")]),t("p",[e._v("The predefined variables for "),t("code",[e._v("title")]),e._v(" and "),t("code",[e._v("headline")]),e._v(" "),t("strong",[e._v("only")]),e._v(" work with styled-components, due to the necessity of font sizes in relation to breakpoints. You can follow "),t("a",{attrs:{href:"https://medium.com/@ttennant/react-inline-styles-and-media-queries-using-a-custom-react-hook-e76fa9ec89f6"}},[e._v("React media queries Hooks")]),e._v(" and style your custom component according to "),t("a",{attrs:{href:"#/components/typography"}},[e._v("Typography Guidelines")]),e._v(".")]),t("p",[e._v("Given variables are:"),t("br"),t("code",[e._v("title.large | headline['1'] | headline['2'] | headline['3'] | headline['4'] | headline['5']")])]),t("h4",[e._v("Example")]),t("pre",[t("code",[e._v("import { headline } from '@porsche-design-system/utilities';\n\nconst PHeadline = styled.h1`\n  ${headline['1']}\n`;\n")])]),t("h4",[e._v("Result")]),t("pre",[t("code",[e._v('PHeadline style = {\n  font-family: "Porsche Next", "Arial Narrow", Arial, sans-serif;\n  font-weight: 600;\n  font-size: 1.75rem;\n  line-height: 1.4285714286;\n}\n\n@media (min-width: 760px) and (max-width: 999px) {\n  PHeadline {\n    font-size: 2.25rem;\n    line-height: 1.2222222222;\n  }\n}\n\n@media (min-width: 1000px) and (max-width: 1299px) {\n  PHeadline {\n    font-size: 2.75rem;\n    line-height: 1.1818181818;\n  }\n}\n\n@media (min-width: 1300px) and (max-width: 1759px) {\n  PHeadline {\n    font-size: 3.25rem;\n    line-height: 1.2307692308;\n  }\n}\n\n@media (min-width: 1760px) {\n  PHeadline {\n    font-size: 3.75rem;\n    line-height: 1.2;\n  }\n}\n')])]),t("h3",[e._v("Text")]),t("p",[e._v("With the "),t("code",[e._v("text()")]),e._v(" function it is possible to get various kinds of text variants (size and weight) by passing two parameters as variables for "),t("code",[e._v("fontSize")]),e._v(" and "),t("code",[e._v("fontWeight")]),e._v(". The "),t("code",[e._v("fontSize")]),e._v(" is freely selectable, for the "),t("code",[e._v("fontWeight")]),e._v(" one of the predefined weight values must be chosen.")]),t("p",[e._v("Predefined size values are:"),t("br"),t("code",[e._v("12 | 16 | 18 | 20 | 24 | 28 | 30 | 32 | 36 | 42 | 44 | 48 | 52 | 60 | 62 | 72 | 84 | xSmall | small | medium | large | xLarge")])]),t("p",[e._v("Pre defined weight values are:"),t("br"),t("code",[e._v("thin | regular | semibold | bold")])]),t("p",[e._v("Default is "),t("code",[e._v("font.size.small")]),e._v(" and "),t("code",[e._v("font.weight.regular")]),e._v(".")]),t("h4",[e._v("Example standard usage")]),t("pre",[t("code",[e._v("import { text } from '@porsche-design-system/utilities';\n\nconst StyledText = styled.p`\n  ${text()};\n`\n")])]),t("h4",[e._v("Result")]),t("pre",[t("code",[e._v('p {\n  font-family: "Porsche Next", "Arial Narrow", Arial, sans-serif;\n  font-weight: 400;\n  font-size: 1rem;\n  line-height: 1.5;\n}\n')])]),t("h4",[e._v("Example with specific parameters")]),t("pre",[t("code",[e._v("import { text } from '@porsche-design-system/utilities';\n\nconst StyledText = styled.p`\n  ${text('large', 'thin')};\n`\n")])]),t("h4",[e._v("Result")]),t("pre",[t("code",[e._v('p {\n  font-family: "Porsche Next", "Arial Narrow", Arial, sans-serif;\n  font-weight: 100;\n  font-size: 2.25rem;\n  line-height: 1.33333;\n}\n')])])])}],r=t("2877"),a={},s=Object(r["a"])(a,i,o,!1,null,null,null);n["default"]=s.exports}}]);
//# sourceMappingURL=chunk-2d0c9af9.32d4455d.js.map