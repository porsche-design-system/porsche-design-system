@mixin flex {
  display: flex;
}

@mixin flex-none {
  flex: none;
}

@mixin flex-inline {
  display: inline-flex;
}

@mixin flex-direction($direction) {
  flex-direction: #{$direction};
}

@mixin flex-main-axis($align) {
  justify-content: #{$align};
}

@mixin flex-cross-axis($align) {
  align-items: #{$align};
}

@mixin flex-child-align($align) {
  align-self: #{$align};
}

@mixin flex-child-grow($grow) {
  flex-grow: #{$grow};
}

@mixin flex-child-shrink($shrink) {
  flex-shrink: #{$shrink};
}

@mixin flex-child-basis($basis) {
  flex-basis: #{$basis};
}

// properties for flex container
@mixin flex--direction($direction) {
  flex-direction: #{$direction};
}

@mixin flex--wrap($wrap) {
  flex-wrap: #{$wrap};
}

@mixin flex--justify-content($align-direction) {
  justify-content: #{$align-direction};
}

@mixin flex--align-items($align-items) {
  align-items: #{$align-items};
}

// it is similar to align-items, but instead of aligning flex items, it aligns flex lines.
// Note: There must be multiple lines of items for this property to have any effect!
@mixin flex--align-content($align-content) {
  align-content: #{$align-content};
}

// properties for flex items
@mixin flex--order($order) {
  order: #{$order};
}

@mixin flex--grow($grow) {
  flex-grow: #{$grow};
}

@mixin flex--shrink($shrink) {
  flex-shrink: #{$shrink};
}

@mixin flex--basis($basis) {
  flex-basis: #{$basis};
}

@mixin flex--align-self($align-self) {
  align-self: #{$align-self};
}

@mixin flex-gap-offset {
  padding-left: 0;
  padding-right: 0;

  @include breakpoint('s') {
    padding-left: 0;
    padding-right: 0;
  }

  @include breakpoint('l') {
    padding-left: 0;
    padding-right: 0;
  }

  margin: {
    left: -$flex-child-spacing-horizontal;
    right: -$flex-child-spacing-horizontal;
  }

  @include breakpoint('s') {
    margin: {
      left: -$flex-child-spacing-horizontal-s;
      right: -$flex-child-spacing-horizontal-s;
    }
  }

  @include breakpoint('l') {
    margin: {
      left: -$flex-child-spacing-horizontal-l;
      right: -$flex-child-spacing-horizontal-l;
    }
  }
}

@mixin flex-gap-offset-zero {
  margin-left: 0;
  margin-right: 0;
}

@mixin flex-child-gap-normal {
  padding: {
    left: $flex-child-spacing-horizontal;
    right: $flex-child-spacing-horizontal;
  }

  @include breakpoint('s') {
    padding: {
      left: $flex-child-spacing-horizontal-s;
      right: $flex-child-spacing-horizontal-s;
    }
  }

  @include breakpoint('l') {
    padding: {
      left: $flex-child-spacing-horizontal-l;
      right: $flex-child-spacing-horizontal-l;
    }
  }
}


// TODO: following should not be used anymore
@mixin flex--center-vertical {
  flex-direction: column;
  justify-content: center;
}

@mixin flex--center-horizontal {
  align-items: center;
}

@mixin flex--column-reverse {
  flex-direction: column-reverse;
}

@mixin flex--row-reverse {
  flex-direction: row-reverse;
}

@mixin flex--row-wrap {
  flex-wrap: wrap;
}

@mixin flex--row-nowrap {
  flex-wrap: nowrap;
}

@mixin flex--space-between-vertical {
  flex-direction: column;
  justify-content: center;
}

@mixin flex--space-between-horizontal {
  justify-content: space-between;
}

