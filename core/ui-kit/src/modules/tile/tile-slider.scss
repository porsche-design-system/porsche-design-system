@import 'tile-slider.setup.scss';
@import '../../base/tile/tile.animations.scss';
@import '../../base/grid/flex.mixin.scss';
@import '../../base/spacing/spacing.mixin.scss';
@import '../../base/position/position.mixin.scss';
@import '../../mixins/breakpoint.scss';
@import '../../mixins/transform.scss';
@import '../../setup/global-variables.scss';


// todo: REFACTOR! depends for animation on image-cover pattern
.#{$global-class-prefix}tile-slider {
  position: relative;

  &__slide {
    position: relative;
  }

  &__image {
    @if $tile-slider-include-animation == true {
      @include tile-animation-image;
    }
  }

  &:hover &__image {
    @include transform-scale($tile-slider-animation-scale);
  }

  &__imageholder {
    position: relative;
    padding-top: $tile-slider-height-default;
    overflow: hidden;
    cursor: pointer;

    @include breakpoint('xs') {
      padding-top: $tile-slider-height-xs;
    }

    @include breakpoint('s') {
      padding-top: $tile-slider-height-s;
    }

    @include breakpoint('m') {
      padding-top: $tile-slider-height-m;
    }

    @include breakpoint('l') {
      padding-top: $tile-slider-height-l;
    }
  }

  &__textarea {
    @include -spacing-inner-a;
    color: $tile-slider-headline-color;
    background-color: $tile-slider-textarea-background-color;
    cursor: pointer;

    @include breakpoint('m') {
      position: absolute;
      padding: $tile-slider-padding-m;
      margin: $tile-slider-margin-m - $tile-slider-padding-m;
      width: $tile-slider-textarea-width-offset-m;
      background: transparent;
    }

    &--upper-left {
      @include breakpoint('m') {
        left: $tiles-slider-position-modifier-left;
        top: $tiles-slider-position-modifier-top;
      }
    }

    &--upper-right {
      @include breakpoint('m') {
        right: $tiles-slider-position-modifier-right;
        top: $tiles-slider-position-modifier-top;
      }
    }

    &--lower-left {
      @include breakpoint('m') {
        left: $tiles-slider-position-modifier-left;
        bottom: $tiles-slider-position-modifier-bottom;
      }
    }

    &--lower-right {
      @include breakpoint('m') {
        right: $tiles-slider-position-modifier-right;
        bottom: $tiles-slider-position-modifier-bottom;
      }
    }

    &--inverted {
      @include breakpoint('m') {
        color: $tile-slider-headline-color-inverted;
      }
    }
  }

  &__textwrapper {
    &:hover {
      color: $tile-slider-text-hover-color;
    }
  }

  &__pagination {
    @include -spacing-c;
  }

  &__arrow {
    @include flex--direction(column);
    @include flex--justify-content(center);

    display: none;
    color: $tiles-slider-arrow-color;

    @include breakpoint('s') {
      @include flex;
    }

    &--prev {
      @include -position-absolute-coordinates(-$tiles-slider-arrow-size-s * .8, auto);

      @include breakpoint('l') {
        @include -position-absolute-coordinates(-$tiles-slider-arrow-size-l * .8, auto);
      }
    }

    &--next {
      @include -position-absolute-coordinates(auto, -$tiles-slider-arrow-size-s * .8);

      @include breakpoint('l') {
        @include -position-absolute-coordinates(auto, -$tiles-slider-arrow-size-l * .8);
      }
    }

    &--disabled {
      color: $tiles-slider-arrow-color-disabled;
    }
  }

  &__arrow-icon {
    font-size: $tiles-slider-arrow-size-s;
    line-height: $tiles-slider-arrow-size-s;
    cursor: pointer;

    @include breakpoint('l') {
      font-size: $tiles-slider-arrow-size-l;
      line-height: $tiles-slider-arrow-size-l;
    }
  }

  &__play-icon {
    position: absolute;
    left: $tiles-slider-video-icon-pos;
    top: $tiles-slider-video-icon-pos;
    font-size: $tiles-slider-video-icon-size;
    color: $tiles-slider-video-icon-light-color;

    &:hover {
      color: $tiles-slider-video-icon-hover-color;
    }

    &--dark {
      color: $tiles-slider-video-icon-dark-color;
    }
  }
}
