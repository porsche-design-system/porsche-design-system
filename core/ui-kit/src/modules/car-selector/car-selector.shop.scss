@import '../../base/background/background.mixin.scss';
@import '../../base/align/align.mixin.scss';
@import '../../base/text-size/text-size.mixin.scss';
@import '../../base/font/font.mixin.scss';
@import '../../base/text-color/text-color.mixin.scss';
@import '../../base/layout/flex.mixin.scss';
@import '../../base/spacing/spacing.mixin.scss';
@import '../../mixins/breakpoint.scss';
@import '../../setup/global-variables.scss';
@import 'car-selector.setup.scss';
@import 'car-selector.shop.setup.scss';

.#{$global-class-prefix}car-selector {
  &__derivative-list-item {
    @include -text-color-black;
    display: block;
    position: relative;
    cursor: pointer;
    text-decoration: none;

    @include breakpoint('xxs', 'm') {
      @include -spacing-12(top, padding);
      @include -spacing-12(bottom, padding);
      @include -spacing-c(left, padding);
      @include -spacing-c(right, padding);
      border-bottom: $car-selector-car-list-item-border-width solid $car-selector-car-list-item-border-color;

      &:last-child {
        border-bottom-style: none;
      }
    }

    @include breakpoint('m') {
      @include -spacing-12(top, padding);
      @include -spacing-24(bottom, padding);
      float: left;
      overflow: hidden;
      margin: $car-selector-derivative-list-item-margin-m;
      width: $car-selector-derivative-list-item-width-m;
    }

    @include breakpoint('l') {
      margin: $car-selector-derivative-list-item-margin-l;
      width: $car-selector-derivative-list-item-width-l;
    }

    &:hover {
      @include -text-color-red-1;
    }

    &--active {
      // sass-lint:disable nesting-depth
      &::before {
        content: '';
        position: absolute;
        left: $car-selector-car-list-item-active-position-left;
        bottom: $car-selector-car-list-item-active-position-bottom;

        @include breakpoint('xxs', 'm') {
          top: $car-selector-car-list-item-active-position-top;
          border-left: $car-selector-car-list-item-active-border-width solid $car-selector-car-list-item-active-border-color;
        }

        @include breakpoint('m') {
          right: $car-selector-car-list-item-active-position-right;
          border-bottom: $car-selector-car-list-item-active-border-width-m solid $car-selector-car-list-item-active-border-color;
        }
      }
    }

    &--logged-in {
      @include breakpoint('m') {
        width: $car-selector-derivative-list-item-logged-in-width-m;
      }

      @include breakpoint('l') {
        width: $car-selector-derivative-list-item-logged-in-width-l;
      }
    }

    &-model {
      @include flex;
      @include flex-direction(row-reverse);
      width: $car-selector-derivative-list-item-model-width;
      justify-content: space-between;

      @include breakpoint('m') {
        display: block;
      }
    }

    &-image {
      width: $car-selector-derivative-list-item-image-width;
      min-width: $car-selector-derivative-list-item-image-width;
      align-self: center;

      @include breakpoint('m') {
        display: block;
        width: $car-selector-derivative-list-item-image-width-m;
      }
    }

    &-title {
      @include -text-size-copy;
      @include -spacing-c(right);
      align-self: center;
      display: block;

      @include breakpoint('m') {
        @include -align-center;
        @include -spacing-zero(right);
        word-wrap: break-word;
      }
    }

    &-generation {
      @include -spacing-c;
      max-width: $car-selector-derivative-list-item-generation-max-width;

      @include breakpoint('xxs', 'm') {
        @include -spacing-18(bottom);
      }

      @include breakpoint('m') {
        display: inline-block;
        position: relative;
        left: $car-selector-derivative-list-item-generation-position-left;
        transform: translateX(-#{$car-selector-derivative-list-item-generation-position-left});
      }
    }

    &-radio {
      display: block;
    }
  }
}
