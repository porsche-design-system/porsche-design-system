(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d20fe2d"],{b614:function(e,n,o){"use strict";o.r(n);var t=function(){var e=this,n=e._self._c;e._self._setupProxy;return n("div",{staticClass:"vmark"},[n("h1",[e._v("Angular")]),n("TableOfContents"),n("h2",[e._v("Global Theme")]),e._m(0),e._m(1),e._m(2),e._m(3),n("pre",[n("code",{staticClass:"language-ts"},[e._v("import { ChangeDetectionStrategy, Component, Inject, inject } from '@angular/core';\nimport { type Theme, THEME_TOKEN } from '@porsche-design-system/components-angular';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <select [ngModel]=\"theme$ | async\" (ngModelChange)=\"theme$.next($event)\">\n      <option *ngFor=\"let item of themes\" [value]=\"item\">"+e._s(e.item)+"</option>\n    </select>\n\n    <router-outlet />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  public themes: Theme[] = ['light', 'dark', 'auto'];\n  // like this\n  public theme$ = inject(THEME_TOKEN);\n\n  // or via constructor dependency injection\n  constructor(@Inject(THEME_TOKEN) theme$: BehaviorSubject<Theme>) {\n    theme$.next('light');\n  }\n}\n")])]),n("h2",[e._v("Prefixing")]),n("p",[e._v("In case of a micro-service architecture, multiple instances and versions of the Porsche Design System can be combined in a final application. This could cause conflicts due to the way how custom webcomponents are registered in the browser. During the bootstrap phase of the Porsche Design System, custom elements are defined. If a second application wants to register Porsche Design System again it will cause issues especially when different versions are used.")]),e._m(4),e._m(5),e._m(6),n("p",[e._v("Be aware, that you still have to set the component name without the prefix as an attribute, otherwise you might get unexpected results. The component might display as usual, but it is no longer an Angular component which means bindings of inputs and outputs won't work.")]),n("p",[e._v("You can now use the prefixed component as follows:")]),e._m(7),e._m(8),e._m(9)],1)},s=[function(){var e=this,n=e._self._c;e._self._setupProxy;return n("p",[n("strong",[e._v("Since v3.9.0")]),e._v(" you can set the "),n("code",[e._v("theme")]),e._v(" property for all child components by passing an option to "),n("code",[e._v("PorscheDesignSystemModule.load()")]),e._v(".")])},function(){var e=this,n=e._self._c;e._self._setupProxy;return n("p",[e._v("Possible values for "),n("code",[e._v("theme")]),e._v(" are: "),n("code",[e._v("'auto' | 'dark' | 'light'")]),n("br"),e._v(" Local overrides on a per component basis are still possible as usual.")])},function(){var e=this,n=e._self._c;e._self._setupProxy;return n("pre",[n("code",{staticClass:"language-ts"},[e._v("// app.module.ts\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { PorscheDesignSystemModule, WEB_COMPONENTS_PREFIX } from '@porsche-design-system/components-angular';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, PorscheDesignSystemModule.load({ theme: 'dark' })],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n")])])},function(){var e=this,n=e._self._c;e._self._setupProxy;return n("p",[e._v("In case you want to dynamically change the "),n("code",[e._v("theme")]),e._v(" at runtime, you can use the injectable "),n("code",[e._v("THEME_TOKEN")]),e._v(" like:")])},function(){var e=this,n=e._self._c;e._self._setupProxy;return n("p",[e._v("A way of preventing those conflicts is by using a unique custom prefix for the components. Simply pass your desired prefix to the parameter of the static "),n("code",[e._v("PorscheDesignSystemModule.load()")]),e._v(" function.")])},function(){var e=this,n=e._self._c;e._self._setupProxy;return n("p",[e._v("When using custom prefixed component tags, you've to add the "),n("a",{attrs:{href:"https://angular.io/api/core/CUSTOM_ELEMENTS_SCHEMA"}},[e._v("schema "),n("code",[e._v("CUSTOM_ELEMENTS_SCHEMA")])]),e._v(" to the modules that use the prefixed components.")])},function(){var e=this,n=e._self._c;e._self._setupProxy;return n("pre",[n("code",{staticClass:"language-ts"},[e._v("// app.module.ts\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { PorscheDesignSystemModule, WEB_COMPONENTS_PREFIX } from '@porsche-design-system/components-angular';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, PorscheDesignSystemModule.load({ prefix: 'sample-prefix' })],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n")])])},function(){var e=this,n=e._self._c;e._self._setupProxy;return n("pre",[n("code",{staticClass:"language-ts"},[e._v("// app.component.ts\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div id=\"app\">\n      <sample-prefix-p-heading p-heading size=\"xx-large\">Heading</sample-prefix-p-heading>\n    </div>\n  `,\n  styles: [],\n})\nexport class AppComponent {}\n")])])},function(){var e=this,n=e._self._c;e._self._setupProxy;return n("p",[e._v("You can add more prefixes by calling "),n("code",[e._v("PorscheDesignSystemModule.load()")]),e._v(" multiple times or in your sub modules:")])},function(){var e=this,n=e._self._c;e._self._setupProxy;return n("pre",[n("code",{staticClass:"language-ts"},[e._v("// app.module.ts\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { PorscheDesignSystemModule } from '@porsche-design-system/components-angular';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    PorscheDesignSystemModule.load({ prefix: 'sample-prefix' }),\n    PorscheDesignSystemModule.load({ prefix: 'another-prefix' }),\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n")])])}],r=(o("f8c9"),o("2b0e")),a=o("2fe1"),p=function(e,n,o,t){var s,r=arguments.length,a=r<3?n:null===t?t=Object.getOwnPropertyDescriptor(n,o):t;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)a=Reflect.decorate(e,n,o,t);else for(var p=e.length-1;p>=0;p--)(s=e[p])&&(a=(r<3?s(a):r>3?s(n,o,a):s(n,o))||a);return r>3&&a&&Object.defineProperty(n,o,a),a};let i=class extends r["a"]{constructor(){super(...arguments),this.item="{{ item }}"}};i=p([a["b"]],i);var l=i,c=l,u=o("2877"),m=Object(u["a"])(c,t,s,!1,null,null,null);n["default"]=m.exports}}]);
//# sourceMappingURL=chunk-2d20fe2d.820bc372.js.map