{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/p-text.entry.js"],"names":["textCss","Text","hostRef","registerInstance","this","tag","size","weight","align","color","ellipsis","theme","prototype","componentDidLoad","_this","tagName","element","toLowerCase","style","insertSlottedStyles","transitionListener","textTag","lineHeight","calcLineHeightForElement","render","TagType","textClasses","cx","prefix","mapBreakpointPropToPrefixedClasses","h","class","ref","el","Object","defineProperty","get","getElement","enumerable","configurable"],"mappings":"gHAAA,0EAEIA,EAAU,o8HACVC,EAAsB,WACtB,SAASA,EAAKC,GACVC,eAAiBC,KAAMF,GAEvBE,KAAKC,IAAM,IAEXD,KAAKE,KAAO,QAEZF,KAAKG,OAAS,UAEdH,KAAKI,MAAQ,OAEbJ,KAAKK,MAAQ,UAEbL,KAAKM,UAAW,EAEhBN,KAAKO,MAAQ,QAsBjB,OApBAV,EAAKW,UAAUC,iBAAmB,WAC9B,IAAIC,EAAQV,KACRW,EAAUX,KAAKY,QAAQD,QAAQE,cAC/BC,EAAQH,EAAU,oPAAsPA,EAAU,mDAAqDA,EAAU,mFACrVI,eAAoBf,KAAKY,QAASE,GAClCE,eAAmBhB,KAAKiB,QAAS,aAAa,WAC1CP,EAAMO,QAAQH,MAAMI,WAAa,GAAKC,eAAyBT,EAAMO,aAG7EpB,EAAKW,UAAUY,OAAS,WACpB,IAAIV,EAAQV,KACRqB,EAAUrB,KAAKC,IACfqB,EAAcC,eAAGC,eAAO,QAASC,eAAmC,aAAczB,KAAKE,MAAOsB,eAAO,gBAAkBxB,KAAKG,QAASqB,eAAO,eAAiBxB,KAAKI,OAAQoB,eAAO,eAAiBxB,KAAKK,OAAQL,KAAKM,UAAYkB,eAAO,kBAAkC,YAAfxB,KAAKK,OAAuBmB,eAAO,eAAiBxB,KAAKO,QACvT,OAAQmB,eAAEL,EAAS,CAAEM,MAAOL,EAAaM,IAAK,SAAUC,GAAM,OAAOnB,EAAMO,QAAUY,IAASH,eAAE,OAAQ,QAE5GI,OAAOC,eAAelC,EAAKW,UAAW,UAAW,CAC7CwB,IAAK,WAAc,OAAOC,eAAWjC,OACrCkC,YAAY,EACZC,cAAc,IAEXtC,EAtCe,GAwC1BA,EAAKiB,MAAQlB","file":"js/chunk-2d2107bf.ba0ff5ee.js","sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-b510769a.js';\nimport { d as insertSlottedStyles, t as transitionListener, c as cx, p as prefix, m as mapBreakpointPropToPrefixedClasses, b as calcLineHeightForElement } from './index-e6c6506c.js';\nvar textCss = \":host{display:block}.p-text{font-size:1rem;line-height:1.5;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;font-weight:400;padding:0;margin:0;list-style-type:none;display:inherit;-webkit-transition:font-size 1ms linear;transition:font-size 1ms linear}.p-text--size-x-small{font-size:0.75rem;line-height:1.6666666667}.p-text--size-small{font-size:1rem;line-height:1.5}.p-text--size-medium{font-size:1.5rem;line-height:1.5}.p-text--size-large{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit{font-size:inherit;line-height:inherit}@media (min-width: 480px){.p-text--size-x-small-xs{font-size:0.75rem;line-height:1.6666666667}.p-text--size-small-xs{font-size:1rem;line-height:1.5}.p-text--size-medium-xs{font-size:1.5rem;line-height:1.5}.p-text--size-large-xs{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large-xs{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit-xs{font-size:inherit;line-height:inherit}}@media (min-width: 760px){.p-text--size-x-small-s{font-size:0.75rem;line-height:1.6666666667}.p-text--size-small-s{font-size:1rem;line-height:1.5}.p-text--size-medium-s{font-size:1.5rem;line-height:1.5}.p-text--size-large-s{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large-s{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit-s{font-size:inherit;line-height:inherit}}@media (min-width: 1000px){.p-text--size-x-small-m{font-size:0.75rem;line-height:1.6666666667}.p-text--size-small-m{font-size:1rem;line-height:1.5}.p-text--size-medium-m{font-size:1.5rem;line-height:1.5}.p-text--size-large-m{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large-m{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit-m{font-size:inherit;line-height:inherit}}@media (min-width: 1300px){.p-text--size-x-small-l{font-size:0.75rem;line-height:1.6666666667}.p-text--size-small-l{font-size:1rem;line-height:1.5}.p-text--size-medium-l{font-size:1.5rem;line-height:1.5}.p-text--size-large-l{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large-l{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit-l{font-size:inherit;line-height:inherit}}@media (min-width: 1760px){.p-text--size-x-small-xl{font-size:0.75rem;line-height:1.6666666667}.p-text--size-small-xl{font-size:1rem;line-height:1.5}.p-text--size-medium-xl{font-size:1.5rem;line-height:1.5}.p-text--size-large-xl{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large-xl{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit-xl{font-size:inherit;line-height:inherit}}.p-text--weight-thin{font-weight:100}.p-text--weight-regular{font-weight:400}.p-text--weight-bold{font-weight:700}.p-text--align-left{text-align:left}.p-text--align-center{text-align:center}.p-text--align-right{text-align:right}.p-text--color-brand.p-text--theme-light{color:#d5001c}.p-text--color-brand.p-text--theme-dark{color:#d5001c}.p-text--color-default.p-text--theme-light{color:#000}.p-text--color-default.p-text--theme-dark{color:#fff}.p-text--color-neutral-contrast-high.p-text--theme-light{color:#323639}.p-text--color-neutral-contrast-high.p-text--theme-dark{color:#e3e4e5}.p-text--color-neutral-contrast-medium.p-text--theme-light{color:#626669}.p-text--color-neutral-contrast-medium.p-text--theme-dark{color:#b0b1b2}.p-text--color-neutral-contrast-low.p-text--theme-light{color:#c9cacb}.p-text--color-neutral-contrast-low.p-text--theme-dark{color:#4a4e51}.p-text--color-notification-success.p-text--theme-light{color:#018a16}.p-text--color-notification-success.p-text--theme-dark{color:#01ba1d}.p-text--color-notification-warning.p-text--theme-light{color:#ff9b00}.p-text--color-notification-warning.p-text--theme-dark{color:#ff9b00}.p-text--color-notification-error.p-text--theme-light{color:#e00000}.p-text--color-notification-error.p-text--theme-dark{color:#fc1717}.p-text--color-inherit{color:inherit}.p-text--ellipsis{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\";\nvar Text = /** @class */ (function () {\n    function Text(hostRef) {\n        registerInstance(this, hostRef);\n        /** Sets a custom HTML tag depending of the usage of the text component. */\n        this.tag = 'p';\n        /** Size of the text. Also defines the size for specific breakpoints, like {base: \"small\", l: \"medium\"}. You always need to provide a base value when doing this. */\n        this.size = 'small';\n        /** The weight of the text. */\n        this.weight = 'regular';\n        /** Text alignment of the component. */\n        this.align = 'left';\n        /** Basic text color variations depending on theme property. */\n        this.color = 'default';\n        /** Adds an ellipsis to a single line of text if it overflows. */\n        this.ellipsis = false;\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n    }\n    Text.prototype.componentDidLoad = function () {\n        var _this = this;\n        var tagName = this.element.tagName.toLowerCase();\n        var style = tagName + \" a {\\n      outline: none transparent;\\n      color: inherit;\\n      text-decoration: underline;\\n      -webkit-transition: outline-color .24s ease, color .24s ease;\\n      transition: outline-color .24s ease, color .24s ease;\\n    }\\n\\n    \" + tagName + \" a:hover {\\n      color: #d5001c;\\n    }\\n\\n    \" + tagName + \" a:focus {\\n      outline: 2px solid #00d5b9;\\n      outline-offset: 1px;\\n    }\";\n        insertSlottedStyles(this.element, style);\n        transitionListener(this.textTag, 'font-size', function () {\n            _this.textTag.style.lineHeight = \"\" + calcLineHeightForElement(_this.textTag);\n        });\n    };\n    Text.prototype.render = function () {\n        var _this = this;\n        var TagType = this.tag;\n        var textClasses = cx(prefix('text'), mapBreakpointPropToPrefixedClasses('text--size', this.size), prefix(\"text--weight-\" + this.weight), prefix(\"text--align-\" + this.align), prefix(\"text--color-\" + this.color), this.ellipsis && prefix('text--ellipsis'), this.color !== 'inherit' && prefix(\"text--theme-\" + this.theme));\n        return (h(TagType, { class: textClasses, ref: function (el) { return _this.textTag = el; } }, h(\"slot\", null)));\n    };\n    Object.defineProperty(Text.prototype, \"element\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    return Text;\n}());\nText.style = textCss;\nexport { Text as p_text };\n"],"sourceRoot":""}