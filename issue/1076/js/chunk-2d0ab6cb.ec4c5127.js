(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ab6cb"],{"14e7":function(e,n,o){"use strict";o.r(n);var t=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},a=[function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",{staticClass:"vmark"},[o("h1",[e._v("Components Ready")]),o("p",[e._v("Since the components are loaded lazily, it might be hard to tell when they are ready if you rely on them programmatically. To solve that we provide the "),o("code",[e._v("componentsReady")]),e._v(" function which returns a promise that resolves as soon as all currently used components are loaded and ready to use.")]),o("p",[e._v("If the DOM changes later on you can call it again to know when the new components are loaded.")]),o("p",[e._v("The "),o("code",[e._v("componentsReady")]),e._v(" function is provided as part of the following components packages:")]),o("ul",[o("li",[e._v("@porsche-design-system/components-js")]),o("li",[e._v("@porsche-design-system/components-angular")]),o("li",[e._v("@porsche-design-system/components-react")])]),o("h2",[e._v("Basic Example")]),o("p",[o("code",[e._v("componentsReady")]),e._v(" is quite flexible. You can call it wherever and as often as you like."),o("br"),e._v(" By default, it uses the current document's "),o("code",[e._v("body")]),e._v(" element to look for any web component of the Porsche Design System.")]),o("pre",[o("code",{staticClass:"language-tsx"},[e._v("import { componentsReady } from '@porsche-design-system/components-{js|angular|react}';\n\nconst doSomeStuff = async () => {\n  // doing some changes to the DOM and add new Porsche Design System components to it\n\n  await componentsReady();\n  \n  // some code that relies on the newly added components\n}\n")])]),o("h2",[e._v("Advanced Example")]),o("p",[e._v("In case you want to limit the search radius of "),o("code",[e._v("componentsReady")]),e._v(" you can pass any "),o("code",[e._v("HTMLElement")]),e._v(" as a parameter."),o("br"),e._v(" This is useful when you want to show a loading indicator for only a part of your application's interface, e.g. the sidebar and only care about components inside.")]),o("pre",[o("code",{staticClass:"language-tsx"},[e._v("import { componentsReady } from '@porsche-design-system/components-{js|angular|react}';\n\nconst initSomeSidebar = async () => {\n  const sidebarEl = document.querySelector('.sidebar');\n  let showSpinner = true;\n  \n  // wait until all Porsche Design System components used within sidebar are ready\n  await componentsReady(sidebarEl);\n  showSpinner = false;\n}\n")])])])}],s=o("2877"),c={},r=Object(s["a"])(c,t,a,!1,null,null,null);n["default"]=r.exports}}]);
//# sourceMappingURL=chunk-2d0ab6cb.ec4c5127.js.map