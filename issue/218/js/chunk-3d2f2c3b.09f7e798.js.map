{"version":3,"sources":["webpack:////github/workspace/node_modules/core-js/modules/es6.regexp.match.js","webpack:///../ui-kit-js/dist/esm-es5/shadow-css-bbdf056f-4d2fc9a2.js"],"names":["anObject","__webpack_require__","toLength","advanceStringIndex","regExpExec","defined","MATCH","$match","maybeCallNative","regexp","O","this","fn","undefined","call","RegExp","String","res","done","value","rx","S","global","fullUnicode","unicode","lastIndex","result","A","n","matchStr","ShadowCss","strictStyling","prototype","shimCssText","cssText","scopeId","hostScopeId","slotScopeId","commentOriginalSelector","commentsWithHash","extractCommentsWithHash","stripComments","orgSelectors","processCommentedSelector_1","rule","placeholder","length","comment","selector","push","processRules","startsWith","content","scopedCssText","_scopeCssText","concat","join","forEach","_a","replace","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertColonSlotted","_convertShadowDOMSelectors","_scopeSelectors","trim","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","slotAttr","regExp","_cssColonSlottedRe","m","_i","arguments","compound","suffix","sel","_polyfillHostNoCombinator","_cssColonHostContextRe","_colonHostContextPartReplacer","partReplacer","parts","split","r","i","p","host","part","indexOf","_polyfillHost","_shadowDOMSelectorsRe","reduce","pattern","scopeSelector","hostSelector","slotSelector","_this","_scopeSelector","CssRule","strict","map","shallowPart","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","test","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","_","before","colon","after","isRe","className","_scopeSelectorPart","scopedP","t","matches","match","safeContent","SafeSelector","scopedSelector","startIndex","sep","hasHost","shouldScope","exec","separator","part_1","slice","index","scopedPart","substring","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","_colonSlottedRe","_polyfillSlotted","placeholders","keep","replaceBy","_content","pseudo","exp","StringWithEscapedBlocks","escapedString","blocks","_parenSuffix","_commentRe","input","_commentWithHashRe","_ruleRe","_curlyRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","contentPrefix","inputParts","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","scopeCss","sc"],"mappings":"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","file":"js/chunk-3d2f2c3b.09f7e798.js","sourcesContent":["'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    ShadowCss.prototype.shimCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n        if (hostScopeId === void 0) { hostScopeId = ''; }\n        if (slotScopeId === void 0) { slotScopeId = ''; }\n        if (commentOriginalSelector === void 0) { commentOriginalSelector = false; }\n        var commentsWithHash = extractCommentsWithHash(cssText);\n        cssText = stripComments(cssText);\n        var orgSelectors = [];\n        if (commentOriginalSelector) {\n            var processCommentedSelector_1 = function (rule) {\n                var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n                var comment = \"/*!@\" + rule.selector + \"*/\";\n                orgSelectors.push({ placeholder: placeholder, comment: comment });\n                rule.selector = placeholder + rule.selector;\n                return rule;\n            };\n            cssText = processRules(cssText, function (rule) {\n                if (rule.selector[0] !== '@') {\n                    return processCommentedSelector_1(rule);\n                }\n                else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                    rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                    rule.content = processRules(rule.content, processCommentedSelector_1);\n                    return rule;\n                }\n                return rule;\n            });\n        }\n        var scopedCssText = this._scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\n        cssText = [scopedCssText].concat(commentsWithHash).join('\\n');\n        if (commentOriginalSelector) {\n            orgSelectors.forEach(function (_a) {\n                var placeholder = _a.placeholder, comment = _a.comment;\n                cssText = cssText.replace(placeholder, comment);\n            });\n        }\n        return cssText;\n    };\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertColonSlotted(cssText, slotScopeId);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeId) {\n            cssText = this._scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\n        }\n        cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n        cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n        return cssText.trim();\n    };\n    /*\n     * convert a rule like :host(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar\n    */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /*\n   * convert a rule like ::slotted(.foo) { }\n  */\n    ShadowCss.prototype._convertColonSlotted = function (cssText, slotAttr) {\n        var regExp = _cssColonSlottedRe;\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var compound = m[2].trim();\n                var suffix = m[3];\n                var sel = '.' + slotAttr + ' > ' + compound + suffix;\n                return sel;\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /*\n     * convert a rule like :host-context(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n     *\n     * and\n     *\n     * :host-context(.foo:host) .bar { ... }\n     *\n     * to\n     *\n     * .foo<scopeName> .bar { ... }\n    */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var parts = m[2].split(',');\n                var r = [];\n                for (var i = 0; i < parts.length; i++) {\n                    var p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /*\n     * Convert combinators like ::shadow and pseudo-elements like ::content\n     * by replacing with space.\n    */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    // change a selector like 'div' to 'name div'\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector, slotSelector, commentOriginalSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var selector = rule.selector;\n            var content = rule.content;\n            if (rule.selector[0] !== '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, slotSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector, slotSelector, commentOriginalSelector);\n            }\n            selector = selector.replace(/\\s{2,}/g, ' ').trim();\n            return new CssRule(selector, content);\n        });\n    };\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, slotSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (shallowPart) {\n            if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n                return shallowPart.trim();\n            }\n            if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                return strict ?\n                    _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector).trim() :\n                    _this._applySelectorScope(shallowPart, scopeSelector, hostSelector).trim();\n            }\n            else {\n                return shallowPart.trim();\n            }\n        })\n            .join(', ');\n    };\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var lre = /\\[/g;\n        var rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    // scope via name and [is=name]\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var replaceBy_1 = this.strictStyling ? \".\" + hostSelector : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var className = '.' + scopeSelector;\n        var _scopeSelectorPart = function (p) {\n            var scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + className + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var scopedSelector = '';\n        var startIndex = 0;\n        var res;\n        var sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var separator = res[1];\n            var part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        selector = selector\n            .replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost)\n            .replace(_colonSlottedRe, _polyfillSlotted);\n        return selector;\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (_, index) { return _this.placeholders[+index]; });\n    };\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g\n];\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n    return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n    return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n};\nvar escapeBlocks = function (input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n    var sc = new ShadowCss();\n    return sc.shimCssText(cssText, scopeId, scopeId + '-h', scopeId + '-s', commentOriginalSelector);\n};\nexport { ShadowCss, scopeCss };\n"],"sourceRoot":""}