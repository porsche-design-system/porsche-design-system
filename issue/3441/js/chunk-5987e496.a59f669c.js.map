{"version":3,"sources":["webpack:///../components/src/utils/typography/heading-size.ts","webpack:///../components/src/utils/typography/typography-text-weight.ts","webpack:////github/workspace/node_modules/core-js/modules/es.array.reduce.js","webpack:///../utilities/projects/utilities/dist/esm/motion/motionEasingBase.mjs","webpack:///../components/src/utils/typography/typography-text-color.ts","webpack:///../components/src/components/scroller/scroller-utils.ts","webpack:///../utilities/projects/utilities/dist/esm/border/borderWidthBase.mjs","webpack:///../utilities/projects/utilities/dist/esm/motion/motionDurationModerate.mjs","webpack:///../components/src/utils/paramCaseToCamelCase.ts","webpack:///../components/src/utils/tag-name.ts","webpack:///../components/src/utils/scroller-popover-utils.ts","webpack:///../components/src/utils/dom/getAttribute.ts","webpack:///../components/src/utils/dom/getHTMLElement.ts","webpack:///../components/src/utils/dom/transformSelectorToDirectChildSelector.ts","webpack:///../components/src/utils/dom/getDirectChildHTMLElement.ts","webpack:///../components/src/utils/dom/getHTMLElements.ts","webpack:///../components/src/utils/dom/getDirectChildHTMLElements.ts","webpack:///../components/src/utils/dom/getShadowRootHTMLElement.ts","webpack:///../components/src/utils/dom/getSlotTextContent.ts","webpack:///../components/src/utils/dom/hasSpecificDirectChildTag.ts","webpack:///../components/src/utils/dom/isParentOfKind.ts","webpack:///../components/src/utils/dom/setAttribute.ts","webpack:///../components/src/utils/dom/setAttributes.ts","webpack:///../components/src/utils/json.ts","webpack:///../components/src/utils/has-window.ts","webpack:///../components/src/utils/a11y/a11y.ts","webpack:///../components/src/utils/color/changeColor.ts","webpack:///../components/src/utils/breakpoint-customizable.ts","webpack:///../components/src/utils/jss.ts","webpack:///../components/src/utils/attribute-observer.ts","webpack:///../components/src/utils/applyConstructableStylesheetStyle.ts","webpack:///../components/src/utils/breakpoint-observer.ts","webpack:///../utilities/projects/utilities/dist/esm/mediaQuery/breakpointShared.mjs","webpack:///../components/src/utils/children-observer.ts","webpack:///../components/src/utils/breakpoint-observer-utils.ts","webpack:///../components/src/utils/device-detection.ts","webpack:///../components/src/utils/form/form-state.ts","webpack:///../components/src/utils/dialog/observer.ts","webpack:////github/workspace/node_modules/throttle-debounce/esm/index.js","webpack:///../components/src/utils/form/form-utils.ts","webpack:///../components/src/utils/getCDNBaseURL.ts","webpack:///../components/src/utils/inject-global-style.ts","webpack:///../components/src/utils/has-prop-value-changed.ts","webpack:///../components/src/utils/is-click-outside.ts","webpack:///../components/src/utils/tile/tile-utils.ts","webpack:///../components/src/utils/log/logger.ts","webpack:///../components/src/utils/scrolling.ts","webpack:///../components/src/utils/select/select-dropdown.ts","webpack:///../components/src/utils/select/keyboard-behavior.ts","webpack:///../components/src/utils/supportsNativePopover.ts","webpack:///../components/src/utils/has-document.ts","webpack:///../components/src/utils/theme/isThemeAuto.ts","webpack:///../components/src/utils/theme/isThemeDark.ts","webpack:///../components/src/utils/theme/theme.ts","webpack:///../components/src/utils/typography/heading-tag.ts","webpack:///../components/src/utils/typography/typography-align.ts","webpack:///../components/src/utils/validation/getOnlyChildOfKindHTMLElementOrThrow.ts","webpack:///../components/src/utils/validation/throwIfInvalidLinkTileProductUsage.ts","webpack:///../components/src/utils/validation/validateProps.ts","webpack:///../components/src/utils/link-button/align-label.ts","webpack:///../components/src/utils/link-button/link-button-variant.ts","webpack:///../utilities/projects/utilities/dist/esm/mediaQuery/breakpointBase.mjs","webpack:///../utilities/projects/utilities/dist/esm/mediaQuery/breakpointXS.mjs","webpack:///../utilities/projects/utilities/dist/esm/mediaQuery/breakpointS.mjs","webpack:///../utilities/projects/utilities/dist/esm/mediaQuery/breakpointM.mjs","webpack:///../utilities/projects/utilities/dist/esm/mediaQuery/breakpointL.mjs","webpack:///../utilities/projects/utilities/dist/esm/mediaQuery/breakpointXL.mjs","webpack:///../utilities/projects/utilities/dist/esm/mediaQuery/breakpointXXL.mjs","webpack:///../utilities/projects/utilities/dist/esm/mediaQuery/breakpoint.mjs","webpack:////github/workspace/node_modules/core-js/internals/array-method-is-strict.js","webpack:///../utilities/projects/utilities/dist/esm/border/borderRadiusSmall.mjs","webpack:////github/workspace/node_modules/@stencil/core/internal/app-data/index.js","webpack:////github/workspace/node_modules/@stencil/core/internal/client/index.js","webpack:////github/workspace/node_modules/core-js/internals/array-reduce.js","webpack:///../utilities/projects/utilities/dist/esm/motion/motionDurationShort.mjs","webpack:///../utilities/projects/utilities/dist/esm/frostedGlass/frostedGlassStyle.mjs","webpack:///../components/src/utils/typography/text-size.ts","webpack:///../components/src/styles/colors.ts","webpack:///../utilities/projects/utilities/dist/esm/motion/motionDurationLong.mjs","webpack:///../utilities/projects/utilities/dist/esm/motion/motionDurationVeryLong.mjs","webpack:///../utilities/projects/utilities/dist/esm/motion/motionEasingIn.mjs","webpack:///../utilities/projects/utilities/dist/esm/motion/motionEasingOut.mjs","webpack:///../components/src/styles/common-styles.ts","webpack:///../components/src/styles/host-hidden-styles.ts","webpack:///../components/src/styles/color-scheme-styles.ts","webpack:///../components/src/styles/hover-media-query.ts","webpack:///../components/src/styles/prefers-color-scheme-dark-media-query.ts","webpack:///../utilities/projects/utilities/dist/esm/mediaQuery/getMediaQueryMin.mjs","webpack:////github/workspace/node_modules/@stencil/core/internal/client lazy ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:////github/workspace/node_modules/core-js/internals/engine-is-node.js","webpack:///../utilities/projects/utilities/dist/esm/border/borderRadiusMedium.mjs","webpack:///../components/src/components/link-tile-product/link-tile-product-utils.ts"],"names":["HEADING_SIZES","TYPOGRAPHY_TEXT_WEIGHTS_DEPRECATED","TYPOGRAPHY_TEXT_WEIGHTS","$","$reduce","left","arrayMethodIsStrict","CHROME_VERSION","IS_NODE","CHROME_BUG","FORCED","target","proto","forced","reduce","callbackfn","length","arguments","this","undefined","motionEasingBase","TYPOGRAPHY_TEXT_COLORS_DEPRECATED","TYPOGRAPHY_TEXT_COLORS","GRADIENT_COLORS","getScrollerElements","scrollerElement","getHTMLElements","shadowRoot","scrollAreaClass","borderWidthBase","motionDurationModerate","paramCaseToCamelCase","str","replace","_","group","toUpperCase","getTagName","el","tagName","toLowerCase","getTagNameWithoutPrefix","host","tagNameWithoutPrefix","exec","tagNamesWithoutTextAndHeadline","TAG_NAMES","filter","item","PREFIXED_TAG_NAMES_CACHE","Map","getPrefixedTagNames","prefix","has","tagNames","result","tag","set","get","getAttribute","attributeName","getHTMLElement","element","selector","querySelector","transformSelectorToDirectChildSelector","split","map","part","join","getDirectChildHTMLElement","sel","x","Array","from","querySelectorAll","getDirectChildHTMLElements","flat","getShadowRootHTMLElement","hasSpecificDirectChildTag","matches","isParentOfKind","parentElement","setAttribute","attributeValue","setAttributes","attributes","Object","entries","forEach","args","parseJSONAttribute","attribute","JSON","parse","hasWindow","window","isHighContrastMode","_window$matchMedia","_window","matchMedia","call","lighten","hsl","changeColor","darken","lightness","p1","p2","Math","min","max","parseInt","parseJSON","prop","jss","create","plugins","jssPluginGlobal","jssPluginNested","jssPluginCamelCase","jssPluginSortMediaQueries","combineMediaQueries","getCss","jssStyles","createStyleSheet","generateId","rule","key","toString","supportsConstructableStylesheets","CSSStyleSheet","replaceSync","hasConstructableStylesheetSupport","getHasConstructableStylesheetSupport","componentCssMap","getCachedComponentCss","getComponentCss","id","arg","stringify","cache","attachComponentCss","css","sheet","adoptedStyleSheets","newSheet","_getShadowRootHTMLEle","remove","styleEl","document","createElement","innerHTML","prepend","buildResponsiveStyles","rawValue","getJssStyle","value","keys","breakpointValue","getMediaQueryMin","base","isObject","obj","isArray","mergeDeep","objects","prev","pVal","oVal","attributeMutationMap","MutationObserver","mutations","mutation","oldValue","idx","arr","findIndex","m","_attributeMutationMap","mediaQueries","values","breakpoint","v","breakpoints","observedNodesMap","val","isTouchDevice","size","observedNodes","node","contains","_observedNodesMap$get","navigator","maxTouchPoints","FORM_STATES","throttle","delay","callback","options","timeoutID","_ref","_ref$noTrailing","noTrailing","_ref$noLeading","noLeading","_ref$debounceMode","debounceMode","cancelled","lastExec","clearExistingTimeout","clearTimeout","cancel","_ref2","_ref2$upcomingOnly","upcomingOnly","wrapper","_len","arguments_","_key","self","elapsed","Date","now","apply","clear","setTimeout","debounce","_ref$atBegin","atBegin","hasCounter","maxLength","getCDNBaseURL","ariaElement","innerText","ROLLUP_REPLACE_CDN_BASE_URL","hasPropValueChanged","newVal","oldVal","every","i","key1","val1","isClickOutside","e","composedPath","includes","TILE_ASPECT_RATIOS_DEPRECATED","TILE_ASPECT_RATIOS","TILE_SIZES_DEPRECATED","TILE_SIZES","TILE_WEIGHTS","TILE_ALIGNS","consoleWarn","messages","console","warn","consoleError","error","throwException","message","Error","getScrollByX","scrollAreaElement","round","offsetWidth","SELECT_DROPDOWN_DIRECTIONS_INTERNAL","supportsNativePopover","HTMLElement","prototype","hasOwnProperty","hasNativePopoverSupport","getHasNativePopoverSupport","hasDocument","isThemeAuto","theme","isThemeDark","THEMES","HEADING_TAGS","TYPOGRAPHY_ALIGNS_DEPRECATED","TYPOGRAPHY_ALIGNS","getOnlyChildOfKindHTMLElementOrThrow","directChildren","formatObjectOutput","formatArrayOutput","isValueNotOfType","propValue","propType","validateValueOfType","propName","breakpointCustomizableTemplate","getBreakpointCustomizableStructure","allowedValues","getAriaStructure","allowedAriaAttributes","getShapeStructure","shapeStructure","name","isBreakpointCustomizableValueInvalid","AllowedTypes","string","number","boolean","array","allowedType","isValidArray","oneOf","allowedValuesOrValidatorFunctions","some","func","isInvalid","aria","ariaAttributes","ariaKey","shape","structureKey","validatorFunc","validator","validationError","find","ALIGN_LABELS_DEPRECATED","ALIGN_LABELS","LINK_BUTTON_VARIANTS_DEPRECATED","breakpointBase","breakpointXS","breakpointS","breakpointM","breakpointL","breakpointXL","breakpointXXL","xs","s","l","xl","xxl","fails","module","exports","METHOD_NAME","argument","method","borderRadiusSmall","customError","BUILD","allRenderFn","cmpDidLoad","cmpDidUnload","cmpDidUpdate","cmpDidRender","cmpWillLoad","cmpWillUpdate","cmpWillRender","connectedCallback","disconnectedCallback","event","hasRenderFn","lifecycle","hostListener","hostListenerTargetWindow","hostListenerTargetDocument","hostListenerTargetBody","hostListenerTargetParent","hostListenerTarget","member","mode","observeAttribute","propMutable","reflect","scoped","shadowDom","slot","cssAnnotations","state","style","formAssociated","svg","updatable","vdomAttribute","vdomXlink","vdomClass","vdomFunctional","vdomKey","vdomListener","vdomRef","vdomPropOrAttr","vdomRender","vdomStyle","vdomText","watchCallback","taskQueue","hotModuleReplacement","isDebug","isDev","isTesting","hydrateServerSide","hydrateClientSide","lifecycleDOMEvents","lazyLoad","profile","slotRelocation","appendChildSlotFix","cloneNodeFix","hydratedAttribute","hydratedClass","scriptDataOpts","scopedSlotTextContentFix","shadowDomShim","slotChildNodesFix","invisiblePrehydration","propBoolean","propNumber","propString","constructableCSS","cmpShouldUpdate","devTools","shadowDelegatesFocus","initializeNextTick","asyncLoading","asyncQueue","transformTagName","attachStyles","experimentalSlotFixes","NAMESPACE","__defProp","defineProperty","__export","all","enumerable","Build","isBrowser","isServer","hostRefs","__STENCIL_HOSTREFS__","WeakMap","getHostRef","ref","isMemberInElement","elm","memberName","STENCIL_DEV_MODE","consoleDevError","consoleDevWarn","styles","HYDRATED_STYLE_ID","SLOT_FB_CSS","XLINK_NS","win","doc","head","plt","$flags$","$resourcesUrl$","jmp","h2","raf","requestAnimationFrame","ael","eventName","listener","opts","addEventListener","rel","removeEventListener","ce","CustomEvent","supportsShadow","promiseResolve","Promise","resolve","queueCongestion","queuePending","queueDomReads","queueDomWrites","queueDomWritesLow","queueTask","queue","write","cb","push","nextTick","flush","consume","i2","performance","consumeTimeout","timeout","ts","splice","ceil","Infinity","then","writeTask","EMPTY_OBJ","SVG_NS","HTML_NS","isDef","isComplexType","o","queryNonceMetaTagContent","doc2","_a","_b","_c","result_exports","err","ok","unwrap","unwrapErr","isOk","isErr","fn","scopeId","contentRef","hostTagName","createTime","fnName","mark","measure","h","nodeName","vnodeData","children","child","slotName","simple","lastSimple","vNodeChildren","walk","c","String","$text$","newVNode","validateInputProperties","classData","className","class","k","isHost","vdomFnUtils","vnode","$attrs$","$children$","$key$","$name$","text","$tag$","$elm$","Host","convertToPublic","convertToPrivate","vattrs","vchildren","vkey","vname","vtag","vtext","inputElm","props","indexOf","typeIndex","minIndex","maxIndex","stepIndex","emitEvent","ev","dispatchEvent","rootAppliedStyles","addStyle","styleContainerNode","cmpMeta","scopeId2","getScopeId","nodeType","styleElm","appliedStyles","Set","nonce","$nonce$","insertBefore","add","hostRef","$cmpMeta$","$hostElement$","flags","endAttachStyles","$tagName$","getRootNode","$modeName$","classList","cmp","setAccessor","newValue","isSvg","isProp","ln","oldClasses","parseClassList","newClasses","removeProperty","setProperty","__lookupSetter__","isComplex","n","xlink","removeAttributeNS","removeAttribute","setAttributeNS","slice","capture","endsWith","CAPTURE_EVENT_SUFFIX","CAPTURE_EVENT_REGEX","parseClassListRegex","RegExp","updateElement","oldVnode","newVnode","isSvgMode2","oldVnodeAttrs","newVnodeAttrs","sortedAttrNames","attrNames","attr","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","newVNode2","childNode","oldVNode","createTextNode","slotReferenceDebugNode","createElementNS","updateElementScopeIds","appendChild","relocateToHostRoot","putBackInOriginalLocation","closest","contentRefNode","childNodes","childNodeArray","reverse","recursive","oldSlotChildNodes","nextSibling","parentReferenceNode","referenceNode","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","parentNode","removeVnodes","index","nullifyVNodeRefs","updateChildren","oldCh","newCh","isInitialRender","elmToMove","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","isSameVnode","patch","leftVNode","rightVNode","oldChildren","newChildren","defaultHolder","textContent","data","updateFallbackSlotVisibility","hidden","siblingNode","trim","relocateNodes","markSlotContentForRelocation","hostContentNodes","j","isNodeLocatedInSlot","relocateNodeData","r","$nodeToRelocate$","$slotRefNode$","relocateNode","nodeToRelocate","vNode","parent","newNode","reference","inserted","findScopeIds","scopeIds","iterateChildNodes","Boolean","renderVdom","renderFnResults","isInitialLoad","_d","_e","hostElm","$vnode$","rootVnode","$attrsToReflect$","hasAttribute","relocateData","orgLocationNode","originalLocationDebugNode","slotRefNode","parentNodeRef","insertBeforeNode","previousSibling","refNode","experimentalScopedSlotChanges","slotVNode","createComment","localName","attachToAncestor","ancestorComponent","$onRenderResolve$","scheduleUpdate","$ancestorComponent$","dispatch","dispatchHooks","endSchedule","instance","$lazyInstance$","maybePromise","$queuedListeners$","methodName","safeCall","emitLifecycleEvent","enqueue","updateComponent","isPromisey","catch","err2","async","endUpdate","rc","endRender","hasDSR","callRender","$renderCount$","serverSideConnected","childrenPromises","postUpdate","postUpdateComponent","render","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","$onInstanceResolve$","forceUpdate","isConnected","who","documentElement","detail","namespace","lifecycleName","bubbles","composed","hydratedSelectorName","ii","childElm","aCallable","toObject","IndexedObject","lengthOfArrayLike","$TypeError","TypeError","REDUCE_EMPTY","createMethod","IS_RIGHT","that","argumentsLength","memo","O","right","motionDurationShort","backdropFilter","frostedGlassStyle","WebkitBackdropFilter","TEXT_SIZES","themeLight","primaryColor","primaryColorDarken","backgroundColor","backgroundColorDarken","backgroundColorLighten","backgroundSurfaceColor","backgroundSurfaceColorDarken","backgroundSurfaceColorLighten","backgroundShadingColor","backgroundFrostedColor","contrastLowColor","contrastMediumColor","contrastHighColor","contrastHighColorDarken","contrastHighColorLighten","hoverColor","hoverColorDarken","activeColor","focusColor","disabledColor","errorColor","errorColorDarken","errorSoftColor","errorSoftColorDarken","errorSoftColorLighten","successColor","successColorDarken","successSoftColor","successSoftColorDarken","successSoftColorLighten","warningColor","warningSoftColor","warningSoftColorDarken","warningSoftColorLighten","infoColor","infoSoftColor","infoSoftColorDarken","infoSoftColorLighten","themeDark","themeAuto","themes","schemeHighContrastMerged","schemeHighContrast","canvasColor","canvasTextColor","highlightColor","linkColor","getThemedColors","getHighContrastColors","motionDurationLong","motionDurationVeryLong","motionEasingIn","motionEasingOut","motionDurationMap","short","moderate","long","veryLong","motionEasingMap","in","out","linear","cssVariableTransitionDuration","getTransition","cssProperty","duration","easing","addImportantToRule","addImportantToEachRule","input","getFocusJssStyle","offset","slotted","pseudo","focusColorDark","slottedSelector","border","outline","outlineOffset","prefersColorSchemeDarkMediaQuery","outlineColor","getHiddenTextJssStyle","isHidden","isShownJssStyle","position","width","height","padding","margin","overflow","clip","whiteSpace","hostHiddenStyles","display","colorSchemeStyles","colorScheme","hoverMediaQuery","webpackEmptyAsyncContext","req","code","global","classof","process","borderRadiusMedium","TILE_PRODUCT_ASPECT_RATIOS","anchorSlot"],"mappings":"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","file":"js/chunk-5987e496.a59f669c.js","sourcesContent":["export const HEADING_SIZES = ['small', 'medium', 'large', 'x-large', 'xx-large', 'inherit'] as const;\nexport type HeadingSize = (typeof HEADING_SIZES)[number];\n","// 'thin' is deprecated and will be mapped to 'regular'\n// 'semibold' is deprecated and will be mapped to 'semi-bold'\n/** @deprecated */\nexport const TYPOGRAPHY_TEXT_WEIGHTS_DEPRECATED = ['thin', 'semibold'] as const;\n/** @deprecated */\nexport type TypographyTextWeightDeprecated = (typeof TYPOGRAPHY_TEXT_WEIGHTS_DEPRECATED)[number];\nexport const TYPOGRAPHY_TEXT_WEIGHTS = ['regular', 'semi-bold', 'bold', ...TYPOGRAPHY_TEXT_WEIGHTS_DEPRECATED] as const;\nexport type TypographyTextWeight = (typeof TYPOGRAPHY_TEXT_WEIGHTS)[number];\n","'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar CHROME_VERSION = require('../internals/engine-v8-version');\nvar IS_NODE = require('../internals/engine-is-node');\n\n// Chrome 80-82 has a critical bug\n// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\nvar CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;\nvar FORCED = CHROME_BUG || !arrayMethodIsStrict('reduce');\n\n// `Array.prototype.reduce` method\n// https://tc39.es/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var length = arguments.length;\n    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);\n  }\n});\n","const motionEasingBase = 'cubic-bezier(0.25,0.1,0.25,1)';\n\nexport { motionEasingBase };\n","/** @deprecated */\nexport const TYPOGRAPHY_TEXT_COLORS_DEPRECATED = [\n  'brand', // deprecated\n  'default', // deprecated\n  'neutral-contrast-low', // deprecated\n  'neutral-contrast-medium', // deprecated\n  'neutral-contrast-high', // deprecated\n  'notification-neutral', // deprecated\n] as const;\n/** @deprecated */\nexport type TypographyTextColorDeprecated = (typeof TYPOGRAPHY_TEXT_COLORS_DEPRECATED)[number];\nexport const TYPOGRAPHY_TEXT_COLORS = [\n  'primary',\n  'contrast-low',\n  'contrast-medium',\n  'contrast-high',\n  'notification-success',\n  'notification-warning',\n  'notification-error',\n  'notification-info',\n  'inherit',\n  ...TYPOGRAPHY_TEXT_COLORS_DEPRECATED,\n] as const;\nexport type TypographyTextColor = (typeof TYPOGRAPHY_TEXT_COLORS)[number];\n","import { getHTMLElements, getScrollByX, scrollAreaClass } from '../../utils';\n\nexport type ScrollerDirection = 'prev' | 'next';\n\nexport const SCROLLER_ARIA_ATTRIBUTES = ['role'] as const;\nexport type ScrollerAriaAttribute = (typeof SCROLLER_ARIA_ATTRIBUTES)[number];\n\n/** @deprecated */\nexport const GRADIENT_COLOR_SCHEMES = ['default', 'surface'] as const;\n/** @deprecated */\nexport type ScrollerGradientColorScheme = (typeof GRADIENT_COLOR_SCHEMES)[number];\n\nexport const GRADIENT_COLORS = ['background-base', 'background-surface'] as const;\nexport type ScrollerGradientColor = (typeof GRADIENT_COLORS)[number];\n\nexport type ScrollerScrollToPosition = { scrollPosition: number; isSmooth?: boolean } | string; // string to support attribute, gets removed via InputParser\n\nexport const SCROLL_INDICATOR_POSITIONS = ['top', 'center'] as const;\n/** @deprecated */\nexport type ScrollerScrollIndicatorPosition = (typeof SCROLL_INDICATOR_POSITIONS)[number];\nexport type ScrollerAlignScrollIndicator = ScrollerScrollIndicatorPosition;\n\nexport const getScrollPositionAfterPrevNextClick = (\n  scrollAreaElement: HTMLElement,\n  direction: ScrollerDirection\n): number => {\n  const { scrollLeft } = scrollAreaElement;\n  const scrollByX = getScrollByX(scrollAreaElement);\n  return direction === 'next' ? scrollLeft + scrollByX : scrollLeft - scrollByX;\n};\n\nexport const getScrollerElements = (scrollerElement: HTMLElement): [HTMLElement, HTMLElement] => {\n  return getHTMLElements(scrollerElement.shadowRoot, `.${scrollAreaClass},.action-prev`) as [HTMLElement, HTMLElement];\n};\n\nexport const isScrollable = (isPrevHidden: boolean, isNextHidden: boolean): boolean => {\n  return !(isPrevHidden && isNextHidden);\n};\n","const borderWidthBase = '2px';\n\nexport { borderWidthBase };\n","const motionDurationModerate = '0.4s';\n\nexport { motionDurationModerate };\n","export const paramCaseToCamelCase = (str: string): string => {\n  return str.replace(/-(\\w)/g, (_, group) => group.toUpperCase());\n};\n","import { type TagName, type TagNameCamelCase, TAG_NAMES } from '@porsche-design-system/shared';\nimport { paramCaseToCamelCase } from './paramCaseToCamelCase';\n\n// NOTE: these utils are in the same file on purpose\n// to force them being bundled into our core chunk\n\nexport const getTagName = (el: HTMLElement): string => el.tagName.toLowerCase();\n\nexport const getTagNameWithoutPrefix = (host: HTMLElement): TagName => {\n  const tagName = getTagName(host);\n  const [, tagNameWithoutPrefix = ''] = /^(?:[a-z-]+-)?(p-[a-z-]+)$/.exec(tagName) || [];\n  return (tagNameWithoutPrefix || tagName) as TagName; // return tagName as fallback for default tags\n};\n\n// prevent internal usage of p-display, p-heading, p-headline and p-text\ntype AllowedTagNameCamelCase = Exclude<TagNameCamelCase, 'pDisplay' | 'pHeadline' | 'pHeading' | 'pText'>;\nexport type PrefixedTagNames = Record<AllowedTagNameCamelCase, string>;\nconst tagNamesWithoutTextAndHeadline = TAG_NAMES.filter(\n  (item) => item !== 'p-text' && item !== 'p-heading' && item !== 'p-headline' && item !== 'p-display'\n);\n\nexport const PREFIXED_TAG_NAMES_CACHE = new Map<string, PrefixedTagNames>();\n\n// TODO: typing support for components is missing\nexport const getPrefixedTagNames = (host: HTMLElement): PrefixedTagNames => {\n  const [, prefix = ''] = /^([a-z-]+)-p-[a-z-]+$/.exec(getTagName(host)) || [];\n\n  if (!PREFIXED_TAG_NAMES_CACHE.has(prefix)) {\n    const tagNames: PrefixedTagNames = tagNamesWithoutTextAndHeadline.reduce(\n      prefix\n        ? (result, tag) => ({\n            ...result,\n            [paramCaseToCamelCase(tag)]: `${prefix}-${tag}`,\n          })\n        : (result, tag) => ({\n            ...result,\n            [paramCaseToCamelCase(tag)]: tag,\n          }),\n      {} as PrefixedTagNames\n    );\n\n    PREFIXED_TAG_NAMES_CACHE.set(prefix, tagNames);\n  }\n\n  return PREFIXED_TAG_NAMES_CACHE.get(prefix);\n};\n","// This class is shared since the popover needs to register a scroll listener to this node in order to hide the popover when the table is scrolled\nexport const scrollAreaClass = 'scroll-area';\n","export const getAttribute = (el: HTMLElement | Element, attributeName: string): string | null => {\n  return el.getAttribute(attributeName);\n};\n","/* eslint-disable prefer-arrow/prefer-arrow-functions */\nimport type { HTMLElementOrShadowRoot } from './dom-types';\n\n// prettier-ignore\nexport function getHTMLElement<K extends keyof HTMLElementTagNameMap>(element: HTMLElementOrShadowRoot, selector: K): HTMLElementTagNameMap[K] | null;\n// prettier-ignore\nexport function getHTMLElement<E extends Element = Element>(element: HTMLElementOrShadowRoot, selector: string): E | null;\nexport function getHTMLElement(element: HTMLElementOrShadowRoot, selector: string): any {\n  return element?.querySelector(selector);\n}\n","export const transformSelectorToDirectChildSelector = (selector: string): string =>\n  selector\n    .split(',')\n    .map((part) => ':scope>' + part)\n    .join();\n","/* eslint-disable prefer-arrow/prefer-arrow-functions */\nimport { getHTMLElement } from './getHTMLElement';\nimport { transformSelectorToDirectChildSelector } from './transformSelectorToDirectChildSelector';\n\n// prettier-ignore\nexport function getDirectChildHTMLElement<K extends keyof HTMLElementTagNameMap>(element: HTMLElement, selector: K): HTMLElementTagNameMap[K] | null;\n// prettier-ignore\nexport function getDirectChildHTMLElement<E extends Element = Element>(element: HTMLElement, selector: string): E | null;\nexport function getDirectChildHTMLElement(element: HTMLElement, selector: string): any {\n  // querySelector(All) doesn't work with :scope pseudo class and comma separator in jsdom, yet\n  // https://github.com/jsdom/jsdom/issues/3141\n  // therefore we got a workaround so it works nicely when consumed from jsdom-polyfill package\n  return (\n    transformSelectorToDirectChildSelector(selector)\n      .split(',')\n      .map((sel) => getHTMLElement(element, sel))\n      .filter((x) => x)[0] || null // comma separated selector might return null, so we have to filter\n  );\n}\n","/* eslint-disable prefer-arrow/prefer-arrow-functions */\nimport type { HTMLElementOrShadowRoot } from './dom-types';\n\n// prettier-ignore\nexport function getHTMLElements<K extends keyof HTMLElementTagNameMap>(element: HTMLElementOrShadowRoot, selector: K): HTMLElementTagNameMap[K][];\n// prettier-ignore\nexport function getHTMLElements<E extends Element = Element>(element: HTMLElementOrShadowRoot, selector: string): E[];\nexport function getHTMLElements(element: HTMLElementOrShadowRoot, selector: string): any {\n  return element ? Array.from(element.querySelectorAll(selector)) : [];\n}\n","/* eslint-disable prefer-arrow/prefer-arrow-functions */\nimport { getHTMLElements } from './getHTMLElements';\nimport { transformSelectorToDirectChildSelector } from './transformSelectorToDirectChildSelector';\n\n// prettier-ignore\nexport function getDirectChildHTMLElements<K extends keyof HTMLElementTagNameMap>(element: HTMLElement, selector: K): HTMLElementTagNameMap[K][];\n// prettier-ignore\nexport function getDirectChildHTMLElements<E extends Element = Element>(element: HTMLElement, selector: string): E[];\nexport function getDirectChildHTMLElements(element: HTMLElement, selector: string): any {\n  // querySelector(All) doesn't work with :scope pseudo class and comma separator in jsdom, yet\n  // https://github.com/jsdom/jsdom/issues/3141\n  // therefore we got a workaround, so it works nicely when consumed from jsdom-polyfill package\n  return transformSelectorToDirectChildSelector(selector)\n    .split(',')\n    .map((sel) => getHTMLElements(element, sel))\n    .flat(); // might contain duplicates\n}\n","/* eslint-disable prefer-arrow/prefer-arrow-functions */\nimport type { HTMLElementOrShadowRoot } from './dom-types';\nimport { getHTMLElement } from './getHTMLElement';\n\n// prettier-ignore\nexport function getShadowRootHTMLElement<K extends keyof HTMLElementTagNameMap>(element: HTMLElement, selector: K): HTMLElementTagNameMap[K] | null;\n// prettier-ignore\nexport function getShadowRootHTMLElement<E extends Element = Element>(element: HTMLElementOrShadowRoot, selector: string): E | null;\nexport function getShadowRootHTMLElement(element: HTMLElement, selector: string): any {\n  return getHTMLElement(element.shadowRoot, selector);\n}\n","import type { HTMLElementOrShadowRoot } from './dom-types';\nimport { getHTMLElement } from './getHTMLElement';\n\nexport const getSlotTextContent = (el: HTMLElementOrShadowRoot, slotName: string): string =>\n  getHTMLElement(el, `[slot=\"${slotName}\"]`)?.textContent;\n","import { getDirectChildHTMLElement } from './getDirectChildHTMLElement';\n\nexport const hasSpecificDirectChildTag = (host: HTMLElement, tag: string): boolean => {\n  const el = getDirectChildHTMLElement(host, ':only-child');\n  return !!(el?.matches(tag));\n};\n","import type { TagName } from '@porsche-design-system/shared';\nimport { getTagNameWithoutPrefix } from '..';\n\nexport const isParentOfKind = (element: HTMLElement, tagName: TagName): boolean => {\n  const { parentElement } = element;\n  return parentElement && getTagNameWithoutPrefix(parentElement) === tagName;\n};\n","export const setAttribute = (el: HTMLElement, attributeName: string, attributeValue = ''): void => {\n  el.setAttribute(attributeName, attributeValue);\n};\n","/**\n * Sets attributes on an HTMLElement.\n *\n * @param {HTMLElement} host - The target HTMLElement to set attributes on.\n * @param {{ [x: string]: string }} attributes - An object of attribute names and their corresponding values.\n * @returns {void}\n */\nexport const setAttributes = (host: HTMLElement, attributes: { [x: string]: string }): void =>\n  Object.entries(attributes).forEach((args) => host.setAttribute(...args));\n","export const parseJSONAttribute = <T>(attribute: T | string): T => {\n  // Input is object, e.g. { 'aria-label': 'Some label' }\n  if (typeof attribute !== 'string') {\n    return attribute;\n  }\n\n  return JSON.parse(\n    attribute\n      // Convert single quotes to double quotes except the ones which are escaped by backslash\n      .replace(/\\\\'/g, '__escaped_single_quote__')\n      .replace(/'/g, '\"')\n      .replace(/__escaped_single_quote__/g, '\\\\\\'')\n      // Remove string escapes except the ones followed by unicode u0027\n      .replace(/([^\\\\])\\\\(?!u0027)/g, '$1')\n      // Wrap keys in double quotes\n      .replace(/[\\s\"]?([\\w-]+)[\\s\"]?:/g, '\"$1\":')\n  );\n};\n","export const hasWindow = typeof window !== 'undefined';\n","import { removeAttribute, setAttribute } from '../dom';\nimport type { AriaAttributes } from '../../types';\nimport { parseJSONAttribute } from '../json';\nimport type { FormState } from '../form/form-state';\nimport { hasWindow } from '../has-window';\n\nexport type SetAriaAttributesOptions = {\n  label?: string;\n  message?: string;\n  state?: FormState;\n};\n\nexport const setAriaAttributes = (el: HTMLElement, opts: SetAriaAttributesOptions): void => {\n  const { label, message, state } = opts;\n  if (label) {\n    setAttribute(el, 'aria-label', `${label}${message ? `. ${message}` : ''}`);\n  }\n\n  if (state === 'error') {\n    setAttribute(el, 'aria-invalid', 'true');\n  } else {\n    removeAttribute(el, 'aria-invalid');\n  }\n};\n\nexport const parseAndGetAriaAttributes = (rawAttributes: AriaAttributes | string): AriaAttributes | undefined => {\n  if (rawAttributes) {\n    return Object.fromEntries(\n      Object.entries(parseJSONAttribute(rawAttributes)).map(([key, val]) => [\n        key,\n        // convert booleans to strings so that values are properly set and not just result in attributes without a value when true in jsx\n        typeof val === 'boolean' ? `${val}` : val,\n      ])\n    );\n  }\n  return undefined;\n};\n\nexport const isHighContrastMode = hasWindow && window.matchMedia?.('(forced-colors: active)').matches;\n","export const lighten = (hsl: string): string => {\n  return changeColor(hsl, 15);\n};\n\nexport const darken = (hsl: string): string => {\n  return changeColor(hsl, -15);\n};\n\nconst changeColor = (hsl: string, lightness: number): string => {\n  return hsl.replace(/\\s(\\d+)(%?)\\//, (_: string, p1: string, p2: string) => {\n    return ` ${Math.min(Math.max(parseInt(p1, 10) + lightness, 0), 100)}${p2}/`;\n  });\n};\n","import type { Breakpoint } from '@porsche-design-system/styles';\n\nexport type BreakpointValues<T> = {\n  [key in Breakpoint]?: T;\n} & {\n  base: T;\n};\n\n// string is needed in order to pass and parse objects via prop decorator\nexport type BreakpointCustomizable<T> = T | BreakpointValues<T> | string;\n\nexport type BreakpointValue = string | number | boolean;\n\nexport const parseJSON = (\n  prop: BreakpointCustomizable<BreakpointValue>\n): BreakpointValues<BreakpointValue> | BreakpointValue => {\n  if (typeof prop === 'string') {\n    try {\n      // prop is potentially JSON parsable string, e.g. \"{ base: 'block', l: 'inline' }\" or \"true\" or \"false\"\n      return JSON.parse(\n        prop\n          .replace(/'/g, '\"') // convert single quotes to double quotes\n          .replace(/[\\s\"]?([a-z]+)[\\s\"]?:([^//])/g, '\"$1\":$2') // wrap keys in double quotes if they don't have them but ignore potential urls\n      );\n    } catch {\n      // prop is string, e.g. \"block\" or \"inline\"\n      return prop;\n    }\n  } else {\n    // prop is object, e.g. { base: 'block', l: 'inline' } or number, e.g. 123 or boolean, e.g. true\n    return prop;\n  }\n};\n","import type { TagName } from '@porsche-design-system/shared';\nimport { type BreakpointCustomizable, parseJSON } from './breakpoint-customizable';\nimport { type JssStyle, type Styles, create } from 'jss';\nimport jssPluginCamelCase from 'jss-plugin-camel-case';\nimport jssPluginGlobal from 'jss-plugin-global';\nimport jssPluginNested from 'jss-plugin-nested';\nimport jssPluginSortMediaQueries from 'jss-plugin-sort-css-media-queries';\nimport { type Breakpoint, getMediaQueryMin } from '@porsche-design-system/styles';\nimport { getShadowRootHTMLElement } from './dom';\nimport { getTagNameWithoutPrefix, hasPropValueChanged } from '.';\nimport { addImportantToEachRule } from '../styles';\n\n// NOTE: handpicked selection of plugins from jss-preset-default\nconst jss = create({\n  plugins: [\n    jssPluginGlobal(),\n    jssPluginNested(),\n    jssPluginCamelCase(),\n    jssPluginSortMediaQueries({ combineMediaQueries: true }),\n  ],\n});\n\nexport const getCss = (jssStyles: Styles): string =>\n  jss\n    .createStyleSheet(jssStyles, {\n      generateId: (rule) => rule.key,\n    })\n    .toString();\n\nexport const supportsConstructableStylesheets = (): boolean => {\n  try {\n    return typeof new CSSStyleSheet().replaceSync === 'function';\n  } catch {\n    return false;\n  }\n};\n\n// determine it once\nconst hasConstructableStylesheetSupport = supportsConstructableStylesheets();\n// getter for easy mocking\nexport const getHasConstructableStylesheetSupport = (): boolean => hasConstructableStylesheetSupport;\n\ntype CssCacheMap = Map<string, string>;\nexport const componentCssMap = new Map<TagName, CssCacheMap>();\n\nexport const getCachedComponentCss = <T extends (...p: any[]) => string>(\n  host: HTMLElement,\n  getComponentCss: T,\n  ...args: Parameters<T>\n): string => {\n  const tagName = getTagNameWithoutPrefix(host);\n\n  if (!componentCssMap.has(tagName)) {\n    componentCssMap.set(tagName, new Map());\n  }\n\n  const id = args.map((arg) => (typeof arg === 'object' ? JSON.stringify(arg) : arg)).join('|');\n  const cache = componentCssMap.get(tagName);\n\n  if (!cache.has(id)) {\n    cache.set(id, getComponentCss(...args));\n  }\n\n  return cache.get(id);\n};\n\nexport const attachComponentCss = <T extends (...p: any[]) => string>(\n  host: HTMLElement,\n  getComponentCss: T,\n  ...args: Parameters<T>\n): void => {\n  const css = getCachedComponentCss(host, getComponentCss, ...args);\n\n  if (getHasConstructableStylesheetSupport()) {\n    const [sheet] = host.shadowRoot.adoptedStyleSheets;\n    if (sheet) {\n      sheet.replaceSync(css);\n    } else {\n      const newSheet = new CSSStyleSheet();\n      newSheet.replaceSync(css);\n      host.shadowRoot.adoptedStyleSheets = [newSheet];\n    }\n  } else {\n    // NOTE: fallback for Safari\n    // old style needs to be removed and added again in safari to be recognized\n    getShadowRootHTMLElement(host, 'style[jss]')?.remove();\n\n    const styleEl = document.createElement('style');\n    styleEl.setAttribute('jss', '');\n    styleEl.innerHTML = css;\n    host.shadowRoot.prepend(styleEl);\n  }\n};\n\n// TODO: this function does nothing but treats for unknowns reasons e.g. getThemedColors to be bundled into main chunk\nexport const doNothing = (): void => {\n  addImportantToEachRule({});\n  hasPropValueChanged(1, 1); // to force into main chunk\n};\n\nexport type GetJssStyleFunction = (value?: any) => JssStyle;\n\nexport const buildResponsiveStyles = <T>(\n  rawValue: BreakpointCustomizable<T>,\n  getJssStyle: GetJssStyleFunction\n): Styles => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n  const value = parseJSON(rawValue as any);\n\n  return typeof value === 'object'\n    ? Object.keys(value)\n        // base styles are applied on root object, responsive styles are nested within\n        // hence it is used as the initial object within reduce function\n        .filter((key) => key !== 'base')\n        .reduce(\n          (result, breakpointValue: Breakpoint) => ({\n            ...result,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            [getMediaQueryMin(breakpointValue as any)]: getJssStyle(value[breakpointValue]) as Styles,\n          }),\n          getJssStyle(value.base) as Styles\n        )\n    : (getJssStyle(value) as Styles);\n};\n\nexport const isObject = <T extends Record<string, any>>(obj: T): boolean =>\n  typeof obj === 'object' && !Array.isArray(obj);\n\n// NOTE: taken from https://stackoverflow.com/a/48218209\nexport const mergeDeep = <T extends Record<string, any>>(...objects: T[]): T => {\n  return objects.reduce((prev, obj) => {\n    Object.keys(obj).forEach((key: keyof T) => {\n      const pVal = prev[key];\n      const oVal = obj[key];\n\n      if (isObject(pVal) && isObject(oVal)) {\n        prev[key] = mergeDeep(pVal, oVal);\n      } else {\n        prev[key] = oVal;\n      }\n    });\n\n    return prev;\n  }, {} as T);\n};\n","import { hasWindow } from './has-window';\n\nexport const attributeMutationMap: Map<Node, () => void> = new Map();\n\nconst attributeObserver =\n  hasWindow &&\n  new MutationObserver((mutations) => {\n    mutations\n      // reduce array to only entries that have really a changed value\n      .filter((mutation) => mutation.oldValue !== (mutation.target as HTMLElement).getAttribute(mutation.attributeName))\n      // remove duplicates so we execute callback only once per node\n      .filter((mutation, idx, arr) => arr.findIndex((m) => m.target === mutation.target) === idx)\n      .forEach((mutation) => attributeMutationMap.get(mutation.target)?.());\n  });\n\nexport const observeAttributes = <T extends HTMLElement, K = keyof T>(\n  node: T,\n  attributes: Lowercase<K extends string ? K : string>[],\n  callback: () => void\n): void => {\n  // node might not be defined in connectedCallback\n  if (node) {\n    attributeMutationMap.set(node, callback);\n    attributeObserver.observe(node, { attributeFilter: attributes as string[], attributeOldValue: true });\n  }\n};\n\nexport const unobserveAttributes = <T extends HTMLElement>(node: T): void => {\n  attributeMutationMap.delete(node);\n};\n","import type { Styles } from 'jss';\nimport { getCss } from './jss';\n\ntype ElementsMap = Map<string, ElementMap>;\ntype ElementMap = Map<Document | ShadowRoot, boolean>;\n\nconst elementsMap: ElementsMap = new Map();\n\nconst getElementMap = (element: HTMLElement): ElementMap => {\n  const tagName = element.tagName;\n  if (!elementsMap.has(tagName)) {\n    elementsMap.set(tagName, new Map());\n  }\n  return elementsMap.get(tagName);\n};\n\n// TODO: Use function from ./jss (Causes bundling issues)\nconst hasConstructableStylesheetSupport = ((): boolean => {\n  try {\n    return typeof new CSSStyleSheet().replaceSync === 'function';\n  } catch {\n    return false;\n  }\n})(); // determine it once\n\nexport const applyConstructableStylesheetStyles = (\n  element: HTMLElement,\n  ...getStyles: ((tagName: string) => Styles)[]\n): void => {\n  if (hasConstructableStylesheetSupport) {\n    const documentOrShadowRoot = element.getRootNode() as Document | ShadowRoot;\n    const elementMap: ElementMap = getElementMap(element);\n\n    if (!elementMap.has(documentOrShadowRoot)) {\n      elementMap.set(documentOrShadowRoot, true);\n\n      const sheet = new CSSStyleSheet();\n      sheet.replaceSync(getStyles.map((getStyle) => getCss(getStyle(element.tagName.toLowerCase()))).join(''));\n      // TODO: for some reason unit test in Docker environment throws TS2339: Property 'push' does not exist on type 'readonly CSSStyleSheet[]'\n      /* eslint-disable @typescript-eslint/prefer-ts-expect-error, @typescript-eslint/ban-ts-comment */\n      // @ts-ignore\n      documentOrShadowRoot.adoptedStyleSheets?.push(sheet);\n    }\n  }\n};\n","import { breakpoint } from '@porsche-design-system/styles';\nimport { hasWindow } from './has-window';\n\nexport const mediaQueries = Object.values(breakpoint).map((v) => `(min-width:${v}px)`);\n\nexport let mediaQueryLists = hasWindow && window.matchMedia ? mediaQueries.map(window.matchMedia) : [];\n\n// for unit tests\nexport const overrideMediaQueryLists = (override: MediaQueryList[]): void => {\n  mediaQueryLists = override;\n};\n\nexport const breakpointChangeCallbackMap: Map<HTMLElement, () => void> = new Map();\n\nexport const observeBreakpointChange = (node: HTMLElement, callback: () => void): void => {\n  // node might not be defined in connectedCallback\n  if (node) {\n    if (breakpointChangeCallbackMap.size === 0) {\n      mediaQueryLists.forEach((mediaQueryList) => {\n        // matchmedia-polyfill only implements addListener in jsdom-polyfill\n        mediaQueryList.addEventListener?.('change', handleBreakpointChange);\n      });\n    }\n    breakpointChangeCallbackMap.set(node, callback);\n  }\n};\n\nexport const unobserveBreakpointChange = (node: HTMLElement): void => {\n  breakpointChangeCallbackMap.delete(node);\n  if (breakpointChangeCallbackMap.size === 0) {\n    mediaQueryLists.forEach((mediaQueryList) => {\n      // matchmedia-polyfill only implements removeListener in jsdom-polyfill\n      mediaQueryList.removeEventListener?.('change', handleBreakpointChange);\n    });\n  }\n};\n\nexport const handleBreakpointChange = (): void => {\n  breakpointChangeCallbackMap.forEach((breakpointChangeCallback) => {\n    breakpointChangeCallback();\n  });\n};\n","const breakpoints = ['base', 'xs', 's', 'm', 'l', 'xl', 'xxl'];\n\nexport { breakpoints };\n","import type { AriaAttributes } from '../types';\nimport { hasWindow } from './has-window';\n\n/**\n * Map of observed nodes and their corresponding callback functions.\n */\nexport const observedNodesMap: Map<Node, () => void> = new Map();\n\n/**\n * Mutation observer for observing changes in the children of observed nodes.\n */\nconst childrenObserver =\n  hasWindow &&\n  new MutationObserver((mutations) => {\n    // there may be race conditions in jsdom-polyfill tests  where the map is already empty when a mutation happens\n    if (observedNodesMap.size) {\n      const observedNodes = Array.from(observedNodesMap.keys());\n      mutations\n        // remove duplicates so we execute callback only once per node\n        .filter((mutation, idx, arr) => arr.findIndex((m) => m.target === mutation.target) === idx)\n        // find all observing parent nodes of mutated node and invoke their callbacks\n        .forEach((mutation) => {\n          observedNodes\n            .filter((node) => node.contains(mutation.target))\n            .forEach((node) => observedNodesMap.get(node)?.());\n        });\n    }\n  });\n\n/**\n * Observes the children of a given node and invokes a callback when changes occur.\n * @template T - The type of the node.\n * @template K - The type of the node's attributes.\n * @param {T} node - The node to observe.\n * @param {() => void} callback - The callback function to invoke when changes occur.\n * @param {(Lowercase<K extends string ? K : string> | keyof AriaAttributes)[]} [attributes] - Optional attribute names to be monitored.\n * @param {MutationObserverInit} options - An object providing options that describe which DOM mutations should be reported to\n * @returns {void}\n */\nexport const observeChildren = <T extends HTMLElement, K = keyof T>(\n  node: T,\n  callback: () => void,\n  // TODO: Remove attributes parameter and always use options\n  attributes?: (Lowercase<K extends string ? K : string> | keyof AriaAttributes)[],\n  options: MutationObserverInit = {\n    childList: true,\n    subtree: true,\n    characterData: true,\n  }\n): void => {\n  // node might not be defined in connectedCallback\n  if (node) {\n    observedNodesMap.set(node, callback);\n    childrenObserver.observe(node, {\n      attributeFilter: attributes,\n      ...options,\n    });\n  }\n};\n\n/**\n * Stops observing the children of a given node.\n * @template T - The type of the node.\n * @param {T} node - The node to unobserve.\n * @returns {void}\n */\nexport const unobserveChildren = <T extends HTMLElement>(node: T): void => {\n  observedNodesMap.delete(node);\n};\n","import { type Breakpoint, breakpoint, breakpoints } from '@porsche-design-system/styles';\nimport type { BreakpointCustomizable } from './breakpoint-customizable';\nimport { mediaQueryLists } from './breakpoint-observer';\n\nexport const flippedBreakpoint = Object.entries(breakpoint).reduce(\n  (result, [key, val]) => ({ ...result, [`${val}px`]: key }),\n  {} as Record<string, Breakpoint>\n);\n\nexport const getCurrentBreakpointKey = (): Breakpoint => {\n  const lastMatchingMediaQuery = mediaQueryLists\n    .filter((item) => item.matches)\n    .map((item) => item.media)\n    .pop();\n\n  return flippedBreakpoint[/\\d+px/.exec(lastMatchingMediaQuery)[0]] as Breakpoint;\n};\n\nexport const getCurrentMatchingBreakpointValue = <T>(data: BreakpointCustomizable<T>): T => {\n  if (typeof data === 'object') {\n    const currentBreakpoint = getCurrentBreakpointKey();\n\n    const result = data[currentBreakpoint as keyof BreakpointCustomizable<T>];\n    if (result) {\n      return result;\n    } else {\n      const valuesArray = breakpoints.map((bp) => data[bp as keyof BreakpointCustomizable<T>]);\n      // fill gaps with value from preceding breakpoint\n      valuesArray.forEach((val, i, arr) => {\n        if (val === undefined) {\n          arr[i] = arr[i - 1];\n        }\n      });\n      return valuesArray[breakpoints.indexOf(currentBreakpoint)];\n    }\n  } else {\n    return data as T;\n  }\n};\n","import { hasWindow } from './has-window';\n\nexport const isTouchDevice = (): boolean | undefined => {\n  if (!hasWindow) {\n    return undefined;\n  }\n  return !!('ontouchstart' in window || window.navigator.maxTouchPoints > 0);\n};\n","export const FORM_STATES = ['none', 'error', 'success'] as const;\nexport type FormState = typeof FORM_STATES[number];\n","/**\n * Map of scrollArea elements which are used as root in the corresponding IntersectionObserver instance.\n * Used in order to create only one Intersection Observer instance per scrollArea element.\n */\nexport const scrollAreaObserverMap: Map<HTMLElement, IntersectionObserver> = new Map();\n\n/**\n * Map of observed nodes and their corresponding IntersectionObserver instances.\n */\nexport const observedStickyNodesMap: Map<HTMLElement, IntersectionObserver> = new Map();\n\n/**\n * Creates an IntersectionObserver for observing sticky elements within a scroll area.\n * @param {HTMLElement} scrollArea - The scroll area containing the sticky elements.\n * @returns {IntersectionObserver} - The created IntersectionObserver instance.\n */\nexport const getIntersectionObserverStickyArea = (scrollArea: HTMLElement): IntersectionObserver => {\n  return new IntersectionObserver(\n    (entries) => {\n      for (const { target, isIntersecting } of entries) {\n        target.toggleAttribute('data-stuck', !isIntersecting);\n      }\n    },\n    {\n      root: scrollArea,\n      threshold: 1,\n    }\n  );\n};\n\n/**\n * Observes a sticky area with IntersectionObserver and ensures it's only added once.\n * @param {HTMLElement} scrollArea - The scroll area containing the sticky element.\n * @param {HTMLElement} stickyNode - The sticky element to observe.\n */\nexport const observeStickyArea = (scrollArea: HTMLElement, stickyNode: HTMLElement): void => {\n  let observer = scrollAreaObserverMap.get(scrollArea);\n\n  if (!observer) {\n    observer = getIntersectionObserverStickyArea(scrollArea);\n    scrollAreaObserverMap.set(scrollArea, observer);\n  }\n\n  if (!observedStickyNodesMap.has(stickyNode)) {\n    observer.observe(stickyNode);\n    observedStickyNodesMap.set(stickyNode, observer);\n  }\n};\n","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param {number} delay -                  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher)\n *                                            are most useful.\n * @param {Function} callback -               A function to be executed after delay milliseconds. The `this` context and all arguments are passed through,\n *                                            as-is, to `callback` when the throttled-function is executed.\n * @param {object} [options] -              An object to configure options.\n * @param {boolean} [options.noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds\n *                                            while the throttled-function is being called. If noTrailing is false or unspecified, callback will be executed\n *                                            one final time after the last throttled-function call. (After the throttled-function has not been called for\n *                                            `delay` milliseconds, the internal counter is reset).\n * @param {boolean} [options.noLeading] -   Optional, defaults to false. If noLeading is false, the first throttled-function call will execute callback\n *                                            immediately. If noLeading is true, the first the callback execution will be skipped. It should be noted that\n *                                            callback will never executed if both noLeading = true and noTrailing = true.\n * @param {boolean} [options.debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is\n *                                            false (at end), schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function} A new, throttled, function.\n */\nfunction throttle (delay, callback, options) {\n  var _ref = options || {},\n    _ref$noTrailing = _ref.noTrailing,\n    noTrailing = _ref$noTrailing === void 0 ? false : _ref$noTrailing,\n    _ref$noLeading = _ref.noLeading,\n    noLeading = _ref$noLeading === void 0 ? false : _ref$noLeading,\n    _ref$debounceMode = _ref.debounceMode,\n    debounceMode = _ref$debounceMode === void 0 ? undefined : _ref$debounceMode;\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n  var timeoutID;\n  var cancelled = false;\n\n  // Keep track of the last time `callback` was executed.\n  var lastExec = 0;\n\n  // Function to clear existing timeout\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  }\n\n  // Function to cancel next exec\n  function cancel(options) {\n    var _ref2 = options || {},\n      _ref2$upcomingOnly = _ref2.upcomingOnly,\n      upcomingOnly = _ref2$upcomingOnly === void 0 ? false : _ref2$upcomingOnly;\n    clearExistingTimeout();\n    cancelled = !upcomingOnly;\n  }\n\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n  function wrapper() {\n    for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {\n      arguments_[_key] = arguments[_key];\n    }\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n    if (cancelled) {\n      return;\n    }\n\n    // Execute `callback` and update the `lastExec` timestamp.\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, arguments_);\n    }\n\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n    function clear() {\n      timeoutID = undefined;\n    }\n    if (!noLeading && debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`\n       * and noLeading != true.\n       */\n      exec();\n    }\n    clearExistingTimeout();\n    if (debounceMode === undefined && elapsed > delay) {\n      if (noLeading) {\n        /*\n         * In throttle mode with noLeading, if `delay` time has\n         * been exceeded, update `lastExec` and schedule `callback`\n         * to execute after `delay` ms.\n         */\n        lastExec = Date.now();\n        if (!noTrailing) {\n          timeoutID = setTimeout(debounceMode ? clear : exec, delay);\n        }\n      } else {\n        /*\n         * In throttle mode without noLeading, if `delay` time has been exceeded, execute\n         * `callback`.\n         */\n        exec();\n      }\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n  wrapper.cancel = cancel;\n\n  // Return the wrapper function.\n  return wrapper;\n}\n\n/* eslint-disable no-undefined */\n\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param {number} delay -               A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param {Function} callback -          A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                        to `callback` when the debounced-function is executed.\n * @param {object} [options] -           An object to configure options.\n * @param {boolean} [options.atBegin] -  Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                        after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                        (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n *\n * @returns {Function} A new, debounced function.\n */\nfunction debounce (delay, callback, options) {\n  var _ref = options || {},\n    _ref$atBegin = _ref.atBegin,\n    atBegin = _ref$atBegin === void 0 ? false : _ref$atBegin;\n  return throttle(delay, callback, {\n    debounceMode: atBegin !== false\n  });\n}\n\nexport { debounce, throttle };\n//# sourceMappingURL=index.js.map\n","import { debounce } from 'throttle-debounce';\n\nexport const hasCounter = (el: HTMLTextAreaElement | HTMLInputElement | undefined): boolean => el && el.maxLength >= 0;\n\n// https://javascript.info/currying-partials\nexport const inputEventListenerCurry = (\n  characterCountElement: HTMLSpanElement,\n  counterElement?: HTMLSpanElement,\n  inputChangeCallback?: () => void\n): EventListener => {\n  // returns actual listener function\n  return (e: InputEvent): void => {\n    updateCounter(\n      e.target as HTMLInputElement | HTMLTextAreaElement,\n      characterCountElement,\n      counterElement,\n      inputChangeCallback\n    );\n  };\n};\n\nexport const updateCounter = (\n  el: HTMLTextAreaElement | HTMLInputElement,\n  characterCountElement: HTMLSpanElement,\n  counterElement?: HTMLSpanElement,\n  inputChangeCallback?: () => void\n): void => {\n  if (counterElement) {\n    setCounterInnerHtml(el, counterElement);\n  }\n  setAriaElementInnerHtml(el, characterCountElement);\n  inputChangeCallback?.();\n};\n\nexport const setCounterInnerHtml = (el: HTMLTextAreaElement | HTMLInputElement, counterElement: HTMLElement): void => {\n  counterElement.innerText = `${el.value.length}/${el.maxLength}`;\n};\n\nexport const setAriaElementInnerHtml = debounce(\n  800,\n  (el: HTMLTextAreaElement | HTMLInputElement, ariaElement: HTMLSpanElement): void => {\n    ariaElement.innerText = `You have ${el.maxLength - el.value.length} out of ${el.maxLength} characters left`;\n  }\n);\n","export const getCDNBaseURL = (): string => ROLLUP_REPLACE_CDN_BASE_URL;\n","import { FONT_FACE_CDN_FILE_COM, FONT_FACE_CDN_FILE_CN } from '@porsche-design-system/assets';\nimport { getCDNBaseURL } from './getCDNBaseURL';\n\n// TODO: should be removed, instead consumers should be forced via validation to use the partial for preloading\nexport const injectGlobalStyle = (): void => {\n  if (typeof document !== 'undefined' && ROLLUP_REPLACE_IS_STAGING === 'production') {\n    const baseUrl = getCDNBaseURL();\n    const styleUrl = `${baseUrl}/styles/${baseUrl.match(/\\.cn\\//) ? FONT_FACE_CDN_FILE_CN : FONT_FACE_CDN_FILE_COM}`;\n    const { head } = document;\n    if (!head.querySelector(`link[href='${styleUrl}'],style[data-pds-font-face-styles=\"\"]`)) {\n      const link = document.createElement('link');\n      link.href = styleUrl;\n      link.type = 'text/css';\n      link.rel = 'stylesheet';\n\n      head.appendChild(link);\n    }\n  }\n};\n","export const hasPropValueChanged = (newVal: unknown, oldVal: unknown): boolean => {\n  if (typeof newVal !== 'object' || typeof oldVal !== 'object') {\n    // primitive types\n    return newVal !== oldVal;\n  } else if (Array.isArray(newVal) && Array.isArray(oldVal)) {\n    // type array\n    return !(newVal.length === oldVal.length && newVal.every((val, i) => val === oldVal[i]));\n  } else {\n    // type object\n    // currently this does not take care of nested objects\n    return !(\n      Object.keys(newVal).length === Object.keys(oldVal).length &&\n      Object.entries(newVal as Record<string, any>).every(([key1, val1]) => val1 === oldVal[key1 as keyof unknown])\n    );\n  }\n};\n","/**\n * Checks if a click event occurred outside the specified element.\n *\n * @param {Event} e - The click event object.\n * @param {HTMLElement} host - The host element to compare against.\n * @returns {boolean} - Returns true if the click event occurred outside the host element, otherwise false.\n */\nexport const isClickOutside = (e: Event, host: HTMLElement): boolean => !e.composedPath().includes(host);\n","import type { THEMES } from '../theme';\n\n/** @deprecated */\nexport const TILE_ASPECT_RATIOS_DEPRECATED = ['1:1', '4:3', '3:4', '16:9', '9:16'] as const;\nexport const TILE_ASPECT_RATIOS = ['1/1', '4/3', '3/4', '16/9', '9/16', ...TILE_ASPECT_RATIOS_DEPRECATED] as const;\nexport type TileAspectRatio = (typeof TILE_ASPECT_RATIOS)[number];\n\n/** @deprecated */\nexport const TILE_SIZES_DEPRECATED = ['default'] as const;\nexport const TILE_SIZES = ['medium', 'large', 'inherit', ...TILE_SIZES_DEPRECATED] as const;\nexport type TileSize = (typeof TILE_SIZES)[number];\n\nexport const TILE_WEIGHTS = ['regular', 'semi-bold'] as const;\nexport type TileWeight = (typeof TILE_WEIGHTS)[number];\n\nexport type TileBackground = (typeof THEMES)[number];\n\nexport const TILE_ALIGNS = ['top', 'bottom'] as const;\nexport type TileAlign = (typeof TILE_ALIGNS)[number];\n","const prefix =\n  process.env.NODE_ENV === 'production'\n    ? `[Porsche Design System v${ROLLUP_REPLACE_VERSION}]` // this part isn't covered by unit tests\n    : '[Porsche Design System]';\n\nexport const consoleWarn = (...messages: (string | object)[]): void => {\n  console.warn(prefix, ...messages); // eslint-disable-line no-console\n};\n\nexport const consoleError = (...messages: (string | object)[]): void => {\n  console.error(prefix, ...messages); // eslint-disable-line no-console\n};\n\nexport const throwException = (message: string): void => {\n  throw new Error(`${prefix} ${message}`); // eslint-disable-line fp/no-throw\n};\n","import { type ScrollerDirection, getScrollerElements } from '../components/scroller/scroller-utils';\n\nexport const scrollElementTo = (el: HTMLElement, amount: number): void => {\n  el.scrollTo({\n    left: amount,\n    behavior: 'smooth', // TODO: make conditional so we don't need to wait in e2e or vrt tests\n  });\n};\n\nexport const scrollElementBy = (el: HTMLElement, amount: number): void => {\n  el.scrollBy({ left: amount, top: 0, behavior: 'smooth' }); // TODO: make conditional so we don't need to wait in e2e or vrt tests\n};\n\nexport const getScrollByX = (scrollAreaElement: HTMLElement): number => {\n  return Math.round(scrollAreaElement.offsetWidth * 0.2);\n};\n\nexport const FOCUS_PADDING_WIDTH = 4;\n\nexport const getScrollActivePosition = (\n  elements: HTMLElement[],\n  direction: ScrollerDirection,\n  activeElementIndex: number,\n  scrollerElement: HTMLPScrollerElement\n): number => {\n  const { offsetLeft: activeElementOffsetLeft, offsetWidth: activeElementOffsetWidth } =\n    elements[activeElementIndex <= 0 ? 0 : activeElementIndex] || {}; // empty object fallback for tabs without children\n  // offsetLeft: is the number of pixels that the upper left corner of the current element is offset to the left within the offsetParent node\n  // offsetParent: is a reference to the element which is the closest (nearest in the containment hierarchy) positioned ancestor element\n  // which usually is an element with a non-static position\n  // - in chrome this seems to respect shadow DOM and therefore is the div.scroll-wrapper element in p-scroller\n  // - in firefox and safari this is not the case and some other parent element (up to the body element) is used\n  // this obviously leads to completely wrong calculations which are being corrected\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetLeft\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n  const correctedActiveElementOffsetLeft =\n    elements[0]?.offsetLeft === 0 ? activeElementOffsetLeft : activeElementOffsetLeft - scrollerElement.offsetLeft;\n\n  const [scrollAreaElement, prevGradientElement] = getScrollerElements(scrollerElement);\n\n  let scrollPosition: number;\n  if (direction === 'next') {\n    if (activeElementIndex === elements.length - 1) {\n      // go to last element\n      scrollPosition = correctedActiveElementOffsetLeft - FOCUS_PADDING_WIDTH;\n    } else {\n      // go to next element\n      scrollPosition = correctedActiveElementOffsetLeft - prevGradientElement.offsetWidth + FOCUS_PADDING_WIDTH * 2;\n    }\n  } else {\n    if (activeElementIndex === 0) {\n      // go to first element\n      scrollPosition = 0;\n    } else {\n      // go to prev element\n      scrollPosition =\n        correctedActiveElementOffsetLeft +\n        activeElementOffsetWidth +\n        prevGradientElement.offsetWidth -\n        scrollAreaElement.offsetWidth;\n    }\n  }\n  return scrollPosition;\n};\n","import { OPTION_HEIGHT } from '../../styles/option-styles';\n\nexport const SELECT_DROPDOWN_DIRECTIONS_INTERNAL = ['down', 'up'] as const;\nexport type SelectDropdownDirectionInternal = (typeof SELECT_DROPDOWN_DIRECTIONS_INTERNAL)[number];\nexport const SELECT_DROPDOWN_DIRECTIONS = [...SELECT_DROPDOWN_DIRECTIONS_INTERNAL, 'auto'] as const;\nexport type SelectComponentsDropdownDirection = (typeof SELECT_DROPDOWN_DIRECTIONS)[number];\n\nconst MAX_CHILDREN = 9;\nconst INPUT_HEIGHT = 54;\n\nexport const determineDropdownDirection = (\n  host: HTMLElement,\n  visibleOptionLength: number\n): SelectDropdownDirectionInternal => {\n  const { top } = host.getBoundingClientRect();\n  const listHeight = OPTION_HEIGHT * (visibleOptionLength > MAX_CHILDREN ? MAX_CHILDREN : visibleOptionLength) + 64; // 64 = 2 x 6px padding + 2px border + 50px combobox height\n  const spaceBottom = window.innerHeight - top - INPUT_HEIGHT;\n  return spaceBottom <= listHeight && top >= listHeight ? 'up' : 'down';\n};\n","import { forceUpdate } from '@stencil/core';\nimport type { HTMLStencilElement } from '@stencil/core/internal';\n\ntype SelectAction =\n  | 'Close' // Close select dropdown\n  | 'CloseSelect' // Close and select currently highlighted option\n  | 'First' // Highlight first option\n  | 'Last' // Highlight last option\n  | 'Next' // Highlight next option\n  | 'Open' // Open select dropdown\n  | 'PageDown' // Go 10 options down or to the last option\n  | 'PageUp' // Go 10 options up or to the first option\n  | 'Previous' // Highlight the previous option\n  | 'Select' // Select the currently highlighted option\n  | 'Type'; // Jump to the matching option by searching\n\nexport type Option = HTMLElement &\n  HTMLStencilElement & {\n    disabled?: boolean;\n    highlighted?: boolean;\n  };\n\n// The amount of time in ms after the last key press before the searchString will get cleared\nexport const SELECT_SEARCH_TIMEOUT: number = 500;\n// The amount of options to be jumped when performing a page-based navigation using PageUp or PageDown.\nconst PAGE_UP_DOWN_STEP_AMOUNT: number = 10;\n\n/**\n * Handles scrolling within the list to ensure that the highlighted item is always visible.\n * @param {HTMLElement} scrollElement - The HTML element to be scrolled.\n * @param {HTMLElement} element - The element to scroll to.\n * @returns {void}\n */\nexport const handleSelectDropdownScroll = (scrollElement: HTMLElement, element: HTMLElement): void => {\n  const { maxHeight } = getComputedStyle(scrollElement);\n  const hostElementHeight = parseInt(maxHeight, 10);\n  // TODO: If dropdown was closed this might get called too early before the list is opened which causes the scrollHeight to be 0\n  if (scrollElement.scrollHeight > hostElementHeight) {\n    element.scrollIntoView({\n      block: 'nearest',\n      // behavior: 'smooth' // Intentionally not smooth since highlighted options can quickly change when searching\n    });\n  }\n};\n\n/**\n * Determines the action to be taken based on a keyboard event and the state of the select menu.\n *\n * @param {KeyboardEvent} event - The keyboard event triggering the action.\n * @param {boolean} menuOpen - A boolean indicating whether the select menu is open or closed.\n * @returns {SelectAction} - The corresponding action to be performed.\n */\nexport const getActionFromKeyboardEvent = (event: KeyboardEvent, menuOpen: boolean): SelectAction | undefined => {\n  const { key, altKey, ctrlKey, metaKey } = event;\n  const openKeys = ['ArrowDown', 'ArrowUp', 'Enter', ' ']; // all keys that will do the default open action\n  // handle opening when closed\n  if (!menuOpen && openKeys.includes(key)) {\n    return 'Open';\n  }\n\n  // home and end move the selected option when open or closed\n  if (key === 'Home') {\n    return 'First';\n  }\n  if (key === 'End') {\n    return 'Last';\n  }\n\n  // handle typing characters when open or closed\n  if (key === 'Backspace' || key === 'Clear' || (key.length === 1 && key !== ' ' && !altKey && !ctrlKey && !metaKey)) {\n    return 'Type';\n  }\n\n  // handle keys when open\n  if (menuOpen) {\n    if (key === 'ArrowUp' && altKey) {\n      return 'CloseSelect';\n    } else if (key === 'ArrowDown' && !altKey) {\n      return 'Next';\n    } else if (key === 'ArrowUp') {\n      return 'Previous';\n    } else if (key === 'PageUp') {\n      return 'PageUp';\n    } else if (key === 'PageDown') {\n      return 'PageDown';\n    } else if (key === 'Escape') {\n      return 'Close';\n    } else if (key === 'Enter' || key === ' ' || key === 'Tab') {\n      return 'CloseSelect';\n    }\n  }\n  return undefined;\n};\n\n/**\n * Gets the updated index based on the current index, maximum index, and the select action.\n *\n * @param {number} currentIndex - The current index in the list of options.\n * @param {number} maxIndex - The maximum index in the list of options.\n * @param {SelectAction} action - The select action indicating how to update the index.\n * @returns {number} - The updated index after applying the specified action.\n */\nexport const getUpdatedIndex = (currentIndex: number, maxIndex: number, action: SelectAction): number => {\n  switch (action) {\n    case 'First':\n      return 0;\n    case 'Last':\n      return maxIndex;\n    case 'Previous':\n      return Math.max(0, currentIndex - 1);\n    case 'Next':\n      return Math.min(maxIndex, currentIndex + 1);\n    case 'PageUp':\n      return Math.max(0, currentIndex - PAGE_UP_DOWN_STEP_AMOUNT);\n    case 'PageDown':\n      return Math.min(maxIndex, currentIndex + PAGE_UP_DOWN_STEP_AMOUNT);\n    default:\n      return currentIndex;\n  }\n};\n\n/**\n * Sets the next option in a select dropdown as highlighted, updating the visual state and handling scrolling.\n *\n * @template T - The type of options in the dropdown.\n * @param {HTMLElement} listElement - The parent element containing the dropdown options.\n * @param {T[]} options - The array of options in the dropdown.\n * @param {number} newIndex - The index of the option to be highlighted.\n * @returns {void}\n */\nexport const setNextSelectOptionHighlighted = <T extends Option>(\n  listElement: HTMLElement,\n  options: T[],\n  newIndex: number\n): void => {\n  const oldIndex = getHighlightedSelectOptionIndex(options);\n  const usableOptions = getUsableSelectOptions(options);\n  if (oldIndex !== -1) {\n    setHighlightedSelectOption(usableOptions[oldIndex], false);\n  }\n  setHighlightedSelectOption(usableOptions[newIndex], true);\n  handleSelectDropdownScroll(listElement, usableOptions[newIndex]);\n};\n\n/**\n * Filters an array of select options to include only those that are usable (not hidden or disabled).\n *\n * @template T - The type of options in the array.\n * @param {T[]} options - The array of select options to filter.\n * @returns {T[]} - An array of usable select options.\n */\nexport const getUsableSelectOptions = <T extends Option>(options: T[]): T[] =>\n  options.filter((option) => !option.hidden && !option.disabled);\n\n/**\n * Filters an array of select options based on a filter string, considering visibility and usability.\n *\n * @template T - The type of options in the array.\n * @param {T[]} options - The array of select options to filter.\n * @param {string} filter - The filter string to match against option text content.\n * @returns {T[]} - An array of filtered and usable select options.\n */\nexport const filterSelectOptions = <T extends Option>(options: T[], filter: string): T[] =>\n  getUsableSelectOptions(options).filter(\n    (option) => option.textContent.trim().toLowerCase().indexOf(filter.toLowerCase()) === 0\n  );\n\n/**\n * Determines the index of the next matching select option based on a filter string.\n *\n * @template T - The type of options in the array.\n * @param {T[]} options - The array of select options to search.\n * @param {string} filter - The filter string to match against option text content.\n * @returns {number} - The index of the next matching select option, or -1 if none is found.\n */\nexport const getMatchingSelectOptionIndex = <T extends Option>(options: T[], filter: string): number => {\n  const usableOptions = getUsableSelectOptions(options);\n  const startIndex = getHighlightedSelectOptionIndex(options) + 1;\n  // Shift already searched options to the end of the array in order to find the next matching option\n  const orderedOptions = [...usableOptions.slice(startIndex), ...usableOptions.slice(0, startIndex)];\n  const firstMatch = filterSelectOptions(orderedOptions, filter)[0];\n\n  const allSameLetter = (str: string): boolean => str.split('').every((letter: string) => letter === str[0]);\n\n  // first check if there is an exact match for the typed string\n  if (firstMatch) {\n    return usableOptions.indexOf(firstMatch);\n  }\n  // if the same letter is being repeated, cycle through first-letter matches\n  else if (allSameLetter(filter)) {\n    const matches = filterSelectOptions(orderedOptions, filter[0]);\n    return usableOptions.indexOf(matches[0]);\n  }\n  // No matching option found\n  else {\n    return -1;\n  }\n};\n\n/**\n * Sets the next matching select option as highlighted based on a filter string.\n *\n * @template T - The type of options in the array.\n * @param {HTMLElement} listElement - The parent element containing the dropdown options.\n * @param {T[]} options - The array of select options to search.\n * @param {string} filter - The filter string to match against option text content.\n * @returns {void}\n */\nexport const setMatchingSelectOptionHighlighted = <T extends Option>(\n  listElement: HTMLElement,\n  options: T[],\n  filter: string\n): void => {\n  const matchingIndex = getMatchingSelectOptionIndex(options, filter);\n  if (matchingIndex !== -1) {\n    setNextSelectOptionHighlighted(listElement, options, matchingIndex);\n  }\n};\n\n/**\n * Sets the highlighted state of a select option and triggers an update.\n *\n * @template T - The type of the select option.\n * @param {T} option - The select option to set the highlighted state for.\n * @param {boolean} highlighted - The new highlighted state.\n * @returns {void}\n */\nexport const setHighlightedSelectOption = <T extends Option>(option: T, highlighted: boolean): void => {\n  option.highlighted = highlighted;\n  forceUpdate(option);\n};\n\n/**\n * Gets the index of the currently highlighted select option.\n *\n * @template T - The type of options in the array.\n * @param {T[]} options - The array of select options.\n * @returns {number} - The index of the highlighted select option, or -1 if none is highlighted.\n */\nexport const getHighlightedSelectOptionIndex = <T extends Option>(options: T[]): number =>\n  getUsableSelectOptions(options).indexOf(getHighlightedSelectOption(options));\n\n/**\n * Gets the currently highlighted select option.\n *\n * @template T - The type of options in the array.\n * @param {T[]} options - The array of select options.\n * @returns {T} - The currently highlighted select option, or undefined if none is highlighted.\n */\nexport const getHighlightedSelectOption = <T extends Option>(options: T[]): T =>\n  options.find((option) => option.highlighted);\n","import { hasWindow } from './has-window';\n\n/**\n * Checks if the current environment supports the native Popover API.\n *\n * @returns {boolean} `true` if the native Popover API is supported, `false` otherwise.\n */\nexport const supportsNativePopover = (): boolean => {\n  if (!hasWindow) {\n    return false;\n  }\n  return HTMLElement.prototype.hasOwnProperty('popover');\n};\n\n// determine it once\nconst hasNativePopoverSupport = supportsNativePopover();\n// getter for easy mocking\nexport const getHasNativePopoverSupport = (): boolean => hasNativePopoverSupport;\n","export const hasDocument = typeof document !== 'undefined';\n","import type { Theme } from '@porsche-design-system/styles';\n\nexport const isThemeAuto = (theme: Theme): boolean => {\n  return theme === 'auto';\n};\n","import type { Theme } from '@porsche-design-system/styles';\n\nexport const isThemeDark = (theme: Theme): boolean => {\n  return theme === 'dark';\n};\n","export const THEMES = ['light', 'dark', 'auto'] as const;\nexport type Theme = (typeof THEMES)[number];\n","export const HEADING_TAGS = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] as const;\nexport type HeadingTag = typeof HEADING_TAGS[number];\n","// 'left' is deprecated and will be mapped to 'start'\n// 'right' is deprecated and will be mapped to 'end'\n/** @deprecated */\nexport const TYPOGRAPHY_ALIGNS_DEPRECATED = ['left', 'right'] as const;\n/** @deprecated */\nexport type TypographyAlignDeprecated = (typeof TYPOGRAPHY_ALIGNS_DEPRECATED)[number];\nexport const TYPOGRAPHY_ALIGNS = ['start', 'center', 'end', ...TYPOGRAPHY_ALIGNS_DEPRECATED] as const;\nexport type TypographyAlign = (typeof TYPOGRAPHY_ALIGNS)[number];\n","/* eslint-disable prefer-arrow/prefer-arrow-functions */\nimport { getTagNameWithoutPrefix, throwException } from '..';\nimport { getDirectChildHTMLElements } from '../dom/getDirectChildHTMLElements';\n\n// prettier-ignore\nexport function getOnlyChildOfKindHTMLElementOrThrow<K extends keyof HTMLElementTagNameMap>(element: HTMLElement, selector: K): HTMLElementTagNameMap[K] | null;\n// prettier-ignore\nexport function getOnlyChildOfKindHTMLElementOrThrow<E extends Element = Element>(element: HTMLElement, selector: string): E | null;\nexport function getOnlyChildOfKindHTMLElementOrThrow(element: HTMLElement, selector: string): any {\n  // we need to support named slots for label/description or message, hence we can't verify element.children.length\n  const directChildren = getDirectChildHTMLElements(element, selector);\n\n  if (directChildren.length !== 1) {\n    throwException(`${getTagNameWithoutPrefix(element)} has to contain a single direct child of: ${selector}`);\n  }\n\n  return directChildren[0];\n}\n","import { getOnlyChildOfKindHTMLElementOrThrow, getTagNameWithoutPrefix, throwException } from '../../utils';\nimport { getNamedSlot } from '../getNamedSlot';\nimport { anchorSlot } from '../../components/link-tile-product/link-tile-product-utils';\n\nexport const throwIfInvalidLinkTileProductUsage = (host: HTMLElement, hrefValue: string): void => {\n  let invalidA11y = false;\n\n  if (!hrefValue) {\n    if (!getNamedSlot(host, anchorSlot)) {\n      throwMissingHrefAndSlottedLinkException(host);\n    }\n    try {\n      const linkElement = getOnlyChildOfKindHTMLElementOrThrow(host, 'a');\n      if (!linkElement.textContent.trim() && !linkElement.getAttribute('aria-label')) {\n        invalidA11y = true;\n      }\n    } catch {\n      throwMissingHrefAndSlottedLinkException(host);\n    }\n  }\n\n  if (invalidA11y) {\n    throwMissingSlottedLinkA11yException(host);\n  }\n};\n\nconst throwMissingHrefAndSlottedLinkException = (host: HTMLElement): void =>\n  throwException(\n    `usage of ${getTagNameWithoutPrefix(\n      host\n    )} is not valid. Please provide a href property or a single and direct <a> child element in the anchor slot.`\n  );\n\nconst throwMissingSlottedLinkA11yException = (host: HTMLElement): void =>\n  throwException(\n    `usage of ${getTagNameWithoutPrefix(\n      host\n    )} is not valid. Anchor tag must have slotted text content or an aria-label attribute for accessibility.`\n  );\n","import { type Breakpoint, breakpoints } from '@porsche-design-system/styles';\nimport type { AriaAttributes, Class, FunctionPropertyNames } from '../../types';\nimport { type BreakpointValues, parseJSON } from '../breakpoint-customizable';\nimport { parseJSONAttribute } from '../json';\nimport { consoleError, getTagNameWithoutPrefix } from '..';\n\nexport type ValidatorFunction = (propName: string, propValue: any) => ValidationError;\ntype ValidatorFunctionArrayCreator = (allowedType: ValidatorFunction) => ValidatorFunction;\ntype ValidatorFunctionOneOfCreator = <T>(allowedValues: T[] | readonly T[]) => ValidatorFunction;\ntype ValidatorFunctionBreakpointCustomizableCreator = <T>(\n  allowedValues: Exclude<AllowedTypeKey, 'string'> | T[] | readonly T[]\n) => ValidatorFunction;\ntype ValidatorFunctionShapeCreator = <T>(allowedValues: {\n  [key in keyof T]: ValidatorFunctionOrCreator;\n}) => ValidatorFunction;\ntype ValidatorFunctionOrCreator =\n  | ValidatorFunction\n  | ValidatorFunctionOneOfCreator\n  | ValidatorFunctionBreakpointCustomizableCreator\n  | ValidatorFunctionShapeCreator;\n\nexport type ValidationError = {\n  propName: string;\n  propValue: string;\n  propType: string;\n};\n\nexport const formatObjectOutput = (value: any): string => {\n  return JSON.stringify(value)\n    .replace(/\"([a-zA-Z?]+)\":/g, '$1:') // remove double quotes from keys\n    .replace(/([,:{])/g, '$1 ') // add space after following: ,:{\n    .replace(/(})/g, ' $1') // add space before following: }\n    .replace(/^\"(.+)\"$/, '$1'); // remove wrapping double quotes\n};\n\nexport const formatArrayOutput = <T>(value: T[] | readonly T[]): string => {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    JSON.stringify(value.map((x) => (x === undefined ? `${x}` : x))) // wrap undefined in quotes to not convert it to null\n      .replace(/'/g, '') // remove single quotes\n      // eslint-disable-next-line @typescript-eslint/quotes\n      .replace(/\"/g, \"'\") // replace double quotes with single quotes\n      .replace(/'(undefined)'/, '$1') // remove quotes around undefined\n      .replace(/,/g, ', ') // add space after comma\n  );\n};\n\nexport const printErrorMessage = ({\n  propName,\n  propValue, // TODO: might be nicer if this is always a string\n  propType,\n  componentName,\n}: ValidationError & { componentName: string }): void => {\n  consoleError(\n    `Invalid property '${propName}' with value '${formatObjectOutput(\n      propValue\n    )}' supplied to ${componentName}, expected one of: ${propType}`\n  );\n};\n\nexport const isValueNotOfType = (propValue: any, propType: string): boolean => {\n  return propValue !== undefined && typeof propValue !== propType;\n};\n\nexport const validateValueOfType = (\n  propName: string,\n  propValue: any,\n  propType: string\n): ValidationError | undefined => {\n  if (isValueNotOfType(propValue, propType)) {\n    return { propName, propValue, propType };\n  }\n  return undefined;\n};\n\nconst breakpointCustomizableTemplate =\n  'value, ' +\n  formatObjectOutput(\n    breakpoints.reduce((prev, key) => ({ ...prev, [key + (key !== 'base' ? '?' : '')]: 'value' }), {})\n  ).replace(/\"/g, '');\n\nexport const getBreakpointCustomizableStructure = <T>(\n  allowedValues: Exclude<AllowedTypeKey, 'string'> | T[] | readonly T[]\n): string => {\n  if (allowedValues !== 'boolean' && allowedValues !== 'number') {\n    allowedValues = formatArrayOutput(allowedValues)\n      .replace(/\\[/g, '(') // starting inline type literal array\n      .replace(/]/g, ')[]') // ending inline type literal array\n      .replace(/,/g, ' |') as any; // replace commas with a pipe\n  }\n  return breakpointCustomizableTemplate.replace(/value/g, allowedValues as string);\n};\n\nexport const getAriaStructure = <T>(allowedAriaAttributes: readonly T[]): string => {\n  return (\n    formatObjectOutput(\n      allowedAriaAttributes.reduce(\n        (prev, key) => ({\n          ...prev,\n          [key as any]: 'value',\n        }),\n        {}\n      )\n    )\n      .replace(/\":/g, '\"?:') // add optional modifier on keys before colon\n      // eslint-disable-next-line @typescript-eslint/quotes\n      .replace(/\"/g, \"'\") // replace double quotes with single quotes\n  );\n};\n\nexport const getShapeStructure = <T>(shapeStructure: { [key in keyof T]: ValidatorFunction }): string => {\n  return formatObjectOutput(\n    Object.keys(shapeStructure).reduce(\n      (prev, key) => ({ ...prev, [key]: shapeStructure[key as keyof { [key in keyof T]: ValidatorFunction }].name }),\n      {}\n    )\n  ).replace(/\"/g, ''); // remove double quotes\n};\n\nexport const isBreakpointCustomizableValueInvalid = <T>(\n  value: any,\n  allowedValues: Exclude<AllowedTypeKey, 'string'> | T[] | readonly T[]\n): boolean => {\n  return allowedValues === 'boolean' || allowedValues === 'number'\n    ? isValueNotOfType(value, allowedValues)\n    : !allowedValues.includes(value as T);\n};\n\ntype AllowedTypeKey = 'string' | 'number' | 'boolean';\n\n// TODO: maybe dissolve object structure and have standalone utils\n\nexport const AllowedTypes: {\n  [key in AllowedTypeKey]: ValidatorFunction;\n} & {\n  array: ValidatorFunctionArrayCreator;\n  oneOf: ValidatorFunctionOneOfCreator;\n  aria: ValidatorFunctionOneOfCreator;\n  breakpoint: ValidatorFunctionBreakpointCustomizableCreator;\n  shape: ValidatorFunctionShapeCreator;\n} = {\n  // eslint-disable-next-line id-blacklist\n  string: (...args) => validateValueOfType(...args, 'string'),\n  // eslint-disable-next-line id-blacklist\n  number: (...args) => validateValueOfType(...args, 'number'),\n  // eslint-disable-next-line id-blacklist\n  boolean: (...args) => validateValueOfType(...args, 'boolean'),\n  array: (allowedType: ValidatorFunction): ValidatorFunction =>\n    // eslint-disable-next-line prefer-arrow/prefer-arrow-functions\n    function array(propName, propValue) {\n      return isValidArray(propName, propValue, allowedType);\n    },\n  oneOf: <T>(allowedValuesOrValidatorFunctions: T[]): ValidatorFunction =>\n    // @ts-expect-error: Not all code paths return a value\n    // eslint-disable-next-line prefer-arrow/prefer-arrow-functions\n    function oneOf(propName, propValue) {\n      // use first item to determine if we've got primitive types or validator functions\n      if (typeof allowedValuesOrValidatorFunctions[0] !== 'function') {\n        if (!allowedValuesOrValidatorFunctions.includes(propValue as T)) {\n          return { propName, propValue, propType: formatArrayOutput(allowedValuesOrValidatorFunctions) };\n        }\n      } else if (\n        !allowedValuesOrValidatorFunctions.some(\n          (func) => (func as unknown as ValidatorFunction)(propName, propValue) === undefined\n        )\n      ) {\n        return {\n          propName,\n          propValue,\n          propType: allowedValuesOrValidatorFunctions.map((func) => (func as any).name).join(', '),\n        };\n      }\n    },\n  breakpoint: (allowedValues): ValidatorFunction =>\n    // @ts-expect-error: Not all code paths return a value\n    // eslint-disable-next-line prefer-arrow/prefer-arrow-functions\n    function breakpoint(propName, propValue) {\n      // TODO: do parseJSON once in the component, currently it is happening multiple times in a single lifecycle\n      const value = parseJSON(propValue as BreakpointValues<any>);\n      let isInvalid = false;\n\n      if (typeof value === 'object') {\n        if (\n          // check structure keys: base, xs, s, m, l, xl\n          // TODO: check for base key\n          Object.keys(value).some((key) => !breakpoints.includes(key as Breakpoint)) ||\n          // check actual values of keys, e.g. true, false, 'small' or 5\n          Object.values(value).some((val) => isBreakpointCustomizableValueInvalid(val, allowedValues))\n        ) {\n          isInvalid = true;\n        }\n      } else if (isBreakpointCustomizableValueInvalid(value, allowedValues)) {\n        // single flat value like true, false, 'small' or 5, not breakpoint customizable object\n        isInvalid = true;\n      }\n\n      if (isInvalid) {\n        return {\n          propName,\n          propValue: formatObjectOutput(value),\n          propType: getBreakpointCustomizableStructure(allowedValues),\n        };\n      }\n    },\n  aria: <T = keyof AriaAttributes>(allowedAriaAttributes: readonly T[]): ValidatorFunction =>\n    // @ts-expect-error: Not all code paths return a value\n    // eslint-disable-next-line prefer-arrow/prefer-arrow-functions\n    function aria(propName, propValue) {\n      const ariaAttributes = parseJSONAttribute<AriaAttributes>(propValue as string);\n      if (\n        ariaAttributes &&\n        Object.keys(ariaAttributes).some((ariaKey) => !allowedAriaAttributes.includes(ariaKey as unknown as T))\n      ) {\n        return {\n          propName,\n          propValue: formatObjectOutput(ariaAttributes),\n          propType: getAriaStructure(allowedAriaAttributes),\n        };\n      }\n    },\n  shape: <T>(shapeStructure: { [key in keyof T]: ValidatorFunction }): ValidatorFunction =>\n    // @ts-expect-error: Not all code paths return a value\n    // eslint-disable-next-line prefer-arrow/prefer-arrow-functions\n    function shape(propName, propValue) {\n      if (propValue) {\n        // const propValueKeys = Object.keys(propValue);\n        if (\n          // check structure, but propValue could contain additional keys\n          // but how to handle optional keys like in table-head-cell's sort property?\n          // Object.keys(shapeStructure).some((key) => !propValueKeys.includes(key)) ||\n          // check values\n          Object.entries(shapeStructure).some(([structureKey, validatorFunc]: [string, ValidatorFunction]) =>\n            validatorFunc(structureKey, propValue[structureKey])\n          )\n        ) {\n          // TODO: more precise inner errors from value validation could be output\n          return {\n            propName,\n            propValue, // TODO: convert to string?\n            propType: getShapeStructure(shapeStructure),\n          };\n        }\n      }\n    },\n};\n\n// utility type to retrieve all props based on a class\nexport type PropTypes<T extends Class<any>> = Required<{\n  [Property in keyof Omit<\n    InstanceType<T>,\n    'host' | FunctionPropertyNames<InstanceType<T>>\n  >]: ValidatorFunctionOrCreator;\n}>;\n\nexport const validateProps = <T extends Class<any>>(instance: InstanceType<T>, propTypes: PropTypes<T>): void => {\n  Object.entries(propTypes)\n    .map(([propKey, validatorFunc]: [string, ValidatorFunction]) => validatorFunc(propKey, instance[propKey]))\n    .filter((x) => x)\n    .forEach((error) =>\n      printErrorMessage({ ...error, componentName: getTagNameWithoutPrefix(instance.host as HTMLElement) })\n    );\n};\n\n/**\n * Validates an array using a provided validator function and returns the first encountered validation error.\n *\n * @param {string} propName - The name of the property being validated.\n * @param {any} arr - The input to be validated.\n * @param {ValidatorFunction} validator - The validator function that checks each array item.\n * @returns {ValidationError | undefined} The first encountered validation error object, or undefined if the array is valid.\n */\nexport const isValidArray = (propName: string, arr: any, validator: ValidatorFunction): ValidationError => {\n  const validationError = Array.isArray(arr)\n    ? validator(\n        propName,\n        arr.find((item) => validator(propName, item))\n      )\n    : {\n        propName,\n        propValue: arr,\n        propType: validator(propName, null).propType, // Get propType by passing in null which will always result in error\n      };\n\n  if (validationError) {\n    return { ...validationError, propType: `${validationError.propType}[]` };\n  }\n  return undefined;\n};\n","// 'left' is deprecated and will be mapped to 'start'\n// 'right' is deprecated and will be mapped to 'end'\n/** @deprecated */\nexport const ALIGN_LABELS_DEPRECATED = ['left', 'right'] as const;\n/** @deprecated */\nexport type AlignLabelDeprecated = (typeof ALIGN_LABELS_DEPRECATED)[number];\nexport const ALIGN_LABELS = ['start', 'end', ...ALIGN_LABELS_DEPRECATED] as const;\nexport type AlignLabel = (typeof ALIGN_LABELS)[number];\n","/** @deprecated */\nexport const LINK_BUTTON_VARIANTS_DEPRECATED = ['tertiary'] as const;\n/** @deprecated */\nexport type LinkButtonVariantDeprecated = (typeof LINK_BUTTON_VARIANTS_DEPRECATED)[number];\n\nexport const LINK_BUTTON_VARIANTS = ['primary', 'secondary', 'ghost', ...LINK_BUTTON_VARIANTS_DEPRECATED] as const;\nexport type LinkButtonVariant = (typeof LINK_BUTTON_VARIANTS)[number];\n","const breakpointBase = 0;\n\nexport { breakpointBase };\n","const breakpointXS = 480;\n\nexport { breakpointXS };\n","const breakpointS = 760;\n\nexport { breakpointS };\n","const breakpointM = 1000;\n\nexport { breakpointM };\n","const breakpointL = 1300;\n\nexport { breakpointL };\n","const breakpointXL = 1760;\n\nexport { breakpointXL };\n","const breakpointXXL = 1920;\n\nexport { breakpointXXL };\n","import { breakpointBase } from './breakpointBase.mjs';\nimport { breakpointXS } from './breakpointXS.mjs';\nimport { breakpointS } from './breakpointS.mjs';\nimport { breakpointM } from './breakpointM.mjs';\nimport { breakpointL } from './breakpointL.mjs';\nimport { breakpointXL } from './breakpointXL.mjs';\nimport { breakpointXXL } from './breakpointXXL.mjs';\n\nconst breakpoint = {\n    base: breakpointBase,\n    xs: breakpointXS,\n    s: breakpointS,\n    m: breakpointM,\n    l: breakpointL,\n    xl: breakpointXL,\n    xxl: breakpointXXL,\n};\n\nexport { breakpoint };\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n","const borderRadiusSmall = '4px';\n\nexport { borderRadiusSmall };\n","// src/app-data/index.ts\nvar BUILD = {\n  allRenderFn: false,\n  cmpDidLoad: true,\n  cmpDidUnload: false,\n  cmpDidUpdate: true,\n  cmpDidRender: true,\n  cmpWillLoad: true,\n  cmpWillUpdate: true,\n  cmpWillRender: true,\n  connectedCallback: true,\n  disconnectedCallback: true,\n  element: true,\n  event: true,\n  hasRenderFn: true,\n  lifecycle: true,\n  hostListener: true,\n  hostListenerTargetWindow: true,\n  hostListenerTargetDocument: true,\n  hostListenerTargetBody: true,\n  hostListenerTargetParent: false,\n  hostListenerTarget: true,\n  member: true,\n  method: true,\n  mode: true,\n  observeAttribute: true,\n  prop: true,\n  propMutable: true,\n  reflect: true,\n  scoped: true,\n  shadowDom: true,\n  slot: true,\n  cssAnnotations: true,\n  state: true,\n  style: true,\n  formAssociated: false,\n  svg: true,\n  updatable: true,\n  vdomAttribute: true,\n  vdomXlink: true,\n  vdomClass: true,\n  vdomFunctional: true,\n  vdomKey: true,\n  vdomListener: true,\n  vdomRef: true,\n  vdomPropOrAttr: true,\n  vdomRender: true,\n  vdomStyle: true,\n  vdomText: true,\n  watchCallback: true,\n  taskQueue: true,\n  hotModuleReplacement: false,\n  isDebug: false,\n  isDev: false,\n  isTesting: false,\n  hydrateServerSide: false,\n  hydrateClientSide: false,\n  lifecycleDOMEvents: false,\n  lazyLoad: false,\n  profile: false,\n  slotRelocation: true,\n  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior\n  appendChildSlotFix: false,\n  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior\n  cloneNodeFix: false,\n  hydratedAttribute: false,\n  hydratedClass: true,\n  // TODO(STENCIL-1305): remove this option\n  scriptDataOpts: false,\n  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior\n  scopedSlotTextContentFix: false,\n  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n  shadowDomShim: false,\n  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior\n  slotChildNodesFix: false,\n  invisiblePrehydration: true,\n  propBoolean: true,\n  propNumber: true,\n  propString: true,\n  constructableCSS: true,\n  cmpShouldUpdate: true,\n  devTools: false,\n  shadowDelegatesFocus: true,\n  initializeNextTick: false,\n  asyncLoading: false,\n  asyncQueue: false,\n  transformTagName: false,\n  attachStyles: true,\n  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior\n  experimentalSlotFixes: false\n};\nvar Env = {};\nvar NAMESPACE = (\n  /* default */\n  \"app\"\n);\nexport {\n  BUILD,\n  Env,\n  NAMESPACE\n};\n","/*\n Stencil Client Platform v4.19.2 | MIT Licensed | https://stenciljs.com\n */\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/client/client-build.ts\nimport { BUILD } from \"@stencil/core/internal/app-data\";\nvar Build = {\n  isDev: BUILD.isDev ? true : false,\n  isBrowser: true,\n  isServer: false,\n  isTesting: BUILD.isTesting ? true : false\n};\n\n// src/client/client-host-ref.ts\nimport { BUILD as BUILD2 } from \"@stencil/core/internal/app-data\";\nvar hostRefs = BUILD2.hotModuleReplacement ? window.__STENCIL_HOSTREFS__ || (window.__STENCIL_HOSTREFS__ = /* @__PURE__ */ new WeakMap()) : /* @__PURE__ */ new WeakMap();\nvar getHostRef = (ref) => hostRefs.get(ref);\nvar registerInstance = (lazyInstance, hostRef) => hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\nvar registerHost = (hostElement, cmpMeta) => {\n  const hostRef = {\n    $flags$: 0,\n    $hostElement$: hostElement,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: /* @__PURE__ */ new Map()\n  };\n  if (BUILD2.isDev) {\n    hostRef.$renderCount$ = 0;\n  }\n  if (BUILD2.method && BUILD2.lazyLoad) {\n    hostRef.$onInstancePromise$ = new Promise((r) => hostRef.$onInstanceResolve$ = r);\n  }\n  if (BUILD2.asyncLoading) {\n    hostRef.$onReadyPromise$ = new Promise((r) => hostRef.$onReadyResolve$ = r);\n    hostElement[\"s-p\"] = [];\n    hostElement[\"s-rc\"] = [];\n  }\n  return hostRefs.set(hostElement, hostRef);\n};\nvar isMemberInElement = (elm, memberName) => memberName in elm;\n\n// src/client/client-load-module.ts\nimport { BUILD as BUILD4 } from \"@stencil/core/internal/app-data\";\n\n// src/client/client-log.ts\nimport { BUILD as BUILD3 } from \"@stencil/core/internal/app-data\";\nvar customError;\nvar consoleError = (e, el) => (customError || console.error)(e, el);\nvar STENCIL_DEV_MODE = BUILD3.isTesting ? [\"STENCIL:\"] : [\n  \"%cstencil\",\n  \"color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px\"\n];\nvar consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nvar consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nvar consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nvar setErrorHandler = (handler) => customError = handler;\n\n// src/client/client-load-module.ts\nvar cmpModules = /* @__PURE__ */ new Map();\nvar MODULE_IMPORT_PREFIX = \"./\";\nvar loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n  const exportName = cmpMeta.$tagName$.replace(/-/g, \"_\");\n  const bundleId = cmpMeta.$lazyBundleId$;\n  if (BUILD4.isDev && typeof bundleId !== \"string\") {\n    consoleDevError(\n      `Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`\n    );\n    return void 0;\n  } else if (!bundleId) {\n    return void 0;\n  }\n  const module = !BUILD4.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n  if (module) {\n    return module[exportName];\n  }\n  /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n  return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD4.hotModuleReplacement && hmrVersionId ? \"?s-hmr=\" + hmrVersionId : \"\"}`\n  ).then((importedModule) => {\n    if (!BUILD4.hotModuleReplacement) {\n      cmpModules.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\n// src/client/client-style.ts\nvar styles = /* @__PURE__ */ new Map();\nvar modeResolutionChain = [];\n\n// src/client/client-task-queue.ts\nimport { BUILD as BUILD6 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/runtime-constants.ts\nvar CONTENT_REF_ID = \"r\";\nvar ORG_LOCATION_ID = \"o\";\nvar SLOT_NODE_ID = \"s\";\nvar TEXT_NODE_ID = \"t\";\nvar HYDRATE_ID = \"s-id\";\nvar HYDRATED_STYLE_ID = \"sty-id\";\nvar HYDRATE_CHILD_ID = \"c-id\";\nvar HYDRATED_CSS = \"{visibility:hidden}.hydrated{visibility:inherit}\";\nvar SLOT_FB_CSS = \"slot-fb{display:contents}slot-fb[hidden]{display:none}\";\nvar XLINK_NS = \"http://www.w3.org/1999/xlink\";\nvar FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS = [\n  \"formAssociatedCallback\",\n  \"formResetCallback\",\n  \"formDisabledCallback\",\n  \"formStateRestoreCallback\"\n];\n\n// src/client/client-window.ts\nimport { BUILD as BUILD5 } from \"@stencil/core/internal/app-data\";\nvar win = typeof window !== \"undefined\" ? window : {};\nvar doc = win.document || { head: {} };\nvar H = win.HTMLElement || class {\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: \"\",\n  jmp: (h2) => h2(),\n  raf: (h2) => requestAnimationFrame(h2),\n  ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n  rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n  ce: (eventName, opts) => new CustomEvent(eventName, opts)\n};\nvar setPlatformHelpers = (helpers) => {\n  Object.assign(plt, helpers);\n};\nvar supportsShadow = BUILD5.shadowDom;\nvar supportsListenerOptions = /* @__PURE__ */ (() => {\n  let supportsListenerOptions2 = false;\n  try {\n    doc.addEventListener(\n      \"e\",\n      null,\n      Object.defineProperty({}, \"passive\", {\n        get() {\n          supportsListenerOptions2 = true;\n        }\n      })\n    );\n  } catch (e) {\n  }\n  return supportsListenerOptions2;\n})();\nvar promiseResolve = (v) => Promise.resolve(v);\nvar supportsConstructableStylesheets = BUILD5.constructableCSS ? /* @__PURE__ */ (() => {\n  try {\n    new CSSStyleSheet();\n    return typeof new CSSStyleSheet().replaceSync === \"function\";\n  } catch (e) {\n  }\n  return false;\n})() : false;\n\n// src/client/client-task-queue.ts\nvar queueCongestion = 0;\nvar queuePending = false;\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\nvar queueTask = (queue, write) => (cb) => {\n  queue.push(cb);\n  if (!queuePending) {\n    queuePending = true;\n    if (write && plt.$flags$ & 4 /* queueSync */) {\n      nextTick(flush);\n    } else {\n      plt.raf(flush);\n    }\n  }\n};\nvar consume = (queue) => {\n  for (let i2 = 0; i2 < queue.length; i2++) {\n    try {\n      queue[i2](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  queue.length = 0;\n};\nvar consumeTimeout = (queue, timeout) => {\n  let i2 = 0;\n  let ts = 0;\n  while (i2 < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i2++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  if (i2 === queue.length) {\n    queue.length = 0;\n  } else if (i2 !== 0) {\n    queue.splice(0, i2);\n  }\n};\nvar flush = () => {\n  if (BUILD6.asyncQueue) {\n    queueCongestion++;\n  }\n  consume(queueDomReads);\n  if (BUILD6.asyncQueue) {\n    const timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */ ? performance.now() + 14 * Math.ceil(queueCongestion * (1 / 10)) : Infinity;\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n    if (queueDomWrites.length > 0) {\n      queueDomWritesLow.push(...queueDomWrites);\n      queueDomWrites.length = 0;\n    }\n    if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n      plt.raf(flush);\n    } else {\n      queueCongestion = 0;\n    }\n  } else {\n    consume(queueDomWrites);\n    if (queuePending = queueDomReads.length > 0) {\n      plt.raf(flush);\n    }\n  }\n};\nvar nextTick = (cb) => promiseResolve().then(cb);\nvar readTask = /* @__PURE__ */ queueTask(queueDomReads, false);\nvar writeTask = /* @__PURE__ */ queueTask(queueDomWrites, true);\n\n// src/client/index.ts\nimport { BUILD as BUILD27, Env, NAMESPACE as NAMESPACE2 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/asset-path.ts\nvar getAssetPath = (path) => {\n  const assetUrl = new URL(path, plt.$resourcesUrl$);\n  return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nvar setAssetPath = (path) => plt.$resourcesUrl$ = path;\n\n// src/runtime/bootstrap-custom-element.ts\nimport { BUILD as BUILD24 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/constants.ts\nvar EMPTY_OBJ = {};\nvar SVG_NS = \"http://www.w3.org/2000/svg\";\nvar HTML_NS = \"http://www.w3.org/1999/xhtml\";\n\n// src/utils/helpers.ts\nvar isDef = (v) => v != null;\nvar isComplexType = (o) => {\n  o = typeof o;\n  return o === \"object\" || o === \"function\";\n};\n\n// src/utils/query-nonce-meta-tag-content.ts\nfunction queryNonceMetaTagContent(doc2) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = doc2.head) == null ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) == null ? void 0 : _b.getAttribute(\"content\")) != null ? _c : void 0;\n}\n\n// src/utils/result.ts\nvar result_exports = {};\n__export(result_exports, {\n  err: () => err,\n  map: () => map,\n  ok: () => ok,\n  unwrap: () => unwrap,\n  unwrapErr: () => unwrapErr\n});\nvar ok = (value) => ({\n  isOk: true,\n  isErr: false,\n  value\n});\nvar err = (value) => ({\n  isOk: false,\n  isErr: true,\n  value\n});\nfunction map(result, fn) {\n  if (result.isOk) {\n    const val = fn(result.value);\n    if (val instanceof Promise) {\n      return val.then((newVal) => ok(newVal));\n    } else {\n      return ok(val);\n    }\n  }\n  if (result.isErr) {\n    const value = result.value;\n    return err(value);\n  }\n  throw \"should never get here\";\n}\nvar unwrap = (result) => {\n  if (result.isOk) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\nvar unwrapErr = (result) => {\n  if (result.isErr) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\n\n// src/runtime/connected-callback.ts\nimport { BUILD as BUILD21 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/client-hydrate.ts\nimport { BUILD as BUILD9 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/profile.ts\nimport { BUILD as BUILD7 } from \"@stencil/core/internal/app-data\";\nvar i = 0;\nvar createTime = (fnName, tagName = \"\") => {\n  if (BUILD7.profile && performance.mark) {\n    const key = `st:${fnName}:${tagName}:${i++}`;\n    performance.mark(key);\n    return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar uniqueTime = (key, measureText) => {\n  if (BUILD7.profile && performance.mark) {\n    if (performance.getEntriesByName(key, \"mark\").length === 0) {\n      performance.mark(key);\n    }\n    return () => {\n      if (performance.getEntriesByName(measureText, \"measure\").length === 0) {\n        performance.measure(measureText, key);\n      }\n    };\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar inspect = (ref) => {\n  const hostRef = getHostRef(ref);\n  if (!hostRef) {\n    return void 0;\n  }\n  const flags = hostRef.$flags$;\n  const hostElement = hostRef.$hostElement$;\n  return {\n    renderCount: hostRef.$renderCount$,\n    flags: {\n      hasRendered: !!(flags & 2 /* hasRendered */),\n      hasConnected: !!(flags & 1 /* hasConnected */),\n      isWaitingForChildren: !!(flags & 4 /* isWaitingForChildren */),\n      isConstructingInstance: !!(flags & 8 /* isConstructingInstance */),\n      isQueuedForUpdate: !!(flags & 16 /* isQueuedForUpdate */),\n      hasInitializedComponent: !!(flags & 32 /* hasInitializedComponent */),\n      hasLoadedComponent: !!(flags & 64 /* hasLoadedComponent */),\n      isWatchReady: !!(flags & 128 /* isWatchReady */),\n      isListenReady: !!(flags & 256 /* isListenReady */),\n      needsRerender: !!(flags & 512 /* needsRerender */)\n    },\n    instanceValues: hostRef.$instanceValues$,\n    ancestorComponent: hostRef.$ancestorComponent$,\n    hostElement,\n    lazyInstance: hostRef.$lazyInstance$,\n    vnode: hostRef.$vnode$,\n    modeName: hostRef.$modeName$,\n    onReadyPromise: hostRef.$onReadyPromise$,\n    onReadyResolve: hostRef.$onReadyResolve$,\n    onInstancePromise: hostRef.$onInstancePromise$,\n    onInstanceResolve: hostRef.$onInstanceResolve$,\n    onRenderResolve: hostRef.$onRenderResolve$,\n    queuedListeners: hostRef.$queuedListeners$,\n    rmListeners: hostRef.$rmListeners$,\n    [\"s-id\"]: hostElement[\"s-id\"],\n    [\"s-cr\"]: hostElement[\"s-cr\"],\n    [\"s-lr\"]: hostElement[\"s-lr\"],\n    [\"s-p\"]: hostElement[\"s-p\"],\n    [\"s-rc\"]: hostElement[\"s-rc\"],\n    [\"s-sc\"]: hostElement[\"s-sc\"]\n  };\n};\nvar installDevTools = () => {\n  if (BUILD7.devTools) {\n    const stencil = win.stencil = win.stencil || {};\n    const originalInspect = stencil.inspect;\n    stencil.inspect = (ref) => {\n      let result = inspect(ref);\n      if (!result && typeof originalInspect === \"function\") {\n        result = originalInspect(ref);\n      }\n      return result;\n    };\n  }\n};\n\n// src/runtime/vdom/h.ts\nimport { BUILD as BUILD8 } from \"@stencil/core/internal/app-data\";\nvar h = (nodeName, vnodeData, ...children) => {\n  let child = null;\n  let key = null;\n  let slotName = null;\n  let simple = false;\n  let lastSimple = false;\n  const vNodeChildren = [];\n  const walk = (c) => {\n    for (let i2 = 0; i2 < c.length; i2++) {\n      child = c[i2];\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== \"boolean\") {\n        if (simple = typeof nodeName !== \"function\" && !isComplexType(child)) {\n          child = String(child);\n        } else if (BUILD8.isDev && typeof nodeName !== \"function\" && child.$flags$ === void 0) {\n          consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n        }\n        if (simple && lastSimple) {\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n        lastSimple = simple;\n      }\n    }\n  };\n  walk(children);\n  if (vnodeData) {\n    if (BUILD8.isDev && nodeName === \"input\") {\n      validateInputProperties(vnodeData);\n    }\n    if (BUILD8.vdomKey && vnodeData.key) {\n      key = vnodeData.key;\n    }\n    if (BUILD8.slotRelocation && vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n    if (BUILD8.vdomClass) {\n      const classData = vnodeData.className || vnodeData.class;\n      if (classData) {\n        vnodeData.class = typeof classData !== \"object\" ? classData : Object.keys(classData).filter((k) => classData[k]).join(\" \");\n      }\n    }\n  }\n  if (BUILD8.isDev && vNodeChildren.some(isHost)) {\n    consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n  }\n  if (BUILD8.vdomFunctional && typeof nodeName === \"function\") {\n    return nodeName(\n      vnodeData === null ? {} : vnodeData,\n      vNodeChildren,\n      vdomFnUtils\n    );\n  }\n  const vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n  if (BUILD8.vdomKey) {\n    vnode.$key$ = key;\n  }\n  if (BUILD8.slotRelocation) {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\nvar newVNode = (tag, text) => {\n  const vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  if (BUILD8.vdomAttribute) {\n    vnode.$attrs$ = null;\n  }\n  if (BUILD8.vdomKey) {\n    vnode.$key$ = null;\n  }\n  if (BUILD8.slotRelocation) {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\nvar Host = {};\nvar isHost = (node) => node && node.$tag$ === Host;\nvar vdomFnUtils = {\n  forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n  map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate)\n};\nvar convertToPublic = (node) => ({\n  vattrs: node.$attrs$,\n  vchildren: node.$children$,\n  vkey: node.$key$,\n  vname: node.$name$,\n  vtag: node.$tag$,\n  vtext: node.$text$\n});\nvar convertToPrivate = (node) => {\n  if (typeof node.vtag === \"function\") {\n    const vnodeData = { ...node.vattrs };\n    if (node.vkey) {\n      vnodeData.key = node.vkey;\n    }\n    if (node.vname) {\n      vnodeData.name = node.vname;\n    }\n    return h(node.vtag, vnodeData, ...node.vchildren || []);\n  }\n  const vnode = newVNode(node.vtag, node.vtext);\n  vnode.$attrs$ = node.vattrs;\n  vnode.$children$ = node.vchildren;\n  vnode.$key$ = node.vkey;\n  vnode.$name$ = node.vname;\n  return vnode;\n};\nvar validateInputProperties = (inputElm) => {\n  const props = Object.keys(inputElm);\n  const value = props.indexOf(\"value\");\n  if (value === -1) {\n    return;\n  }\n  const typeIndex = props.indexOf(\"type\");\n  const minIndex = props.indexOf(\"min\");\n  const maxIndex = props.indexOf(\"max\");\n  const stepIndex = props.indexOf(\"step\");\n  if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n    consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n  }\n};\n\n// src/runtime/client-hydrate.ts\nvar initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n  const endHydrate = createTime(\"hydrateClient\", tagName);\n  const shadowRoot = hostElm.shadowRoot;\n  const childRenderNodes = [];\n  const slotNodes = [];\n  const shadowRootNodes = BUILD9.shadowDom && shadowRoot ? [] : null;\n  const vnode = hostRef.$vnode$ = newVNode(tagName, null);\n  if (!plt.$orgLocNodes$) {\n    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = /* @__PURE__ */ new Map());\n  }\n  hostElm[HYDRATE_ID] = hostId;\n  hostElm.removeAttribute(HYDRATE_ID);\n  clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n  childRenderNodes.map((c) => {\n    const orgLocationId = c.$hostId$ + \".\" + c.$nodeId$;\n    const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n    const node = c.$elm$;\n    if (orgLocationNode && supportsShadow && orgLocationNode[\"s-en\"] === \"\") {\n      orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n    }\n    if (!shadowRoot) {\n      node[\"s-hn\"] = tagName;\n      if (orgLocationNode) {\n        node[\"s-ol\"] = orgLocationNode;\n        node[\"s-ol\"][\"s-nr\"] = node;\n      }\n    }\n    plt.$orgLocNodes$.delete(orgLocationId);\n  });\n  if (BUILD9.shadowDom && shadowRoot) {\n    shadowRootNodes.map((shadowRootNode) => {\n      if (shadowRootNode) {\n        shadowRoot.appendChild(shadowRootNode);\n      }\n    });\n  }\n  endHydrate();\n};\nvar clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {\n  let childNodeType;\n  let childIdSplt;\n  let childVNode;\n  let i2;\n  if (node.nodeType === 1 /* ElementNode */) {\n    childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n    if (childNodeType) {\n      childIdSplt = childNodeType.split(\".\");\n      if (childIdSplt[0] === hostId || childIdSplt[0] === \"0\") {\n        childVNode = {\n          $flags$: 0,\n          $hostId$: childIdSplt[0],\n          $nodeId$: childIdSplt[1],\n          $depth$: childIdSplt[2],\n          $index$: childIdSplt[3],\n          $tag$: node.tagName.toLowerCase(),\n          $elm$: node,\n          $attrs$: null,\n          $children$: null,\n          $key$: null,\n          $name$: null,\n          $text$: null\n        };\n        childRenderNodes.push(childVNode);\n        node.removeAttribute(HYDRATE_CHILD_ID);\n        if (!parentVNode.$children$) {\n          parentVNode.$children$ = [];\n        }\n        parentVNode.$children$[childVNode.$index$] = childVNode;\n        parentVNode = childVNode;\n        if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n          shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n        }\n      }\n    }\n    for (i2 = node.childNodes.length - 1; i2 >= 0; i2--) {\n      clientHydrate(\n        parentVNode,\n        childRenderNodes,\n        slotNodes,\n        shadowRootNodes,\n        hostElm,\n        node.childNodes[i2],\n        hostId\n      );\n    }\n    if (node.shadowRoot) {\n      for (i2 = node.shadowRoot.childNodes.length - 1; i2 >= 0; i2--) {\n        clientHydrate(\n          parentVNode,\n          childRenderNodes,\n          slotNodes,\n          shadowRootNodes,\n          hostElm,\n          node.shadowRoot.childNodes[i2],\n          hostId\n        );\n      }\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[1] === hostId || childIdSplt[1] === \"0\") {\n      childNodeType = childIdSplt[0];\n      childVNode = {\n        $flags$: 0,\n        $hostId$: childIdSplt[1],\n        $nodeId$: childIdSplt[2],\n        $depth$: childIdSplt[3],\n        $index$: childIdSplt[4],\n        $elm$: node,\n        $attrs$: null,\n        $children$: null,\n        $key$: null,\n        $name$: null,\n        $tag$: null,\n        $text$: null\n      };\n      if (childNodeType === TEXT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* TextNode */) {\n          childVNode.$text$ = childVNode.$elm$.textContent;\n          childRenderNodes.push(childVNode);\n          node.remove();\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n          if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n          }\n        }\n      } else if (childVNode.$hostId$ === hostId) {\n        if (childNodeType === SLOT_NODE_ID) {\n          childVNode.$tag$ = \"slot\";\n          if (childIdSplt[5]) {\n            node[\"s-sn\"] = childVNode.$name$ = childIdSplt[5];\n          } else {\n            node[\"s-sn\"] = \"\";\n          }\n          node[\"s-sr\"] = true;\n          if (BUILD9.shadowDom && shadowRootNodes) {\n            childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n            if (childVNode.$name$) {\n              childVNode.$elm$.setAttribute(\"name\", childVNode.$name$);\n            }\n            node.parentNode.insertBefore(childVNode.$elm$, node);\n            node.remove();\n            if (childVNode.$depth$ === \"0\") {\n              shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n            }\n          }\n          slotNodes.push(childVNode);\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n        } else if (childNodeType === CONTENT_REF_ID) {\n          if (BUILD9.shadowDom && shadowRootNodes) {\n            node.remove();\n          } else if (BUILD9.slotRelocation) {\n            hostElm[\"s-cr\"] = node;\n            node[\"s-cn\"] = true;\n          }\n        }\n      }\n    }\n  } else if (parentVNode && parentVNode.$tag$ === \"style\") {\n    const vnode = newVNode(null, node.textContent);\n    vnode.$elm$ = node;\n    vnode.$index$ = \"0\";\n    parentVNode.$children$ = [vnode];\n  }\n};\nvar initializeDocumentHydrate = (node, orgLocNodes) => {\n  if (node.nodeType === 1 /* ElementNode */) {\n    let i2 = 0;\n    for (; i2 < node.childNodes.length; i2++) {\n      initializeDocumentHydrate(node.childNodes[i2], orgLocNodes);\n    }\n    if (node.shadowRoot) {\n      for (i2 = 0; i2 < node.shadowRoot.childNodes.length; i2++) {\n        initializeDocumentHydrate(node.shadowRoot.childNodes[i2], orgLocNodes);\n      }\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    const childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[0] === ORG_LOCATION_ID) {\n      orgLocNodes.set(childIdSplt[1] + \".\" + childIdSplt[2], node);\n      node.nodeValue = \"\";\n      node[\"s-en\"] = childIdSplt[3];\n    }\n  }\n};\n\n// src/runtime/initialize-component.ts\nimport { BUILD as BUILD20 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/mode.ts\nvar computeMode = (elm) => modeResolutionChain.map((h2) => h2(elm)).find((m) => !!m);\nvar setMode = (handler) => modeResolutionChain.push(handler);\nvar getMode = (ref) => getHostRef(ref).$modeName$;\n\n// src/runtime/proxy-component.ts\nimport { BUILD as BUILD19 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/set-value.ts\nimport { BUILD as BUILD18 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/parse-property-value.ts\nimport { BUILD as BUILD10 } from \"@stencil/core/internal/app-data\";\nvar parsePropertyValue = (propValue, propType) => {\n  if (propValue != null && !isComplexType(propValue)) {\n    if (BUILD10.propBoolean && propType & 4 /* Boolean */) {\n      return propValue === \"false\" ? false : propValue === \"\" || !!propValue;\n    }\n    if (BUILD10.propNumber && propType & 2 /* Number */) {\n      return parseFloat(propValue);\n    }\n    if (BUILD10.propString && propType & 1 /* String */) {\n      return String(propValue);\n    }\n    return propValue;\n  }\n  return propValue;\n};\n\n// src/runtime/update-component.ts\nimport { BUILD as BUILD17, NAMESPACE } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/event-emitter.ts\nimport { BUILD as BUILD12 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/element.ts\nimport { BUILD as BUILD11 } from \"@stencil/core/internal/app-data\";\nvar getElement = (ref) => BUILD11.lazyLoad ? getHostRef(ref).$hostElement$ : ref;\n\n// src/runtime/event-emitter.ts\nvar createEvent = (ref, name, flags) => {\n  const elm = getElement(ref);\n  return {\n    emit: (detail) => {\n      if (BUILD12.isDev && !elm.isConnected) {\n        consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n      }\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4 /* Bubbles */),\n        composed: !!(flags & 2 /* Composed */),\n        cancelable: !!(flags & 1 /* Cancellable */),\n        detail\n      });\n    }\n  };\n};\nvar emitEvent = (elm, name, opts) => {\n  const ev = plt.ce(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\n// src/runtime/styles.ts\nimport { BUILD as BUILD13 } from \"@stencil/core/internal/app-data\";\nvar rootAppliedStyles = /* @__PURE__ */ new WeakMap();\nvar registerStyle = (scopeId2, cssText, allowCS) => {\n  let style = styles.get(scopeId2);\n  if (supportsConstructableStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    if (typeof style === \"string\") {\n      style = cssText;\n    } else {\n      style.replaceSync(cssText);\n    }\n  } else {\n    style = cssText;\n  }\n  styles.set(scopeId2, style);\n};\nvar addStyle = (styleContainerNode, cmpMeta, mode) => {\n  var _a;\n  const scopeId2 = getScopeId(cmpMeta, mode);\n  const style = styles.get(scopeId2);\n  if (!BUILD13.attachStyles) {\n    return scopeId2;\n  }\n  styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n  if (style) {\n    if (typeof style === \"string\") {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      let styleElm;\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = /* @__PURE__ */ new Set());\n      }\n      if (!appliedStyles.has(scopeId2)) {\n        if (BUILD13.hydrateClientSide && styleContainerNode.host && (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId2}\"]`))) {\n          styleElm.innerHTML = style;\n        } else {\n          styleElm = doc.createElement(\"style\");\n          styleElm.innerHTML = style;\n          const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n          if (nonce != null) {\n            styleElm.setAttribute(\"nonce\", nonce);\n          }\n          if (BUILD13.hydrateServerSide || BUILD13.hotModuleReplacement) {\n            styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId2);\n          }\n          styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector(\"link\"));\n        }\n        if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n          styleElm.innerHTML += SLOT_FB_CSS;\n        }\n        if (appliedStyles) {\n          appliedStyles.add(scopeId2);\n        }\n      }\n    } else if (BUILD13.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n    }\n  }\n  return scopeId2;\n};\nvar attachStyles = (hostRef) => {\n  const cmpMeta = hostRef.$cmpMeta$;\n  const elm = hostRef.$hostElement$;\n  const flags = cmpMeta.$flags$;\n  const endAttachStyles = createTime(\"attachStyles\", cmpMeta.$tagName$);\n  const scopeId2 = addStyle(\n    BUILD13.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(),\n    cmpMeta,\n    hostRef.$modeName$\n  );\n  if ((BUILD13.shadowDom || BUILD13.scoped) && BUILD13.cssAnnotations && flags & 10 /* needsScopedEncapsulation */) {\n    elm[\"s-sc\"] = scopeId2;\n    elm.classList.add(scopeId2 + \"-h\");\n    if (BUILD13.scoped && flags & 2 /* scopedCssEncapsulation */) {\n      elm.classList.add(scopeId2 + \"-s\");\n    }\n  }\n  endAttachStyles();\n};\nvar getScopeId = (cmp, mode) => \"sc-\" + (BUILD13.mode && mode && cmp.$flags$ & 32 /* hasMode */ ? cmp.$tagName$ + \"-\" + mode : cmp.$tagName$);\nvar convertScopedToShadow = (css) => css.replace(/\\/\\*!@([^\\/]+)\\*\\/[^\\{]+\\{/g, \"$1{\");\n\n// src/runtime/vdom/vdom-render.ts\nimport { BUILD as BUILD16 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/update-element.ts\nimport { BUILD as BUILD15 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/set-accessor.ts\nimport { BUILD as BUILD14 } from \"@stencil/core/internal/app-data\";\nvar setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n  if (oldValue !== newValue) {\n    let isProp = isMemberInElement(elm, memberName);\n    let ln = memberName.toLowerCase();\n    if (BUILD14.vdomClass && memberName === \"class\") {\n      const classList = elm.classList;\n      const oldClasses = parseClassList(oldValue);\n      const newClasses = parseClassList(newValue);\n      classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n      classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n    } else if (BUILD14.vdomStyle && memberName === \"style\") {\n      if (BUILD14.updatable) {\n        for (const prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (!BUILD14.hydrateServerSide && prop.includes(\"-\")) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = \"\";\n            }\n          }\n        }\n      }\n      for (const prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (!BUILD14.hydrateServerSide && prop.includes(\"-\")) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (BUILD14.vdomKey && memberName === \"key\") {\n    } else if (BUILD14.vdomRef && memberName === \"ref\") {\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (BUILD14.vdomListener && (BUILD14.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) && memberName[0] === \"o\" && memberName[1] === \"n\") {\n      if (memberName[2] === \"-\") {\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        memberName = ln.slice(2);\n      } else {\n        memberName = ln[2] + memberName.slice(3);\n      }\n      if (oldValue || newValue) {\n        const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n        memberName = memberName.replace(CAPTURE_EVENT_REGEX, \"\");\n        if (oldValue) {\n          plt.rel(elm, memberName, oldValue, capture);\n        }\n        if (newValue) {\n          plt.ael(elm, memberName, newValue, capture);\n        }\n      }\n    } else if (BUILD14.vdomPropOrAttr) {\n      const isComplex = isComplexType(newValue);\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes(\"-\")) {\n            const n = newValue == null ? \"\" : newValue;\n            if (memberName === \"list\") {\n              isProp = false;\n            } else if (oldValue == null || elm[memberName] != n) {\n              elm[memberName] = n;\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {\n        }\n      }\n      let xlink = false;\n      if (BUILD14.vdomXlink) {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, \"\"))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n      if (newValue == null || newValue === false) {\n        if (newValue !== false || elm.getAttribute(memberName) === \"\") {\n          if (BUILD14.vdomXlink && xlink) {\n            elm.removeAttributeNS(XLINK_NS, memberName);\n          } else {\n            elm.removeAttribute(memberName);\n          }\n        }\n      } else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n        newValue = newValue === true ? \"\" : newValue;\n        if (BUILD14.vdomXlink && xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = (value) => !value ? [] : value.split(parseClassListRegex);\nvar CAPTURE_EVENT_SUFFIX = \"Capture\";\nvar CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + \"$\");\n\n// src/runtime/vdom/update-element.ts\nvar updateElement = (oldVnode, newVnode, isSvgMode2) => {\n  const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  const oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  if (BUILD15.updatable) {\n    for (const memberName of sortedAttrNames(Object.keys(oldVnodeAttrs))) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], void 0, isSvgMode2, newVnode.$flags$);\n      }\n    }\n  }\n  for (const memberName of sortedAttrNames(Object.keys(newVnodeAttrs))) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode2, newVnode.$flags$);\n  }\n};\nfunction sortedAttrNames(attrNames) {\n  return attrNames.includes(\"ref\") ? (\n    // we need to sort these to ensure that `'ref'` is the last attr\n    [...attrNames.filter((attr) => attr !== \"ref\"), \"ref\"]\n  ) : (\n    // no need to sort, return the original array\n    attrNames\n  );\n}\n\n// src/runtime/vdom/vdom-render.ts\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n  var _a;\n  const newVNode2 = newParentVNode.$children$[childIndex];\n  let i2 = 0;\n  let elm;\n  let childNode;\n  let oldVNode;\n  if (BUILD16.slotRelocation && !useNativeShadowDom) {\n    checkSlotRelocate = true;\n    if (newVNode2.$tag$ === \"slot\") {\n      if (scopeId) {\n        parentElm.classList.add(scopeId + \"-s\");\n      }\n      newVNode2.$flags$ |= newVNode2.$children$ ? (\n        // slot element has fallback content\n        // still create an element that \"mocks\" the slot element\n        2 /* isSlotFallback */\n      ) : (\n        // slot element does not have fallback content\n        // create an html comment we'll use to always reference\n        // where actual slot content should sit next to\n        1 /* isSlotReference */\n      );\n    }\n  }\n  if (BUILD16.isDev && newVNode2.$elm$) {\n    consoleDevError(\n      `The JSX ${newVNode2.$text$ !== null ? `\"${newVNode2.$text$}\" text` : `\"${newVNode2.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`\n    );\n  }\n  if (BUILD16.vdomText && newVNode2.$text$ !== null) {\n    elm = newVNode2.$elm$ = doc.createTextNode(newVNode2.$text$);\n  } else if (BUILD16.slotRelocation && newVNode2.$flags$ & 1 /* isSlotReference */) {\n    elm = newVNode2.$elm$ = BUILD16.isDebug || BUILD16.hydrateServerSide ? slotReferenceDebugNode(newVNode2) : doc.createTextNode(\"\");\n  } else {\n    if (BUILD16.svg && !isSvgMode) {\n      isSvgMode = newVNode2.$tag$ === \"svg\";\n    }\n    elm = newVNode2.$elm$ = BUILD16.svg ? doc.createElementNS(\n      isSvgMode ? SVG_NS : HTML_NS,\n      !useNativeShadowDom && BUILD16.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    ) : doc.createElement(\n      !useNativeShadowDom && BUILD16.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    );\n    if (BUILD16.svg && isSvgMode && newVNode2.$tag$ === \"foreignObject\") {\n      isSvgMode = false;\n    }\n    if (BUILD16.vdomAttribute) {\n      updateElement(null, newVNode2, isSvgMode);\n    }\n    if ((BUILD16.shadowDom || BUILD16.scoped) && isDef(scopeId) && elm[\"s-si\"] !== scopeId) {\n      elm.classList.add(elm[\"s-si\"] = scopeId);\n    }\n    if (BUILD16.scoped) {\n      updateElementScopeIds(elm, parentElm);\n    }\n    if (newVNode2.$children$) {\n      for (i2 = 0; i2 < newVNode2.$children$.length; ++i2) {\n        childNode = createElm(oldParentVNode, newVNode2, i2, elm);\n        if (childNode) {\n          elm.appendChild(childNode);\n        }\n      }\n    }\n    if (BUILD16.svg) {\n      if (newVNode2.$tag$ === \"svg\") {\n        isSvgMode = false;\n      } else if (elm.tagName === \"foreignObject\") {\n        isSvgMode = true;\n      }\n    }\n  }\n  elm[\"s-hn\"] = hostTagName;\n  if (BUILD16.slotRelocation) {\n    if (newVNode2.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n      elm[\"s-sr\"] = true;\n      elm[\"s-cr\"] = contentRef;\n      elm[\"s-sn\"] = newVNode2.$name$ || \"\";\n      elm[\"s-rf\"] = (_a = newVNode2.$attrs$) == null ? void 0 : _a.ref;\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n      if (oldVNode && oldVNode.$tag$ === newVNode2.$tag$ && oldParentVNode.$elm$) {\n        if (BUILD16.experimentalSlotFixes) {\n          relocateToHostRoot(oldParentVNode.$elm$);\n        } else {\n          putBackInOriginalLocation(oldParentVNode.$elm$, false);\n        }\n      }\n    }\n  }\n  return elm;\n};\nvar relocateToHostRoot = (parentElm) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const host = parentElm.closest(hostTagName.toLowerCase());\n  if (host != null) {\n    const contentRefNode = Array.from(host.childNodes).find((ref) => ref[\"s-cr\"]);\n    const childNodeArray = Array.from(parentElm.childNodes);\n    for (const childNode of contentRefNode ? childNodeArray.reverse() : childNodeArray) {\n      if (childNode[\"s-sh\"] != null) {\n        insertBefore(host, childNode, contentRefNode != null ? contentRefNode : null);\n        childNode[\"s-sh\"] = void 0;\n        checkSlotRelocate = true;\n      }\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar putBackInOriginalLocation = (parentElm, recursive) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const oldSlotChildNodes = Array.from(parentElm.childNodes);\n  if (parentElm[\"s-sr\"] && BUILD16.experimentalSlotFixes) {\n    let node = parentElm;\n    while (node = node.nextSibling) {\n      if (node && node[\"s-sn\"] === parentElm[\"s-sn\"] && node[\"s-sh\"] === hostTagName) {\n        oldSlotChildNodes.push(node);\n      }\n    }\n  }\n  for (let i2 = oldSlotChildNodes.length - 1; i2 >= 0; i2--) {\n    const childNode = oldSlotChildNodes[i2];\n    if (childNode[\"s-hn\"] !== hostTagName && childNode[\"s-ol\"]) {\n      insertBefore(parentReferenceNode(childNode), childNode, referenceNode(childNode));\n      childNode[\"s-ol\"].remove();\n      childNode[\"s-ol\"] = void 0;\n      childNode[\"s-sh\"] = void 0;\n      checkSlotRelocate = true;\n    }\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n  let containerElm = BUILD16.slotRelocation && parentElm[\"s-cr\"] && parentElm[\"s-cr\"].parentNode || parentElm;\n  let childNode;\n  if (BUILD16.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx, parentElm);\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        insertBefore(containerElm, childNode, BUILD16.slotRelocation ? referenceNode(before) : before);\n      }\n    }\n  }\n};\nvar removeVnodes = (vnodes, startIdx, endIdx) => {\n  for (let index = startIdx; index <= endIdx; ++index) {\n    const vnode = vnodes[index];\n    if (vnode) {\n      const elm = vnode.$elm$;\n      nullifyVNodeRefs(vnode);\n      if (elm) {\n        if (BUILD16.slotRelocation) {\n          checkSlotFallbackVisibility = true;\n          if (elm[\"s-ol\"]) {\n            elm[\"s-ol\"].remove();\n          } else {\n            putBackInOriginalLocation(elm, true);\n          }\n        }\n        elm.remove();\n      }\n    }\n  }\n};\nvar updateChildren = (parentElm, oldCh, newVNode2, newCh, isInitialRender = false) => {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let idxInOld = 0;\n  let i2 = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let node;\n  let elmToMove;\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {\n      patch(oldStartVnode, newStartVnode, isInitialRender);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {\n      patch(oldEndVnode, newEndVnode, isInitialRender);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {\n      if (BUILD16.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n      patch(oldStartVnode, newEndVnode, isInitialRender);\n      insertBefore(parentElm, oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {\n      if (BUILD16.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n      patch(oldEndVnode, newStartVnode, isInitialRender);\n      insertBefore(parentElm, oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      idxInOld = -1;\n      if (BUILD16.vdomKey) {\n        for (i2 = oldStartIdx; i2 <= oldEndIdx; ++i2) {\n          if (oldCh[i2] && oldCh[i2].$key$ !== null && oldCh[i2].$key$ === newStartVnode.$key$) {\n            idxInOld = i2;\n            break;\n          }\n        }\n      }\n      if (BUILD16.vdomKey && idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode2, idxInOld, parentElm);\n        } else {\n          patch(elmToMove, newStartVnode, isInitialRender);\n          oldCh[idxInOld] = void 0;\n          node = elmToMove.$elm$;\n        }\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode2, newStartIdx, parentElm);\n        newStartVnode = newCh[++newStartIdx];\n      }\n      if (node) {\n        if (BUILD16.slotRelocation) {\n          insertBefore(parentReferenceNode(oldStartVnode.$elm$), node, referenceNode(oldStartVnode.$elm$));\n        } else {\n          insertBefore(oldStartVnode.$elm$.parentNode, node, oldStartVnode.$elm$);\n        }\n      }\n    }\n  }\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(\n      parentElm,\n      newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$,\n      newVNode2,\n      newCh,\n      newStartIdx,\n      newEndIdx\n    );\n  } else if (BUILD16.updatable && newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\nvar isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {\n  if (leftVNode.$tag$ === rightVNode.$tag$) {\n    if (BUILD16.slotRelocation && leftVNode.$tag$ === \"slot\") {\n      return leftVNode.$name$ === rightVNode.$name$;\n    }\n    if (BUILD16.vdomKey && !isInitialRender) {\n      return leftVNode.$key$ === rightVNode.$key$;\n    }\n    return true;\n  }\n  return false;\n};\nvar referenceNode = (node) => {\n  return node && node[\"s-ol\"] || node;\n};\nvar parentReferenceNode = (node) => (node[\"s-ol\"] ? node[\"s-ol\"] : node).parentNode;\nvar patch = (oldVNode, newVNode2, isInitialRender = false) => {\n  const elm = newVNode2.$elm$ = oldVNode.$elm$;\n  const oldChildren = oldVNode.$children$;\n  const newChildren = newVNode2.$children$;\n  const tag = newVNode2.$tag$;\n  const text = newVNode2.$text$;\n  let defaultHolder;\n  if (!BUILD16.vdomText || text === null) {\n    if (BUILD16.svg) {\n      isSvgMode = tag === \"svg\" ? true : tag === \"foreignObject\" ? false : isSvgMode;\n    }\n    if (BUILD16.vdomAttribute || BUILD16.reflect) {\n      if (BUILD16.slot && tag === \"slot\" && !useNativeShadowDom) {\n        if (BUILD16.experimentalSlotFixes && oldVNode.$name$ !== newVNode2.$name$) {\n          newVNode2.$elm$[\"s-sn\"] = newVNode2.$name$ || \"\";\n          relocateToHostRoot(newVNode2.$elm$.parentElement);\n        }\n      } else {\n        updateElement(oldVNode, newVNode2, isSvgMode);\n      }\n    }\n    if (BUILD16.updatable && oldChildren !== null && newChildren !== null) {\n      updateChildren(elm, oldChildren, newVNode2, newChildren, isInitialRender);\n    } else if (newChildren !== null) {\n      if (BUILD16.updatable && BUILD16.vdomText && oldVNode.$text$ !== null) {\n        elm.textContent = \"\";\n      }\n      addVnodes(elm, null, newVNode2, newChildren, 0, newChildren.length - 1);\n    } else if (BUILD16.updatable && oldChildren !== null) {\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n    if (BUILD16.svg && isSvgMode && tag === \"svg\") {\n      isSvgMode = false;\n    }\n  } else if (BUILD16.vdomText && BUILD16.slotRelocation && (defaultHolder = elm[\"s-cr\"])) {\n    defaultHolder.parentNode.textContent = text;\n  } else if (BUILD16.vdomText && oldVNode.$text$ !== text) {\n    elm.data = text;\n  }\n};\nvar updateFallbackSlotVisibility = (elm) => {\n  const childNodes = elm.childNodes;\n  for (const childNode of childNodes) {\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      if (childNode[\"s-sr\"]) {\n        const slotName = childNode[\"s-sn\"];\n        childNode.hidden = false;\n        for (const siblingNode of childNodes) {\n          if (siblingNode !== childNode) {\n            if (siblingNode[\"s-hn\"] !== childNode[\"s-hn\"] || slotName !== \"\") {\n              if (siblingNode.nodeType === 1 /* ElementNode */ && (slotName === siblingNode.getAttribute(\"slot\") || slotName === siblingNode[\"s-sn\"]) || siblingNode.nodeType === 3 /* TextNode */ && slotName === siblingNode[\"s-sn\"]) {\n                childNode.hidden = true;\n                break;\n              }\n            } else {\n              if (siblingNode.nodeType === 1 /* ElementNode */ || siblingNode.nodeType === 3 /* TextNode */ && siblingNode.textContent.trim() !== \"\") {\n                childNode.hidden = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n      updateFallbackSlotVisibility(childNode);\n    }\n  }\n};\nvar relocateNodes = [];\nvar markSlotContentForRelocation = (elm) => {\n  let node;\n  let hostContentNodes;\n  let j;\n  for (const childNode of elm.childNodes) {\n    if (childNode[\"s-sr\"] && (node = childNode[\"s-cr\"]) && node.parentNode) {\n      hostContentNodes = node.parentNode.childNodes;\n      const slotName = childNode[\"s-sn\"];\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n        if (!node[\"s-cn\"] && !node[\"s-nr\"] && node[\"s-hn\"] !== childNode[\"s-hn\"] && (!BUILD16.experimentalSlotFixes || !node[\"s-sh\"] || node[\"s-sh\"] !== childNode[\"s-hn\"])) {\n          if (isNodeLocatedInSlot(node, slotName)) {\n            let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n            checkSlotFallbackVisibility = true;\n            node[\"s-sn\"] = node[\"s-sn\"] || slotName;\n            if (relocateNodeData) {\n              relocateNodeData.$nodeToRelocate$[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              node[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n            if (node[\"s-sr\"]) {\n              relocateNodes.map((relocateNode) => {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node[\"s-sn\"])) {\n                  relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      markSlotContentForRelocation(childNode);\n    }\n  }\n};\nvar isNodeLocatedInSlot = (nodeToRelocate, slotName) => {\n  if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n    if (nodeToRelocate.getAttribute(\"slot\") === null && slotName === \"\") {\n      return true;\n    }\n    if (nodeToRelocate.getAttribute(\"slot\") === slotName) {\n      return true;\n    }\n    return false;\n  }\n  if (nodeToRelocate[\"s-sn\"] === slotName) {\n    return true;\n  }\n  return slotName === \"\";\n};\nvar nullifyVNodeRefs = (vNode) => {\n  if (BUILD16.vdomRef) {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);\n  }\n};\nvar insertBefore = (parent, newNode, reference) => {\n  const inserted = parent == null ? void 0 : parent.insertBefore(newNode, reference);\n  if (BUILD16.scoped) {\n    updateElementScopeIds(newNode, parent);\n  }\n  return inserted;\n};\nvar findScopeIds = (element) => {\n  const scopeIds = [];\n  if (element) {\n    scopeIds.push(\n      ...element[\"s-scs\"] || [],\n      element[\"s-si\"],\n      element[\"s-sc\"],\n      ...findScopeIds(element.parentElement)\n    );\n  }\n  return scopeIds;\n};\nvar updateElementScopeIds = (element, parent, iterateChildNodes = false) => {\n  var _a;\n  if (element && parent && element.nodeType === 1 /* ElementNode */) {\n    const scopeIds = new Set(findScopeIds(parent).filter(Boolean));\n    if (scopeIds.size) {\n      (_a = element.classList) == null ? void 0 : _a.add(...element[\"s-scs\"] = [...scopeIds]);\n      if (element[\"s-ol\"] || iterateChildNodes) {\n        for (const childNode of Array.from(element.childNodes)) {\n          updateElementScopeIds(childNode, element, true);\n        }\n      }\n    }\n  }\n};\nvar renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {\n  var _a, _b, _c, _d, _e;\n  const hostElm = hostRef.$hostElement$;\n  const cmpMeta = hostRef.$cmpMeta$;\n  const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n  if (BUILD16.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n    throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n  }\n  if (BUILD16.reflect && cmpMeta.$attrsToReflect$) {\n    rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n    cmpMeta.$attrsToReflect$.map(\n      ([propName, attribute]) => rootVnode.$attrs$[attribute] = hostElm[propName]\n    );\n  }\n  if (isInitialLoad && rootVnode.$attrs$) {\n    for (const key of Object.keys(rootVnode.$attrs$)) {\n      if (hostElm.hasAttribute(key) && ![\"key\", \"ref\", \"style\", \"class\"].includes(key)) {\n        rootVnode.$attrs$[key] = hostElm[key];\n      }\n    }\n  }\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4 /* isHost */;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = BUILD16.shadowDom ? hostElm.shadowRoot || hostElm : hostElm;\n  if (BUILD16.scoped || BUILD16.shadowDom) {\n    scopeId = hostElm[\"s-sc\"];\n  }\n  useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n  if (BUILD16.slotRelocation) {\n    contentRef = hostElm[\"s-cr\"];\n    checkSlotFallbackVisibility = false;\n  }\n  patch(oldVNode, rootVnode, isInitialLoad);\n  if (BUILD16.slotRelocation) {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    if (checkSlotRelocate) {\n      markSlotContentForRelocation(rootVnode.$elm$);\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        if (!nodeToRelocate[\"s-ol\"]) {\n          const orgLocationNode = BUILD16.isDebug || BUILD16.hydrateServerSide ? originalLocationDebugNode(nodeToRelocate) : doc.createTextNode(\"\");\n          orgLocationNode[\"s-nr\"] = nodeToRelocate;\n          insertBefore(nodeToRelocate.parentNode, nodeToRelocate[\"s-ol\"] = orgLocationNode, nodeToRelocate);\n        }\n      }\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        const slotRefNode = relocateData.$slotRefNode$;\n        if (slotRefNode) {\n          const parentNodeRef = slotRefNode.parentNode;\n          let insertBeforeNode = slotRefNode.nextSibling;\n          if (!BUILD16.experimentalSlotFixes || insertBeforeNode && insertBeforeNode.nodeType === 1 /* ElementNode */) {\n            let orgLocationNode = (_a = nodeToRelocate[\"s-ol\"]) == null ? void 0 : _a.previousSibling;\n            while (orgLocationNode) {\n              let refNode = (_b = orgLocationNode[\"s-nr\"]) != null ? _b : null;\n              if (refNode && refNode[\"s-sn\"] === nodeToRelocate[\"s-sn\"] && parentNodeRef === refNode.parentNode) {\n                refNode = refNode.nextSibling;\n                while (refNode === nodeToRelocate || (refNode == null ? void 0 : refNode[\"s-sr\"])) {\n                  refNode = refNode == null ? void 0 : refNode.nextSibling;\n                }\n                if (!refNode || !refNode[\"s-nr\"]) {\n                  insertBeforeNode = refNode;\n                  break;\n                }\n              }\n              orgLocationNode = orgLocationNode.previousSibling;\n            }\n          }\n          if (!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode || nodeToRelocate.nextSibling !== insertBeforeNode) {\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!BUILD16.experimentalSlotFixes && !nodeToRelocate[\"s-hn\"] && nodeToRelocate[\"s-ol\"]) {\n                nodeToRelocate[\"s-hn\"] = nodeToRelocate[\"s-ol\"].parentNode.nodeName;\n              }\n              insertBefore(parentNodeRef, nodeToRelocate, insertBeforeNode);\n              if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n                nodeToRelocate.hidden = (_c = nodeToRelocate[\"s-ih\"]) != null ? _c : false;\n              }\n            }\n          }\n          nodeToRelocate && typeof slotRefNode[\"s-rf\"] === \"function\" && slotRefNode[\"s-rf\"](nodeToRelocate);\n        } else {\n          if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n            if (isInitialLoad) {\n              nodeToRelocate[\"s-ih\"] = (_d = nodeToRelocate.hidden) != null ? _d : false;\n            }\n            nodeToRelocate.hidden = true;\n          }\n        }\n      }\n    }\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n    relocateNodes.length = 0;\n  }\n  if (BUILD16.experimentalScopedSlotChanges && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n    for (const childNode of rootVnode.$elm$.childNodes) {\n      if (childNode[\"s-hn\"] !== hostTagName && !childNode[\"s-sh\"]) {\n        if (isInitialLoad && childNode[\"s-ih\"] == null) {\n          childNode[\"s-ih\"] = (_e = childNode.hidden) != null ? _e : false;\n        }\n        childNode.hidden = true;\n      }\n    }\n  }\n  contentRef = void 0;\n};\nvar slotReferenceDebugNode = (slotVNode) => doc.createComment(\n  `<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : \"\"}> (host=${hostTagName.toLowerCase()})`\n);\nvar originalLocationDebugNode = (nodeToRelocate) => doc.createComment(\n  `org-location for ` + (nodeToRelocate.localName ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate[\"s-hn\"]})` : `[${nodeToRelocate.textContent}]`)\n);\n\n// src/runtime/update-component.ts\nvar attachToAncestor = (hostRef, ancestorComponent) => {\n  if (BUILD17.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent[\"s-p\"]) {\n    ancestorComponent[\"s-p\"].push(new Promise((r) => hostRef.$onRenderResolve$ = r));\n  }\n};\nvar scheduleUpdate = (hostRef, isInitialLoad) => {\n  if (BUILD17.taskQueue && BUILD17.updatable) {\n    hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n  }\n  if (BUILD17.asyncLoading && hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n    hostRef.$flags$ |= 512 /* needsRerender */;\n    return;\n  }\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n  const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n  return BUILD17.taskQueue ? writeTask(dispatch) : dispatch();\n};\nvar dispatchHooks = (hostRef, isInitialLoad) => {\n  const elm = hostRef.$hostElement$;\n  const endSchedule = createTime(\"scheduleUpdate\", hostRef.$cmpMeta$.$tagName$);\n  const instance = BUILD17.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  if (!instance) {\n    throw new Error(\n      `Can't render component <${elm.tagName.toLowerCase()} /> with invalid Stencil runtime! Make sure this imported component is compiled with a \\`externalRuntime: true\\` flag. For more information, please refer to https://stenciljs.com/docs/custom-elements#externalruntime`\n    );\n  }\n  let maybePromise;\n  if (isInitialLoad) {\n    if (BUILD17.lazyLoad && BUILD17.hostListener) {\n      hostRef.$flags$ |= 256 /* isListenReady */;\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n        hostRef.$queuedListeners$ = void 0;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentWillLoad\");\n    if (BUILD17.cmpWillLoad) {\n      maybePromise = safeCall(instance, \"componentWillLoad\");\n    }\n  } else {\n    emitLifecycleEvent(elm, \"componentWillUpdate\");\n    if (BUILD17.cmpWillUpdate) {\n      maybePromise = safeCall(instance, \"componentWillUpdate\");\n    }\n  }\n  emitLifecycleEvent(elm, \"componentWillRender\");\n  if (BUILD17.cmpWillRender) {\n    maybePromise = enqueue(maybePromise, () => safeCall(instance, \"componentWillRender\"));\n  }\n  endSchedule();\n  return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nvar enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn).catch((err2) => {\n  console.error(err2);\n  fn();\n}) : fn();\nvar isPromisey = (maybePromise) => maybePromise instanceof Promise || maybePromise && maybePromise.then && typeof maybePromise.then === \"function\";\nvar updateComponent = async (hostRef, instance, isInitialLoad) => {\n  var _a;\n  const elm = hostRef.$hostElement$;\n  const endUpdate = createTime(\"update\", hostRef.$cmpMeta$.$tagName$);\n  const rc = elm[\"s-rc\"];\n  if (BUILD17.style && isInitialLoad) {\n    attachStyles(hostRef);\n  }\n  const endRender = createTime(\"render\", hostRef.$cmpMeta$.$tagName$);\n  if (BUILD17.isDev) {\n    hostRef.$flags$ |= 1024 /* devOnRender */;\n  }\n\n    //========= PDS PATCH START\n    if (elm.hasDSR) {\n        elm.shadowRoot.innerHTML = '';\n        delete elm.hasDSR;\n    }\n    //========= PDS PATCH END\n\n  if (BUILD17.hydrateServerSide) {\n    await callRender(hostRef, instance, elm, isInitialLoad);\n  } else {\n    callRender(hostRef, instance, elm, isInitialLoad);\n  }\n  if (BUILD17.isDev) {\n    hostRef.$renderCount$ = hostRef.$renderCount$ === void 0 ? 1 : hostRef.$renderCount$ + 1;\n    hostRef.$flags$ &= ~1024 /* devOnRender */;\n  }\n  if (BUILD17.hydrateServerSide) {\n    try {\n      serverSideConnected(elm);\n      if (isInitialLoad) {\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          elm[\"s-en\"] = \"\";\n        } else if (hostRef.$cmpMeta$.$flags$ & 2 /* scopedCssEncapsulation */) {\n          elm[\"s-en\"] = \"c\";\n        }\n      }\n    } catch (e) {\n      consoleError(e, elm);\n    }\n  }\n  if (BUILD17.asyncLoading && rc) {\n    rc.map((cb) => cb());\n    elm[\"s-rc\"] = void 0;\n  }\n  endRender();\n  endUpdate();\n  if (BUILD17.asyncLoading) {\n    const childrenPromises = (_a = elm[\"s-p\"]) != null ? _a : [];\n    const postUpdate = () => postUpdateComponent(hostRef);\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n      childrenPromises.length = 0;\n    }\n  } else {\n    postUpdateComponent(hostRef);\n  }\n};\nvar renderingRef = null;\nvar callRender = (hostRef, instance, elm, isInitialLoad) => {\n  const allRenderFn = BUILD17.allRenderFn ? true : false;\n  const lazyLoad = BUILD17.lazyLoad ? true : false;\n  const taskQueue = BUILD17.taskQueue ? true : false;\n  const updatable = BUILD17.updatable ? true : false;\n  try {\n    renderingRef = instance;\n    instance = allRenderFn ? instance.render() : instance.render && instance.render();\n    if (updatable && taskQueue) {\n      hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n    }\n    if (updatable || lazyLoad) {\n      hostRef.$flags$ |= 2 /* hasRendered */;\n    }\n    if (BUILD17.hasRenderFn || BUILD17.reflect) {\n      if (BUILD17.vdomRender || BUILD17.reflect) {\n        if (BUILD17.hydrateServerSide) {\n          return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));\n        } else {\n          renderVdom(hostRef, instance, isInitialLoad);\n        }\n      } else {\n        const shadowRoot = elm.shadowRoot;\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          shadowRoot.textContent = instance;\n        } else {\n          elm.textContent = instance;\n        }\n      }\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n  renderingRef = null;\n  return null;\n};\nvar getRenderingRef = () => renderingRef;\nvar postUpdateComponent = (hostRef) => {\n  const tagName = hostRef.$cmpMeta$.$tagName$;\n  const elm = hostRef.$hostElement$;\n  const endPostUpdate = createTime(\"postUpdate\", tagName);\n  const instance = BUILD17.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  if (BUILD17.cmpDidRender) {\n    if (BUILD17.isDev) {\n      hostRef.$flags$ |= 1024 /* devOnRender */;\n    }\n    safeCall(instance, \"componentDidRender\");\n    if (BUILD17.isDev) {\n      hostRef.$flags$ &= ~1024 /* devOnRender */;\n    }\n  }\n  emitLifecycleEvent(elm, \"componentDidRender\");\n  if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n    hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n    if (BUILD17.asyncLoading && BUILD17.cssAnnotations) {\n      addHydratedFlag(elm);\n    }\n    if (BUILD17.cmpDidLoad) {\n      if (BUILD17.isDev) {\n        hostRef.$flags$ |= 2048 /* devOnDidLoad */;\n      }\n      safeCall(instance, \"componentDidLoad\");\n      if (BUILD17.isDev) {\n        hostRef.$flags$ &= ~2048 /* devOnDidLoad */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidLoad\");\n    endPostUpdate();\n    if (BUILD17.asyncLoading) {\n      hostRef.$onReadyResolve$(elm);\n      if (!ancestorComponent) {\n        appDidLoad(tagName);\n      }\n    }\n  } else {\n    if (BUILD17.cmpDidUpdate) {\n      if (BUILD17.isDev) {\n        hostRef.$flags$ |= 1024 /* devOnRender */;\n      }\n      safeCall(instance, \"componentDidUpdate\");\n      if (BUILD17.isDev) {\n        hostRef.$flags$ &= ~1024 /* devOnRender */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidUpdate\");\n    endPostUpdate();\n  }\n  if (BUILD17.method && BUILD17.lazyLoad) {\n    hostRef.$onInstanceResolve$(elm);\n  }\n  if (BUILD17.asyncLoading) {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = void 0;\n    }\n    if (hostRef.$flags$ & 512 /* needsRerender */) {\n      nextTick(() => scheduleUpdate(hostRef, false));\n    }\n    hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n  }\n};\nvar forceUpdate = (ref) => {\n  if (BUILD17.updatable && (Build.isBrowser || Build.isTesting)) {\n    const hostRef = getHostRef(ref);\n    const isConnected = hostRef.$hostElement$.isConnected;\n    if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n      scheduleUpdate(hostRef, false);\n    }\n    return isConnected;\n  }\n  return false;\n};\nvar appDidLoad = (who) => {\n  if (BUILD17.cssAnnotations) {\n    addHydratedFlag(doc.documentElement);\n  }\n  if (BUILD17.asyncQueue) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  nextTick(() => emitEvent(win, \"appload\", { detail: { namespace: NAMESPACE } }));\n  if (BUILD17.profile && performance.measure) {\n    performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, \"st:app:start\");\n  }\n};\nvar safeCall = (instance, method, arg) => {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  return void 0;\n};\nvar emitLifecycleEvent = (elm, lifecycleName) => {\n  if (BUILD17.lifecycleDOMEvents) {\n    emitEvent(elm, \"stencil_\" + lifecycleName, {\n      bubbles: true,\n      composed: true,\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  }\n};\nvar addHydratedFlag = (elm) => {\n  var _a, _b;\n  return BUILD17.hydratedClass ? elm.classList.add((_a = BUILD17.hydratedSelectorName) != null ? _a : \"hydrated\") : BUILD17.hydratedAttribute ? elm.setAttribute((_b = BUILD17.hydratedSelectorName) != null ? _b : \"hydrated\", \"\") : void 0;\n};\nvar serverSideConnected = (elm) => {\n  const children = elm.children;\n  if (children != null) {\n    for (let i2 = 0, ii = children.length; i2 < ii; i2++) {\n      const childElm = children[i2];\n      if (typeof childElm.connectedCallback === \"function\") {\n        childElm.connectedCallback();\n      }\n      serverSideConnected(childElm);\n    }\n  }\n};\n\n// src/runtime/set-value.ts\nvar getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nvar setValue = (ref, propName, newVal, cmpMeta) => {\n  const hostRef = getHostRef(ref);\n  if (BUILD18.lazyLoad && !hostRef) {\n    throw new Error(\n      `Couldn't find host element for \"${cmpMeta.$tagName$}\" as it is unknown to this Stencil runtime. This usually happens when integrating a 3rd party Stencil component with another Stencil component or application. Please reach out to the maintainers of the 3rd party Stencil component or report this on the Stencil Discord server (https://chat.stenciljs.com) or comment on this similar [GitHub issue](https://github.com/ionic-team/stencil/issues/5457).`\n    );\n  }\n  const elm = BUILD18.lazyLoad ? hostRef.$hostElement$ : ref;\n  const oldVal = hostRef.$instanceValues$.get(propName);\n  const flags = hostRef.$flags$;\n  const instance = BUILD18.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n  const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n  const didValueChange = newVal !== oldVal && !areBothNaN;\n  if ((!BUILD18.lazyLoad || !(flags & 8 /* isConstructingInstance */) || oldVal === void 0) && didValueChange) {\n    hostRef.$instanceValues$.set(propName, newVal);\n    if (BUILD18.isDev) {\n      if (hostRef.$flags$ & 1024 /* devOnRender */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      } else if (hostRef.$flags$ & 2048 /* devOnDidLoad */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      }\n    }\n    if (!BUILD18.lazyLoad || instance) {\n      if (BUILD18.watchCallback && cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n        const watchMethods = cmpMeta.$watchers$[propName];\n        if (watchMethods) {\n          watchMethods.map((watchMethodName) => {\n            try {\n              instance[watchMethodName](newVal, oldVal, propName);\n            } catch (e) {\n              consoleError(e, elm);\n            }\n          });\n        }\n      }\n      if (BUILD18.updatable && (flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n        if (BUILD18.cmpShouldUpdate && instance.componentShouldUpdate) {\n          if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n            return;\n          }\n        }\n        scheduleUpdate(hostRef, false);\n      }\n    }\n  }\n};\n\n// src/runtime/proxy-component.ts\nvar proxyComponent = (Cstr, cmpMeta, flags) => {\n  var _a, _b;\n  const prototype = Cstr.prototype;\n  if (BUILD19.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */ && flags & 1 /* isElementConstructor */) {\n    FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS.forEach(\n      (cbName) => Object.defineProperty(prototype, cbName, {\n        value(...args) {\n          const hostRef = getHostRef(this);\n          const elm = BUILD19.lazyLoad ? hostRef.$hostElement$ : this;\n          const instance = BUILD19.lazyLoad ? hostRef.$lazyInstance$ : elm;\n          if (!instance) {\n            hostRef.$onReadyPromise$.then((instance2) => {\n              const cb = instance2[cbName];\n              typeof cb === \"function\" && cb.call(instance2, ...args);\n            });\n          } else {\n            const cb = instance[cbName];\n            typeof cb === \"function\" && cb.call(instance, ...args);\n          }\n        }\n      })\n    );\n  }\n  if (BUILD19.member && cmpMeta.$members$ || BUILD19.watchCallback && (cmpMeta.$watchers$ || Cstr.watchers)) {\n    if (BUILD19.watchCallback && Cstr.watchers && !cmpMeta.$watchers$) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    }\n    const members = Object.entries((_a = cmpMeta.$members$) != null ? _a : {});\n    members.map(([memberName, [memberFlags]]) => {\n      if ((BUILD19.prop || BUILD19.state) && (memberFlags & 31 /* Prop */ || (!BUILD19.lazyLoad || flags & 2 /* proxyState */) && memberFlags & 32 /* State */)) {\n        Object.defineProperty(prototype, memberName, {\n          get() {\n            return getValue(this, memberName);\n          },\n          set(newValue) {\n            if (BUILD19.isDev) {\n              const ref = getHostRef(this);\n              if (\n                // we are proxying the instance (not element)\n                (flags & 1 /* isElementConstructor */) === 0 && // the element is not constructing\n                (ref && ref.$flags$ & 8 /* isConstructingInstance */) === 0 && // the member is a prop\n                (memberFlags & 31 /* Prop */) !== 0 && // the member is not mutable\n                (memberFlags & 1024 /* Mutable */) === 0\n              ) {\n                consoleDevWarn(\n                  `@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\nMore information: https://stenciljs.com/docs/properties#prop-mutability`\n                );\n              }\n            }\n            setValue(this, memberName, newValue, cmpMeta);\n          },\n          configurable: true,\n          enumerable: true\n        });\n      } else if (BUILD19.lazyLoad && BUILD19.method && flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {\n        Object.defineProperty(prototype, memberName, {\n          value(...args) {\n            var _a2;\n            const ref = getHostRef(this);\n            return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null ? void 0 : _a2.then(() => {\n              var _a3;\n              return (_a3 = ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);\n            });\n          }\n        });\n      }\n    });\n    if (BUILD19.observeAttribute && (!BUILD19.lazyLoad || flags & 1 /* isElementConstructor */)) {\n      const attrNameToPropName = /* @__PURE__ */ new Map();\n      prototype.attributeChangedCallback = function(attrName, oldValue, newValue) {\n        plt.jmp(() => {\n          var _a2;\n          const propName = attrNameToPropName.get(attrName);\n          if (this.hasOwnProperty(propName)) {\n            newValue = this[propName];\n            delete this[propName];\n          } else if (prototype.hasOwnProperty(propName) && typeof this[propName] === \"number\" && this[propName] == newValue) {\n            return;\n          } else if (propName == null) {\n            const hostRef = getHostRef(this);\n            const flags2 = hostRef == null ? void 0 : hostRef.$flags$;\n            if (flags2 && !(flags2 & 8 /* isConstructingInstance */) && flags2 & 128 /* isWatchReady */ && newValue !== oldValue) {\n              const elm = BUILD19.lazyLoad ? hostRef.$hostElement$ : this;\n              const instance = BUILD19.lazyLoad ? hostRef.$lazyInstance$ : elm;\n              const entry = (_a2 = cmpMeta.$watchers$) == null ? void 0 : _a2[attrName];\n              entry == null ? void 0 : entry.forEach((callbackName) => {\n                if (instance[callbackName] != null) {\n                  instance[callbackName].call(instance, newValue, oldValue, attrName);\n                }\n              });\n            }\n            return;\n          }\n          this[propName] = newValue === null && typeof this[propName] === \"boolean\" ? false : newValue;\n        });\n      };\n      Cstr.observedAttributes = Array.from(\n        /* @__PURE__ */ new Set([\n          ...Object.keys((_b = cmpMeta.$watchers$) != null ? _b : {}),\n          ...members.filter(([_, m]) => m[0] & 15 /* HasAttribute */).map(([propName, m]) => {\n            var _a2;\n            const attrName = m[1] || propName;\n            attrNameToPropName.set(attrName, propName);\n            if (BUILD19.reflect && m[0] & 512 /* ReflectAttr */) {\n              (_a2 = cmpMeta.$attrsToReflect$) == null ? void 0 : _a2.push([propName, attrName]);\n            }\n            return attrName;\n          })\n        ])\n      );\n    }\n  }\n  return Cstr;\n};\n\n// src/runtime/initialize-component.ts\nvar initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n  let Cstr;\n  if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n    hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if ((BUILD20.lazyLoad || BUILD20.hydrateClientSide) && bundleId) {\n      const CstrImport = loadModule(cmpMeta, hostRef, hmrVersionId);\n      if (CstrImport && \"then\" in CstrImport) {\n        const endLoad = uniqueTime(\n          `st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`,\n          `[Stencil] Load module for <${cmpMeta.$tagName$}>`\n        );\n        Cstr = await CstrImport;\n        endLoad();\n      } else {\n        Cstr = CstrImport;\n      }\n      if (!Cstr) {\n        throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n      }\n      if (BUILD20.member && !Cstr.isProxied) {\n        if (BUILD20.watchCallback) {\n          cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n        Cstr.isProxied = true;\n      }\n      const endNewInstance = createTime(\"createInstance\", cmpMeta.$tagName$);\n      if (BUILD20.member) {\n        hostRef.$flags$ |= 8 /* isConstructingInstance */;\n      }\n      try {\n        new Cstr(hostRef);\n      } catch (e) {\n        consoleError(e);\n      }\n      if (BUILD20.member) {\n        hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n      }\n      if (BUILD20.watchCallback) {\n        hostRef.$flags$ |= 128 /* isWatchReady */;\n      }\n      endNewInstance();\n      fireConnectedCallback(hostRef.$lazyInstance$);\n    } else {\n      Cstr = elm.constructor;\n      const cmpTag = elm.localName;\n      customElements.whenDefined(cmpTag).then(() => hostRef.$flags$ |= 128 /* isWatchReady */);\n    }\n    if (BUILD20.style && Cstr && Cstr.style) {\n      let style;\n      if (typeof Cstr.style === \"string\") {\n        style = Cstr.style;\n      } else if (BUILD20.mode && typeof Cstr.style !== \"string\") {\n        hostRef.$modeName$ = computeMode(elm);\n        if (hostRef.$modeName$) {\n          style = Cstr.style[hostRef.$modeName$];\n        }\n        if (BUILD20.hydrateServerSide && hostRef.$modeName$) {\n          elm.setAttribute(\"s-mode\", hostRef.$modeName$);\n        }\n      }\n      const scopeId2 = getScopeId(cmpMeta, hostRef.$modeName$);\n      if (!styles.has(scopeId2)) {\n        const endRegisterStyles = createTime(\"registerStyles\", cmpMeta.$tagName$);\n        if (!BUILD20.hydrateServerSide && BUILD20.shadowDom && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        BUILD20.shadowDomShim && cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n          style = await import(\"./shadow-css.js\").then((m) => m.scopeCss(style, scopeId2, false));\n        }\n        registerStyle(scopeId2, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n        endRegisterStyles();\n      }\n    }\n  }\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  const schedule = () => scheduleUpdate(hostRef, true);\n  if (BUILD20.asyncLoading && ancestorComponent && ancestorComponent[\"s-rc\"]) {\n    ancestorComponent[\"s-rc\"].push(schedule);\n  } else {\n    schedule();\n  }\n};\nvar fireConnectedCallback = (instance) => {\n  if (BUILD20.lazyLoad && BUILD20.connectedCallback) {\n    safeCall(instance, \"connectedCallback\");\n  }\n};\n\n// src/runtime/connected-callback.ts\nvar connectedCallback = (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    const cmpMeta = hostRef.$cmpMeta$;\n    const endConnected = createTime(\"connectedCallback\", cmpMeta.$tagName$);\n    if (BUILD21.hostListenerTargetParent) {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n    }\n    if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n      hostRef.$flags$ |= 1 /* hasConnected */;\n      let hostId;\n      if (BUILD21.hydrateClientSide) {\n        hostId = elm.getAttribute(HYDRATE_ID);\n        if (hostId) {\n          if (BUILD21.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            const scopeId2 = BUILD21.mode ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute(\"s-mode\")) : addStyle(elm.shadowRoot, cmpMeta);\n            elm.classList.remove(scopeId2 + \"-h\", scopeId2 + \"-s\");\n          }\n          initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n        }\n      }\n      if (BUILD21.slotRelocation && !hostId) {\n        if (BUILD21.hydrateServerSide || (BUILD21.slot || BUILD21.shadowDom) && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        cmpMeta.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */)) {\n          setContentReference(elm);\n        }\n      }\n      if (BUILD21.asyncLoading) {\n        let ancestorComponent = elm;\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          if (BUILD21.hydrateClientSide && ancestorComponent.nodeType === 1 /* ElementNode */ && ancestorComponent.hasAttribute(\"s-id\") && ancestorComponent[\"s-p\"] || ancestorComponent[\"s-p\"]) {\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      }\n      if (BUILD21.prop && !BUILD21.hydrateServerSide && cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n          if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n            const value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n      if (BUILD21.initializeNextTick) {\n        nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n      } else {\n        initializeComponent(elm, hostRef, cmpMeta);\n      }\n    } else {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n      if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n        fireConnectedCallback(hostRef.$lazyInstance$);\n      } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n        hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));\n      }\n    }\n    endConnected();\n  }\n};\nvar setContentReference = (elm) => {\n  const contentRefElm = elm[\"s-cr\"] = doc.createComment(\n    BUILD21.isDebug ? `content-ref (host=${elm.localName})` : \"\"\n  );\n  contentRefElm[\"s-cn\"] = true;\n  insertBefore(elm, contentRefElm, elm.firstChild);\n};\n\n// src/runtime/disconnected-callback.ts\nimport { BUILD as BUILD22 } from \"@stencil/core/internal/app-data\";\nvar disconnectInstance = (instance) => {\n  if (BUILD22.lazyLoad && BUILD22.disconnectedCallback) {\n    safeCall(instance, \"disconnectedCallback\");\n  }\n  if (BUILD22.cmpDidUnload) {\n    safeCall(instance, \"componentDidUnload\");\n  }\n};\nvar disconnectedCallback = async (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    if (BUILD22.hostListener) {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map((rmListener) => rmListener());\n        hostRef.$rmListeners$ = void 0;\n      }\n    }\n    if (!BUILD22.lazyLoad) {\n      disconnectInstance(elm);\n    } else if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n      disconnectInstance(hostRef.$lazyInstance$);\n    } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n      hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$));\n    }\n  }\n};\n\n// src/runtime/dom-extras.ts\nimport { BUILD as BUILD23 } from \"@stencil/core/internal/app-data\";\nvar patchPseudoShadowDom = (hostElementPrototype, descriptorPrototype) => {\n  patchCloneNode(hostElementPrototype);\n  patchSlotAppendChild(hostElementPrototype);\n  patchSlotAppend(hostElementPrototype);\n  patchSlotPrepend(hostElementPrototype);\n  patchSlotInsertAdjacentElement(hostElementPrototype);\n  patchSlotInsertAdjacentHTML(hostElementPrototype);\n  patchSlotInsertAdjacentText(hostElementPrototype);\n  patchTextContent(hostElementPrototype);\n  patchChildSlotNodes(hostElementPrototype, descriptorPrototype);\n  patchSlotRemoveChild(hostElementPrototype);\n};\nvar patchCloneNode = (HostElementPrototype) => {\n  const orgCloneNode = HostElementPrototype.cloneNode;\n  HostElementPrototype.cloneNode = function(deep) {\n    const srcNode = this;\n    const isShadowDom = BUILD23.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n    const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n    if (BUILD23.slot && !isShadowDom && deep) {\n      let i2 = 0;\n      let slotted, nonStencilNode;\n      const stencilPrivates = [\n        \"s-id\",\n        \"s-cr\",\n        \"s-lr\",\n        \"s-rc\",\n        \"s-sc\",\n        \"s-p\",\n        \"s-cn\",\n        \"s-sr\",\n        \"s-sn\",\n        \"s-hn\",\n        \"s-ol\",\n        \"s-nr\",\n        \"s-si\",\n        \"s-rf\",\n        \"s-scs\"\n      ];\n      for (; i2 < srcNode.childNodes.length; i2++) {\n        slotted = srcNode.childNodes[i2][\"s-nr\"];\n        nonStencilNode = stencilPrivates.every((privateField) => !srcNode.childNodes[i2][privateField]);\n        if (slotted) {\n          if (BUILD23.appendChildSlotFix && clonedNode.__appendChild) {\n            clonedNode.__appendChild(slotted.cloneNode(true));\n          } else {\n            clonedNode.appendChild(slotted.cloneNode(true));\n          }\n        }\n        if (nonStencilNode) {\n          clonedNode.appendChild(srcNode.childNodes[i2].cloneNode(true));\n        }\n      }\n    }\n    return clonedNode;\n  };\n};\nvar patchSlotAppendChild = (HostElementPrototype) => {\n  HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n  HostElementPrototype.appendChild = function(newChild) {\n    const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n    const slotNode = getHostSlotNode(this.childNodes, slotName, this.tagName);\n    if (slotNode) {\n      const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n      const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n      const insertedNode = insertBefore(appendAfter.parentNode, newChild, appendAfter.nextSibling);\n      updateFallbackSlotVisibility(this);\n      return insertedNode;\n    }\n    return this.__appendChild(newChild);\n  };\n};\nvar patchSlotRemoveChild = (ElementPrototype) => {\n  ElementPrototype.__removeChild = ElementPrototype.removeChild;\n  ElementPrototype.removeChild = function(toRemove) {\n    if (toRemove && typeof toRemove[\"s-sn\"] !== \"undefined\") {\n      const slotNode = getHostSlotNode(this.childNodes, toRemove[\"s-sn\"], this.tagName);\n      if (slotNode) {\n        const slotChildNodes = getHostSlotChildNodes(slotNode, toRemove[\"s-sn\"]);\n        const existingNode = slotChildNodes.find((n) => n === toRemove);\n        if (existingNode) {\n          existingNode.remove();\n          updateFallbackSlotVisibility(this);\n          return;\n        }\n      }\n    }\n    return this.__removeChild(toRemove);\n  };\n};\nvar patchSlotPrepend = (HostElementPrototype) => {\n  const originalPrepend = HostElementPrototype.prepend;\n  HostElementPrototype.prepend = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n      const slotNode = getHostSlotNode(this.childNodes, slotName, this.tagName);\n      if (slotNode) {\n        const slotPlaceholder = document.createTextNode(\"\");\n        slotPlaceholder[\"s-nr\"] = newChild;\n        slotNode[\"s-cr\"].parentNode.__appendChild(slotPlaceholder);\n        newChild[\"s-ol\"] = slotPlaceholder;\n        const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n        const appendAfter = slotChildNodes[0];\n        return insertBefore(appendAfter.parentNode, newChild, appendAfter.nextSibling);\n      }\n      if (newChild.nodeType === 1 && !!newChild.getAttribute(\"slot\")) {\n        newChild.hidden = true;\n      }\n      return originalPrepend.call(this, newChild);\n    });\n  };\n};\nvar patchSlotAppend = (HostElementPrototype) => {\n  HostElementPrototype.append = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      this.appendChild(newChild);\n    });\n  };\n};\nvar patchSlotInsertAdjacentHTML = (HostElementPrototype) => {\n  const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;\n  HostElementPrototype.insertAdjacentHTML = function(position, text) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentHtml.call(this, position, text);\n    }\n    const container = this.ownerDocument.createElement(\"_\");\n    let node;\n    container.innerHTML = text;\n    if (position === \"afterbegin\") {\n      while (node = container.firstChild) {\n        this.prepend(node);\n      }\n    } else if (position === \"beforeend\") {\n      while (node = container.firstChild) {\n        this.append(node);\n      }\n    }\n  };\n};\nvar patchSlotInsertAdjacentText = (HostElementPrototype) => {\n  HostElementPrototype.insertAdjacentText = function(position, text) {\n    this.insertAdjacentHTML(position, text);\n  };\n};\nvar patchSlotInsertAdjacentElement = (HostElementPrototype) => {\n  const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;\n  HostElementPrototype.insertAdjacentElement = function(position, element) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentElement.call(this, position, element);\n    }\n    if (position === \"afterbegin\") {\n      this.prepend(element);\n      return element;\n    } else if (position === \"beforeend\") {\n      this.append(element);\n      return element;\n    }\n    return element;\n  };\n};\nvar patchTextContent = (hostElementPrototype) => {\n  const descriptor = Object.getOwnPropertyDescriptor(Node.prototype, \"textContent\");\n  Object.defineProperty(hostElementPrototype, \"__textContent\", descriptor);\n  if (BUILD23.experimentalScopedSlotChanges) {\n    Object.defineProperty(hostElementPrototype, \"textContent\", {\n      // To mimic shadow root behavior, we need to return the text content of all\n      // nodes in a slot reference node\n      get() {\n        const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n        const textContent = slotRefNodes.map((node) => {\n          var _a, _b;\n          const text = [];\n          let slotContent = node.nextSibling;\n          while (slotContent && slotContent[\"s-sn\"] === node[\"s-sn\"]) {\n            if (slotContent.nodeType === 3 /* TEXT_NODE */ || slotContent.nodeType === 1 /* ELEMENT_NODE */) {\n              text.push((_b = (_a = slotContent.textContent) == null ? void 0 : _a.trim()) != null ? _b : \"\");\n            }\n            slotContent = slotContent.nextSibling;\n          }\n          return text.filter((ref) => ref !== \"\").join(\" \");\n        }).filter((text) => text !== \"\").join(\" \");\n        return \" \" + textContent + \" \";\n      },\n      // To mimic shadow root behavior, we need to overwrite all nodes in a slot\n      // reference node. If a default slot reference node exists, the text content will be\n      // placed there. Otherwise, the new text node will be hidden\n      set(value) {\n        const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n        slotRefNodes.forEach((node) => {\n          let slotContent = node.nextSibling;\n          while (slotContent && slotContent[\"s-sn\"] === node[\"s-sn\"]) {\n            const tmp = slotContent;\n            slotContent = slotContent.nextSibling;\n            tmp.remove();\n          }\n          if (node[\"s-sn\"] === \"\") {\n            const textNode = this.ownerDocument.createTextNode(value);\n            textNode[\"s-sn\"] = \"\";\n            insertBefore(node.parentElement, textNode, node.nextSibling);\n          } else {\n            node.remove();\n          }\n        });\n      }\n    });\n  } else {\n    Object.defineProperty(hostElementPrototype, \"textContent\", {\n      get() {\n        var _a;\n        const slotNode = getHostSlotNode(this.childNodes, \"\", this.tagName);\n        if (((_a = slotNode == null ? void 0 : slotNode.nextSibling) == null ? void 0 : _a.nodeType) === 3 /* TEXT_NODE */) {\n          return slotNode.nextSibling.textContent;\n        } else if (slotNode) {\n          return slotNode.textContent;\n        } else {\n          return this.__textContent;\n        }\n      },\n      set(value) {\n        var _a;\n        const slotNode = getHostSlotNode(this.childNodes, \"\", this.tagName);\n        if (((_a = slotNode == null ? void 0 : slotNode.nextSibling) == null ? void 0 : _a.nodeType) === 3 /* TEXT_NODE */) {\n          slotNode.nextSibling.textContent = value;\n        } else if (slotNode) {\n          slotNode.textContent = value;\n        } else {\n          this.__textContent = value;\n          const contentRefElm = this[\"s-cr\"];\n          if (contentRefElm) {\n            insertBefore(this, contentRefElm, this.firstChild);\n          }\n        }\n      }\n    });\n  }\n};\nvar patchChildSlotNodes = (elm, cmpMeta) => {\n  class FakeNodeList extends Array {\n    item(n) {\n      return this[n];\n    }\n  }\n  if (cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n    const childNodesFn = elm.__lookupGetter__(\"childNodes\");\n    Object.defineProperty(elm, \"children\", {\n      get() {\n        return this.childNodes.map((n) => n.nodeType === 1);\n      }\n    });\n    Object.defineProperty(elm, \"childElementCount\", {\n      get() {\n        return elm.children.length;\n      }\n    });\n    Object.defineProperty(elm, \"childNodes\", {\n      get() {\n        const childNodes = childNodesFn.call(this);\n        if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0 && getHostRef(this).$flags$ & 2 /* hasRendered */) {\n          const result = new FakeNodeList();\n          for (let i2 = 0; i2 < childNodes.length; i2++) {\n            const slot = childNodes[i2][\"s-nr\"];\n            if (slot) {\n              result.push(slot);\n            }\n          }\n          return result;\n        }\n        return FakeNodeList.from(childNodes);\n      }\n    });\n  }\n};\nvar getAllChildSlotNodes = (childNodes) => {\n  const slotRefNodes = [];\n  for (const childNode of Array.from(childNodes)) {\n    if (childNode[\"s-sr\"]) {\n      slotRefNodes.push(childNode);\n    }\n    slotRefNodes.push(...getAllChildSlotNodes(childNode.childNodes));\n  }\n  return slotRefNodes;\n};\nvar getSlotName = (node) => node[\"s-sn\"] || node.nodeType === 1 && node.getAttribute(\"slot\") || \"\";\nvar getHostSlotNode = (childNodes, slotName, hostName) => {\n  let i2 = 0;\n  let childNode;\n  for (; i2 < childNodes.length; i2++) {\n    childNode = childNodes[i2];\n    if (childNode[\"s-sr\"] && childNode[\"s-sn\"] === slotName && childNode[\"s-hn\"] === hostName) {\n      return childNode;\n    }\n    childNode = getHostSlotNode(childNode.childNodes, slotName, hostName);\n    if (childNode) {\n      return childNode;\n    }\n  }\n  return null;\n};\nvar getHostSlotChildNodes = (n, slotName) => {\n  const childNodes = [n];\n  while ((n = n.nextSibling) && n[\"s-sn\"] === slotName) {\n    childNodes.push(n);\n  }\n  return childNodes;\n};\n\n// src/runtime/bootstrap-custom-element.ts\nvar defineCustomElement = (Cstr, compactMeta) => {\n  customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nvar proxyCustomElement = (Cstr, compactMeta) => {\n  const cmpMeta = {\n    $flags$: compactMeta[0],\n    $tagName$: compactMeta[1]\n  };\n  if (BUILD24.member) {\n    cmpMeta.$members$ = compactMeta[2];\n  }\n  if (BUILD24.hostListener) {\n    cmpMeta.$listeners$ = compactMeta[3];\n  }\n  if (BUILD24.watchCallback) {\n    cmpMeta.$watchers$ = Cstr.$watchers$;\n  }\n  if (BUILD24.reflect) {\n    cmpMeta.$attrsToReflect$ = [];\n  }\n  if (BUILD24.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n    cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n  }\n  if (BUILD24.experimentalSlotFixes) {\n    if (BUILD24.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchPseudoShadowDom(Cstr.prototype, cmpMeta);\n    }\n  } else {\n    if (BUILD24.slotChildNodesFix) {\n      patchChildSlotNodes(Cstr.prototype, cmpMeta);\n    }\n    if (BUILD24.cloneNodeFix) {\n      patchCloneNode(Cstr.prototype);\n    }\n    if (BUILD24.appendChildSlotFix) {\n      patchSlotAppendChild(Cstr.prototype);\n    }\n    if (BUILD24.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchTextContent(Cstr.prototype);\n    }\n  }\n  const originalConnectedCallback = Cstr.prototype.connectedCallback;\n  const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n  Object.assign(Cstr.prototype, {\n    __registerHost() {\n      registerHost(this, cmpMeta);\n    },\n    connectedCallback() {\n      const hostRef = getHostRef(this);\n      addHostEventListeners(this, hostRef, cmpMeta.$listeners$, false);\n      connectedCallback(this);\n      if (BUILD24.connectedCallback && originalConnectedCallback) {\n        originalConnectedCallback.call(this);\n      }\n    },\n    disconnectedCallback() {\n      disconnectedCallback(this);\n      if (BUILD24.disconnectedCallback && originalDisconnectedCallback) {\n        originalDisconnectedCallback.call(this);\n      }\n    },\n    __attachShadow() {\n      if (supportsShadow) {\n        if (!this.shadowRoot) {\n          if (BUILD24.shadowDelegatesFocus) {\n            this.attachShadow({\n              mode: \"open\",\n              delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n            });\n          } else {\n            this.attachShadow({ mode: \"open\" });\n          }\n        } else {\n          if (this.shadowRoot.mode !== \"open\") {\n            throw new Error(\n              `Unable to re-use existing shadow root for ${cmpMeta.$tagName$}! Mode is set to ${this.shadowRoot.mode} but Stencil only supports open shadow roots.`\n            );\n          }\n        }\n      } else {\n        this.shadowRoot = this;\n      }\n    }\n  });\n  Cstr.is = cmpMeta.$tagName$;\n  return proxyComponent(Cstr, cmpMeta, 1 /* isElementConstructor */ | 2 /* proxyState */);\n};\nvar forceModeUpdate = (elm) => {\n  if (BUILD24.style && BUILD24.mode && !BUILD24.lazyLoad) {\n    const mode = computeMode(elm);\n    const hostRef = getHostRef(elm);\n    if (hostRef.$modeName$ !== mode) {\n      const cmpMeta = hostRef.$cmpMeta$;\n      const oldScopeId = elm[\"s-sc\"];\n      const scopeId2 = getScopeId(cmpMeta, mode);\n      const style = elm.constructor.style[mode];\n      const flags = cmpMeta.$flags$;\n      if (style) {\n        if (!styles.has(scopeId2)) {\n          registerStyle(scopeId2, style, !!(flags & 1 /* shadowDomEncapsulation */));\n        }\n        hostRef.$modeName$ = mode;\n        elm.classList.remove(oldScopeId + \"-h\", oldScopeId + \"-s\");\n        attachStyles(hostRef);\n        forceUpdate(elm);\n      }\n    }\n  }\n};\n\n// src/runtime/bootstrap-lazy.ts\nimport { BUILD as BUILD25 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/hmr-component.ts\nvar hmrStart = (hostElement, cmpMeta, hmrVersionId) => {\n  const hostRef = getHostRef(hostElement);\n  hostRef.$flags$ = 1 /* hasConnected */;\n  initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);\n};\n\n// src/runtime/bootstrap-lazy.ts\nvar bootstrapLazy = (lazyBundles, options = {}) => {\n  var _a;\n  if (BUILD25.profile && performance.mark) {\n    performance.mark(\"st:app:start\");\n  }\n  installDevTools();\n  const endBootstrap = createTime(\"bootstrapLazy\");\n  const cmpTags = [];\n  const exclude = options.exclude || [];\n  const customElements2 = win.customElements;\n  const head = doc.head;\n  const metaCharset = /* @__PURE__ */ head.querySelector(\"meta[charset]\");\n  const dataStyles = /* @__PURE__ */ doc.createElement(\"style\");\n  const deferredConnectedCallbacks = [];\n  const styles2 = /* @__PURE__ */ doc.querySelectorAll(`[${HYDRATED_STYLE_ID}]`);\n  let appLoadFallback;\n  let isBootstrapping = true;\n  let i2 = 0;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || \"./\", doc.baseURI).href;\n  if (BUILD25.asyncQueue) {\n    if (options.syncQueue) {\n      plt.$flags$ |= 4 /* queueSync */;\n    }\n  }\n  if (BUILD25.hydrateClientSide) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  if (BUILD25.hydrateClientSide && BUILD25.shadowDom) {\n    for (; i2 < styles2.length; i2++) {\n      registerStyle(styles2[i2].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles2[i2].innerHTML), true);\n    }\n  }\n  let hasSlotRelocation = false;\n  lazyBundles.map((lazyBundle) => {\n    lazyBundle[1].map((compactMeta) => {\n      var _a2;\n      const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n        hasSlotRelocation = true;\n      }\n      if (BUILD25.member) {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      if (BUILD25.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      if (BUILD25.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n      }\n      if (BUILD25.watchCallback) {\n        cmpMeta.$watchers$ = (_a2 = compactMeta[4]) != null ? _a2 : {};\n      }\n      if (BUILD25.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n        cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n      }\n      const tagName = BUILD25.transformTagName && options.transformTagName ? options.transformTagName(cmpMeta.$tagName$) : cmpMeta.$tagName$;\n      const HostElement = class extends HTMLElement {\n        // StencilLazyHost\n        constructor(self) {\n          super(self);\n          this.hasRegisteredEventListeners = false;\n          self = this;\n          registerHost(self, cmpMeta);\n          if (BUILD25.shadowDom && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            if (supportsShadow) {\n                            //========= PDS PATCH START\n                            let ssrInnerHTML = '';\n                            if (self.shadowRoot) {\n                              ssrInnerHTML = self.shadowRoot.innerHTML;\n                              self.hasDSR = true;\n                            }\n                            //========= PDS PATCH END\n\n              if (!self.shadowRoot) {\n                if (BUILD25.shadowDelegatesFocus) {\n                                //========= PDS PATCH START\n                                // in dsr ponyfilled browsers (e.g. Safari), the shadowRoot is already attached\n                                // and a 2nd attempt fails, therefore this needs to always run without SSR\n                                // and only with SSR for browsers that are not ponyfilled\n                                if (!self.hasDSR || HTMLTemplateElement.prototype.hasOwnProperty('shadowRoot')) {\n                                //========= PDS PATCH END\n\n                  self.attachShadow({\n                    mode: \"open\",\n                    delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n                  });\n\n                                //========= PDS PATCH START\n                                    self.shadowRoot.innerHTML = ssrInnerHTML;\n                                }\n                                //========= PDS PATCH END\n\n                } else {\n                  self.attachShadow({ mode: \"open\" });\n                }\n              } else {\n                if (self.shadowRoot.mode !== \"open\") {\n                  throw new Error(\n                    `Unable to re-use existing shadow root for ${cmpMeta.$tagName$}! Mode is set to ${self.shadowRoot.mode} but Stencil only supports open shadow roots.`\n                  );\n                }\n              }\n            } else if (!BUILD25.hydrateServerSide && !(\"shadowRoot\" in self)) {\n              self.shadowRoot = self;\n            }\n          }\n        }\n        connectedCallback() {\n          const hostRef = getHostRef(this);\n          if (!this.hasRegisteredEventListeners) {\n            this.hasRegisteredEventListeners = true;\n            addHostEventListeners(this, hostRef, cmpMeta.$listeners$, false);\n          }\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n          if (isBootstrapping) {\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(() => connectedCallback(this));\n          }\n        }\n        disconnectedCallback() {\n          plt.jmp(() => disconnectedCallback(this));\n        }\n        componentOnReady() {\n          return getHostRef(this).$onReadyPromise$;\n        }\n      };\n      if (BUILD25.experimentalSlotFixes) {\n        if (BUILD25.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchPseudoShadowDom(HostElement.prototype, cmpMeta);\n        }\n      } else {\n        if (BUILD25.slotChildNodesFix) {\n          patchChildSlotNodes(HostElement.prototype, cmpMeta);\n        }\n        if (BUILD25.cloneNodeFix) {\n          patchCloneNode(HostElement.prototype);\n        }\n        if (BUILD25.appendChildSlotFix) {\n          patchSlotAppendChild(HostElement.prototype);\n        }\n        if (BUILD25.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchTextContent(HostElement.prototype);\n        }\n      }\n      if (BUILD25.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */) {\n        HostElement.formAssociated = true;\n      }\n      if (BUILD25.hotModuleReplacement) {\n        HostElement.prototype[\"s-hmr\"] = function(hmrVersionId) {\n          hmrStart(this, cmpMeta, hmrVersionId);\n        };\n      }\n      cmpMeta.$lazyBundleId$ = lazyBundle[0];\n      if (!exclude.includes(tagName) && !customElements2.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements2.define(\n          tagName,\n          proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */)\n        );\n      }\n    });\n  });\n  if (cmpTags.length > 0) {\n    if (hasSlotRelocation) {\n      dataStyles.textContent += SLOT_FB_CSS;\n    }\n    if (BUILD25.invisiblePrehydration && (BUILD25.hydratedClass || BUILD25.hydratedAttribute)) {\n      dataStyles.textContent += cmpTags.sort() + HYDRATED_CSS;\n    }\n    if (dataStyles.innerHTML.length) {\n      dataStyles.setAttribute(\"data-styles\", \"\");\n      const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n      if (nonce != null) {\n        dataStyles.setAttribute(\"nonce\", nonce);\n      }\n      head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n  }\n  isBootstrapping = false;\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map((host) => host.connectedCallback());\n  } else {\n    if (BUILD25.profile) {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30, \"timeout\"));\n    } else {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30));\n    }\n  }\n  endBootstrap();\n};\n\n// src/runtime/fragment.ts\nvar Fragment = (_, children) => children;\n\n// src/runtime/host-listener.ts\nimport { BUILD as BUILD26 } from \"@stencil/core/internal/app-data\";\nvar addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n  if (BUILD26.hostListener && listeners) {\n    if (BUILD26.hostListenerTargetParent) {\n      if (attachParentListeners) {\n        listeners = listeners.filter(([flags]) => flags & 32 /* TargetParent */);\n      } else {\n        listeners = listeners.filter(([flags]) => !(flags & 32 /* TargetParent */));\n      }\n    }\n    listeners.map(([flags, name, method]) => {\n      const target = BUILD26.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n      const handler = hostListenerProxy(hostRef, method);\n      const opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n    });\n  }\n};\nvar hostListenerProxy = (hostRef, methodName) => (ev) => {\n  var _a;\n  try {\n    if (BUILD26.lazyLoad) {\n      if (hostRef.$flags$ & 256 /* isListenReady */) {\n        (_a = hostRef.$lazyInstance$) == null ? void 0 : _a[methodName](ev);\n      } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    } else {\n      hostRef.$hostElement$[methodName](ev);\n    }\n  } catch (e) {\n    consoleError(e);\n  }\n};\nvar getHostListenerTarget = (elm, flags) => {\n  if (BUILD26.hostListenerTargetDocument && flags & 4 /* TargetDocument */) return doc;\n  if (BUILD26.hostListenerTargetWindow && flags & 8 /* TargetWindow */) return win;\n  if (BUILD26.hostListenerTargetBody && flags & 16 /* TargetBody */) return doc.body;\n  if (BUILD26.hostListenerTargetParent && flags & 32 /* TargetParent */ && elm.parentElement)\n    return elm.parentElement;\n  return elm;\n};\nvar hostListenerOpts = (flags) => supportsListenerOptions ? {\n  passive: (flags & 1 /* Passive */) !== 0,\n  capture: (flags & 2 /* Capture */) !== 0\n} : (flags & 2 /* Capture */) !== 0;\n\n// src/runtime/nonce.ts\nvar setNonce = (nonce) => plt.$nonce$ = nonce;\n\n// src/runtime/platform-options.ts\nvar setPlatformOptions = (opts) => Object.assign(plt, opts);\n\n// src/runtime/vdom/vdom-annotations.ts\nvar insertVdomAnnotations = (doc2, staticComponents) => {\n  if (doc2 != null) {\n    const docData = {\n      hostIds: 0,\n      rootLevelIds: 0,\n      staticComponents: new Set(staticComponents)\n    };\n    const orgLocationNodes = [];\n    parseVNodeAnnotations(doc2, doc2.body, docData, orgLocationNodes);\n    orgLocationNodes.forEach((orgLocationNode) => {\n      var _a;\n      if (orgLocationNode != null && orgLocationNode[\"s-nr\"]) {\n        const nodeRef = orgLocationNode[\"s-nr\"];\n        let hostId = nodeRef[\"s-host-id\"];\n        let nodeId = nodeRef[\"s-node-id\"];\n        let childId = `${hostId}.${nodeId}`;\n        if (hostId == null) {\n          hostId = 0;\n          docData.rootLevelIds++;\n          nodeId = docData.rootLevelIds;\n          childId = `${hostId}.${nodeId}`;\n          if (nodeRef.nodeType === 1 /* ElementNode */) {\n            nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n          } else if (nodeRef.nodeType === 3 /* TextNode */) {\n            if (hostId === 0) {\n              const textContent = (_a = nodeRef.nodeValue) == null ? void 0 : _a.trim();\n              if (textContent === \"\") {\n                orgLocationNode.remove();\n                return;\n              }\n            }\n            const commentBeforeTextNode = doc2.createComment(childId);\n            commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n            insertBefore(nodeRef.parentNode, commentBeforeTextNode, nodeRef);\n          }\n        }\n        let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n        const orgLocationParentNode = orgLocationNode.parentElement;\n        if (orgLocationParentNode) {\n          if (orgLocationParentNode[\"s-en\"] === \"\") {\n            orgLocationNodeId += `.`;\n          } else if (orgLocationParentNode[\"s-en\"] === \"c\") {\n            orgLocationNodeId += `.c`;\n          }\n        }\n        orgLocationNode.nodeValue = orgLocationNodeId;\n      }\n    });\n  }\n};\nvar parseVNodeAnnotations = (doc2, node, docData, orgLocationNodes) => {\n  var _a;\n  if (node == null) {\n    return;\n  }\n  if (node[\"s-nr\"] != null) {\n    orgLocationNodes.push(node);\n  }\n  if (node.nodeType === 1 /* ElementNode */) {\n    const childNodes = [...Array.from(node.childNodes), ...Array.from(((_a = node.shadowRoot) == null ? void 0 : _a.childNodes) || [])];\n    childNodes.forEach((childNode) => {\n      const hostRef = getHostRef(childNode);\n      if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n        const cmpData = {\n          nodeIds: 0\n        };\n        insertVNodeAnnotations(doc2, childNode, hostRef.$vnode$, docData, cmpData);\n      }\n      parseVNodeAnnotations(doc2, childNode, docData, orgLocationNodes);\n    });\n  }\n};\nvar insertVNodeAnnotations = (doc2, hostElm, vnode, docData, cmpData) => {\n  if (vnode != null) {\n    const hostId = ++docData.hostIds;\n    hostElm.setAttribute(HYDRATE_ID, hostId);\n    if (hostElm[\"s-cr\"] != null) {\n      hostElm[\"s-cr\"].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n    }\n    if (vnode.$children$ != null) {\n      const depth = 0;\n      vnode.$children$.forEach((vnodeChild, index) => {\n        insertChildVNodeAnnotations(doc2, vnodeChild, cmpData, hostId, depth, index);\n      });\n    }\n    if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute(HYDRATE_CHILD_ID)) {\n      const parent = hostElm.parentElement;\n      if (parent && parent.childNodes) {\n        const parentChildNodes = Array.from(parent.childNodes);\n        const comment = parentChildNodes.find(\n          (node) => node.nodeType === 8 /* CommentNode */ && node[\"s-sr\"]\n        );\n        if (comment) {\n          const index = parentChildNodes.indexOf(hostElm) - 1;\n          vnode.$elm$.setAttribute(\n            HYDRATE_CHILD_ID,\n            `${comment[\"s-host-id\"]}.${comment[\"s-node-id\"]}.0.${index}`\n          );\n        }\n      }\n    }\n  }\n};\nvar insertChildVNodeAnnotations = (doc2, vnodeChild, cmpData, hostId, depth, index) => {\n  const childElm = vnodeChild.$elm$;\n  if (childElm == null) {\n    return;\n  }\n  const nodeId = cmpData.nodeIds++;\n  const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n  childElm[\"s-host-id\"] = hostId;\n  childElm[\"s-node-id\"] = nodeId;\n  if (childElm.nodeType === 1 /* ElementNode */) {\n    childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n  } else if (childElm.nodeType === 3 /* TextNode */) {\n    const parentNode = childElm.parentNode;\n    const nodeName = parentNode == null ? void 0 : parentNode.nodeName;\n    if (nodeName !== \"STYLE\" && nodeName !== \"SCRIPT\") {\n      const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n      const commentBeforeTextNode = doc2.createComment(textNodeId);\n      insertBefore(parentNode, commentBeforeTextNode, childElm);\n    }\n  } else if (childElm.nodeType === 8 /* CommentNode */) {\n    if (childElm[\"s-sr\"]) {\n      const slotName = childElm[\"s-sn\"] || \"\";\n      const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n      childElm.nodeValue = slotNodeId;\n    }\n  }\n  if (vnodeChild.$children$ != null) {\n    const childDepth = depth + 1;\n    vnodeChild.$children$.forEach((vnode, index2) => {\n      insertChildVNodeAnnotations(doc2, vnode, cmpData, hostId, childDepth, index2);\n    });\n  }\n};\nexport {\n  BUILD27 as BUILD,\n  Build,\n  Env,\n  Fragment,\n  H,\n  H as HTMLElement,\n  Host,\n  NAMESPACE2 as NAMESPACE,\n  STENCIL_DEV_MODE,\n  addHostEventListeners,\n  bootstrapLazy,\n  cmpModules,\n  connectedCallback,\n  consoleDevError,\n  consoleDevInfo,\n  consoleDevWarn,\n  consoleError,\n  createEvent,\n  defineCustomElement,\n  disconnectedCallback,\n  doc,\n  forceModeUpdate,\n  forceUpdate,\n  getAssetPath,\n  getElement,\n  getHostRef,\n  getMode,\n  getRenderingRef,\n  getValue,\n  h,\n  insertVdomAnnotations,\n  isMemberInElement,\n  loadModule,\n  modeResolutionChain,\n  nextTick,\n  parsePropertyValue,\n  plt,\n  postUpdateComponent,\n  promiseResolve,\n  proxyComponent,\n  proxyCustomElement,\n  readTask,\n  registerHost,\n  registerInstance,\n  renderVdom,\n  setAssetPath,\n  setErrorHandler,\n  setMode,\n  setNonce,\n  setPlatformHelpers,\n  setPlatformOptions,\n  setValue,\n  styles,\n  supportsConstructableStylesheets,\n  supportsListenerOptions,\n  supportsShadow,\n  win,\n  writeTask\n};\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar $TypeError = TypeError;\n\nvar REDUCE_EMPTY = 'Reduce of empty array with no initial value';\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = lengthOfArrayLike(O);\n    aCallable(callbackfn);\n    if (length === 0 && argumentsLength < 2) throw new $TypeError(REDUCE_EMPTY);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw new $TypeError(REDUCE_EMPTY);\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","const motionDurationShort = '0.25s';\n\nexport { motionDurationShort };\n","const backdropFilter = 'blur(32px)';\nconst frostedGlassStyle = {\n    WebkitBackdropFilter: backdropFilter,\n    backdropFilter,\n};\n\nexport { frostedGlassStyle };\n","export const TEXT_SIZES = ['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'inherit'] as const;\nexport type TextSize = (typeof TEXT_SIZES)[number];\n","import type { Theme } from '@porsche-design-system/styles';\nimport { isThemeDark, isHighContrastMode } from '../utils';\n\ntype ThemedColor =\n  | 'primaryColor'\n  | 'primaryColorDarken'\n  | 'backgroundColor'\n  | 'backgroundColorDarken'\n  | 'backgroundColorLighten'\n  | 'backgroundSurfaceColor'\n  | 'backgroundSurfaceColorDarken'\n  | 'backgroundSurfaceColorLighten'\n  | 'backgroundShadingColor'\n  | 'backgroundFrostedColor'\n  | 'contrastLowColor'\n  | 'contrastMediumColor'\n  | 'contrastHighColor'\n  | 'contrastHighColorDarken'\n  | 'contrastHighColorLighten'\n  | 'hoverColor'\n  | 'hoverColorDarken'\n  | 'activeColor'\n  | 'focusColor'\n  | 'disabledColor'\n  | 'errorColor'\n  | 'errorColorDarken'\n  | 'errorSoftColor'\n  | 'errorSoftColorDarken'\n  | 'errorSoftColorLighten'\n  | 'successColor'\n  | 'successColorDarken'\n  | 'successSoftColor'\n  | 'successSoftColorDarken'\n  | 'successSoftColorLighten'\n  | 'warningColor'\n  | 'warningSoftColor'\n  | 'warningSoftColorDarken'\n  | 'warningSoftColorLighten'\n  | 'infoColor'\n  | 'infoSoftColor'\n  | 'infoSoftColorDarken'\n  | 'infoSoftColorLighten';\n\nexport type ThemedColors = { [key in ThemedColor]: string };\n\n/* Auto Generated Start */\nconst themeLight = {\n  primaryColor: '#010205',\n  primaryColorDarken: '#000000',\n  backgroundColor: '#FFF',\n  backgroundColorDarken: '#E0E0E0',\n  backgroundColorLighten: '#FFFFFF',\n  backgroundSurfaceColor: '#EEEFF2',\n  backgroundSurfaceColorDarken: '#CBCED7',\n  backgroundSurfaceColorLighten: '#FFFFFF',\n  backgroundShadingColor: 'rgba(1, 2, 5, 0.67)',\n  backgroundFrostedColor: 'hsl(240 4% 85%/35%)',\n  contrastLowColor: '#D8D8DB',\n  contrastMediumColor: '#6B6D70',\n  contrastHighColor: '#535457',\n  contrastHighColorDarken: '#353638',\n  contrastHighColorLighten: '#717276',\n  hoverColor: 'rgba(148, 149, 152, .18)',\n  hoverColorDarken: '#75767A',\n  activeColor: 'rgba(148, 149, 152, 0.20)',\n  focusColor: '#1A44EA',\n  disabledColor: '#949598',\n  errorColor: '#CC1922',\n  errorColorDarken: '#951219',\n  errorSoftColor: '#FFE2E4',\n  errorSoftColorDarken: '#F4CED1',\n  errorSoftColorLighten: '#FFFFFF',\n  successColor: '#197E10',\n  successColorDarken: '#0E4809',\n  successSoftColor: '#E4FFEC',\n  successSoftColorDarken: '#D0F4DB',\n  successSoftColorLighten: '#FFFFFF',\n  warningColor: '#F3BE00',\n  warningSoftColor: '#FFF4D2',\n  warningSoftColorDarken: '#F1E5C1',\n  warningSoftColorLighten: '#FCFAF3',\n  infoColor: '#2762EC',\n  infoSoftColor: '#D3E1FF',\n  infoSoftColorDarken: '#C2D1F1',\n  infoSoftColorLighten: '#F4F7FD'\n};\n\nconst themeDark = {\n  primaryColor: '#FBFCFF',\n  primaryColorDarken: '#BECEFF',\n  backgroundColor: '#0E0E12',\n  backgroundColorDarken: '#000000',\n  backgroundColorLighten: '#292934',\n  backgroundSurfaceColor: '#212225',\n  backgroundSurfaceColorDarken: '#040405',\n  backgroundSurfaceColorLighten: '#3E4045',\n  backgroundShadingColor: 'rgba(38, 38, 41, 0.67)',\n  backgroundFrostedColor: 'hsl(240 3% 26%/35%)',\n  contrastLowColor: '#404044',\n  contrastMediumColor: '#88898C',\n  contrastHighColor: '#AFB0B3',\n  contrastHighColorDarken: '#909195',\n  contrastHighColorLighten: '#CECFD1',\n  hoverColor: 'rgba(148, 149, 152, .18)',\n  hoverColorDarken: '#75767A',\n  activeColor: 'rgba(126, 127, 130, 0.20)',\n  focusColor: '#1A44EA',\n  disabledColor: '#7E7F82',\n  errorColor: '#FC4040',\n  errorColorDarken: '#FB0404',\n  errorSoftColor: '#3A0F0F',\n  errorSoftColorDarken: '#1A1111',\n  errorSoftColorLighten: '#3F2828',\n  successColor: '#09D087',\n  successColorDarken: '#069561',\n  successSoftColor: '#003320',\n  successSoftColorDarken: '#04110C',\n  successSoftColorLighten: '#0F432F',\n  warningColor: '#F7CB47',\n  warningSoftColor: '#362B0A',\n  warningSoftColorDarken: '#16130B',\n  warningSoftColorLighten: '#3E3720',\n  infoColor: '#178BFF',\n  infoSoftColor: '#04294E',\n  infoSoftColorDarken: '#0C1A27',\n  infoSoftColorLighten: '#1A3856'\n};\n\nconst themeAuto = {\n  ...themeLight,};\n\nconst themes = {\n  'light': themeLight,\n  'dark': themeDark,\n  'auto': themeAuto\n};\n/* Auto Generated End */\n\nconst schemeHighContrastMerged: Partial<ThemedColors> = {\n  disabledColor: 'GrayText',\n  focusColor: 'Highlight',\n};\n\ntype HighContrastColor = 'canvasColor' | 'canvasTextColor' | 'highlightColor' | 'linkColor';\n\nexport type HighContrastColors = { [key in HighContrastColor]: string };\n\nconst schemeHighContrast: HighContrastColors = {\n  canvasColor: 'Canvas',\n  canvasTextColor: 'CanvasText',\n  highlightColor: 'Highlight',\n  linkColor: 'LinkText',\n};\n\nexport const getThemedColors = (theme: Theme): ThemedColors => {\n  return isHighContrastMode ? { ...themes[theme], ...schemeHighContrastMerged } : themes[theme];\n};\n\nexport const getHighContrastColors = (): HighContrastColors => {\n  return schemeHighContrast;\n};\n\nexport const getInvertedThemedColors = (theme: Theme): ThemedColors => {\n  return getThemedColors(isThemeDark(theme) ? 'light' : 'dark');\n};\n","const motionDurationLong = '0.6s';\n\nexport { motionDurationLong };\n","const motionDurationVeryLong = '1.2s';\n\nexport { motionDurationVeryLong };\n","const motionEasingIn = 'cubic-bezier(0,0,0.2,1)';\n\nexport { motionEasingIn };\n","const motionEasingOut = 'cubic-bezier(0.4,0,0.5,1)';\n\nexport { motionEasingOut };\n","import type { Theme } from '../types';\nimport type { JssStyle } from 'jss';\nimport type { PropertiesHyphen } from 'csstype';\nimport { type ThemedColors, getThemedColors, prefersColorSchemeDarkMediaQuery } from './';\nimport {\n  borderWidthBase,\n  frostedGlassStyle,\n  motionDurationLong,\n  motionDurationModerate,\n  motionDurationShort,\n  motionDurationVeryLong,\n  motionEasingBase,\n  motionEasingIn,\n  motionEasingOut,\n  themeDarkBackgroundShading,\n  themeLightBackgroundShading,\n} from '@porsche-design-system/styles';\nimport { isThemeDark } from '../utils';\nimport type * as fromMotionType from '@porsche-design-system/styles/dist/esm/motion';\n\ntype WithoutMotionDurationPrefix<T> = T extends `motionDuration${infer P}` ? Uncapitalize<P> : never;\nexport type MotionDurationKey = WithoutMotionDurationPrefix<keyof typeof fromMotionType>;\ntype WithoutMotionEasingPrefix<T> = T extends `motionEasing${infer P}` ? Uncapitalize<P> : never;\nexport type MotionEasingKey = WithoutMotionEasingPrefix<keyof typeof fromMotionType>;\n\nexport const motionDurationMap: Record<MotionDurationKey, string> = {\n  short: motionDurationShort,\n  moderate: motionDurationModerate,\n  long: motionDurationLong,\n  veryLong: motionDurationVeryLong,\n};\n\nexport const motionEasingMap: Record<MotionEasingKey | 'linear', string> = {\n  base: motionEasingBase,\n  in: motionEasingIn,\n  out: motionEasingOut,\n  linear: 'linear',\n};\n\nexport const cssVariableTransitionDuration = '--p-transition-duration';\nexport const cssVariableAnimationDuration = '--p-animation-duration';\n\nexport const getTransition = (\n  cssProperty: keyof PropertiesHyphen,\n  duration: MotionDurationKey = 'short',\n  easing: keyof typeof motionEasingMap = 'base',\n  delay?: MotionDurationKey\n): string => {\n  return `${cssProperty} var(${cssVariableTransitionDuration}, ${motionDurationMap[duration]}) ${\n    motionEasingMap[easing]\n  }${delay ? ` var(${cssVariableTransitionDuration}, ${motionDurationMap[delay]})` : ''}`;\n};\n\nexport const addImportantToRule = (value: any): string => `${value} !important`;\n\nexport const addImportantToEachRule = (input: JssStyle): JssStyle => {\n  return Object.entries(input).reduce(\n    (result, [key, value]) =>\n      value === null\n        ? result\n        : // @ts-expect-error: Type string can't be used to index type JssStyle\n          ((result[key] =\n            typeof value === 'object' ? addImportantToEachRule(value as JssStyle) : addImportantToRule(value)),\n          result),\n    {} as JssStyle\n  );\n};\n\n// TODO: this is workaround, in order the colors to be bundled in the main bundle, we need to have at least one function here, which is used in project and which calls \"getThemedColors\"\n// TODO: This mechanism needs to be investigated as part of refactoring\nexport const doGetThemedColors = (theme: Theme = 'light'): ThemedColors => {\n  return getThemedColors(theme);\n};\n\ntype Options = {\n  offset?: string | 0;\n  slotted?: true | string;\n  pseudo?: boolean;\n};\nexport const getFocusJssStyle = (theme: Theme, opts?: Options): JssStyle => {\n  const { offset = '2px', slotted = '', pseudo = false } = opts || {};\n  const { focusColor } = getThemedColors(theme);\n  const { focusColor: focusColorDark } = getThemedColors('dark');\n  const slottedSelector = slotted && slotted !== true ? slotted : '';\n\n  return {\n    [`&${slotted ? '(' : ''}${slottedSelector}::-moz-focus-inner${slotted ? ')' : ''}`]: {\n      border: 0, // reset ua-style (for FF)\n    },\n    [`&${slotted ? '(' : ''}${slottedSelector}:focus${slotted ? ')' : ''}`]: {\n      outline: 0, // reset ua-style (for older browsers)\n    },\n    ...(pseudo && {\n      [`&${slotted ? '(' : ''}${slottedSelector}:focus-visible${slotted ? ')' : ''}`]: {\n        outline: 0, // reset ua-style (for modern browsers)\n      },\n    }),\n    [`&${slotted ? '(' : ''}${slottedSelector}:focus-visible${slotted ? ')' : ''}${pseudo ? '::before' : ''}`]: {\n      outline: `${borderWidthBase} solid ${focusColor}`,\n      outlineOffset: offset,\n      ...prefersColorSchemeDarkMediaQuery(theme, {\n        outlineColor: focusColorDark,\n      }),\n    },\n  };\n};\n\n// reset initial styles, e.g. in case link-pure is used with slotted anchor and nested within e.g. an accordion\nexport const getResetInitialStylesForSlottedAnchor: JssStyle = {\n  margin: 0,\n  padding: 0,\n  outline: 0, // reset native blue outline\n  borderRadius: 0,\n  background: 'transparent',\n};\n\n/**\n * Returns a JSS style object that can be used to visually hide text in the browser, while still allowing it to be accessed by screen readers.\n * @param {boolean} isHidden - A boolean value indicating whether the text should be hidden or not. Defaults to true.\n * @param {JssStyle} isShownJssStyle - Additional styles applied when isHidden = false\n * @returns {JssStyle} - A JSS style object containing styles depending on the value of isHidden and isShownJssStyle.\n */\nexport const getHiddenTextJssStyle = (isHidden = true, isShownJssStyle?: JssStyle): JssStyle => {\n  return isHidden\n    ? {\n        position: 'absolute',\n        width: '1px',\n        height: '1px',\n        padding: 0,\n        margin: '-1px',\n        overflow: 'hidden',\n        clip: 'rect(0,0,0,0)',\n        whiteSpace: 'nowrap',\n      }\n    : {\n        position: 'static',\n        width: 'auto',\n        height: 'auto',\n        padding: 0,\n        margin: 0,\n        overflow: 'visible',\n        clip: 'auto',\n        whiteSpace: 'normal',\n        ...isShownJssStyle,\n      };\n};\n\n// TODO: migrate flyout-multilevel to use shared backdrop of dialog-styles.ts\n/**\n * Generates JSS styles for a frosted glass background.\n * @param {boolean} isVisible - Determines if the frosted glass effect is visible.\n * @param {number} zIndex - The z-index to be used.\n * @param {Theme} theme - The theme to be used.\n * @param {string} duration - The duration of the transition animation.\n * @param {'blur' | 'shading'} backdrop - The backdrop variant.\n * @returns {JssStyle} - The JSS styles for the frosted glass backdrop.\n */\nexport const getBackdropJssStyle = (\n  isVisible: boolean,\n  zIndex: number,\n  theme: Theme,\n  duration: MotionDurationKey = 'long'\n): JssStyle => {\n  return {\n    position: 'fixed',\n    inset: 0,\n    zIndex,\n    // TODO: background shading is missing in getThemedColors(theme).backgroundShading\n    background: isThemeDark(theme) ? themeDarkBackgroundShading : themeLightBackgroundShading,\n    ...prefersColorSchemeDarkMediaQuery(theme, {\n      background: themeDarkBackgroundShading,\n    }),\n    ...(isVisible\n      ? {\n          visibility: 'inherit',\n          pointerEvents: 'auto',\n          ...frostedGlassStyle,\n          opacity: 1,\n        }\n      : {\n          visibility: 'hidden', // element shall not be tabbable after fade out transition has finished\n          pointerEvents: 'none',\n          WebkitBackdropFilter: 'blur(0px)',\n          backdropFilter: 'blur(0px)',\n          opacity: 0,\n        }),\n    transition: `${getTransition('opacity', duration)}, ${getTransition('backdrop-filter', duration)}, ${getTransition(\n      '-webkit-backdrop-filter',\n      duration\n    )}, visibility 0s linear var(${cssVariableTransitionDuration}, ${isVisible ? '0s' : motionDurationMap[duration]})`,\n  };\n};\n","export const hostHiddenStyles = {\n  '&([hidden])': {\n    display: 'none',\n  },\n} as const;\n","export const colorSchemeStyles = {\n  colorScheme: 'light dark',\n} as const;\n","import type { JssStyle } from 'jss';\n\n/**\n * utility to wrap jss styles parameter in `@media (hover: hover)`\n * which is used to not have hover styles on touch devices\n */\nexport const hoverMediaQuery = (style: JssStyle): JssStyle => ({ '@media(hover:hover)': style });\n","import type { JssStyle } from 'jss';\nimport type { Theme } from '@porsche-design-system/styles';\nimport { isThemeAuto } from '../utils';\n\nexport const prefersColorSchemeDarkMediaQuery = (theme: Theme, style: JssStyle): JssStyle => {\n  return isThemeAuto(theme) && { '@media (prefers-color-scheme: dark)': style };\n};\n","import { breakpoint } from './breakpoint.mjs';\n\nfunction getMediaQueryMin(min) {\n    return `@media(min-width:${breakpoint[min]}px)`;\n}\n\nexport { getMediaQueryMin };\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"eca6\";","'use strict';\nvar global = require('../internals/global');\nvar classof = require('../internals/classof-raw');\n\nmodule.exports = classof(global.process) === 'process';\n","const borderRadiusMedium = '8px';\n\nexport { borderRadiusMedium };\n","import { type LinkTarget } from '../../utils/link-button/link-target';\nimport { type TileAspectRatio } from '../../utils';\n\nexport type LinkTileProductTarget = LinkTarget;\n/** @deprecated */\nexport type LinkTileProductLikeEvent = {\n  liked: boolean;\n};\nexport type LinkTileProductLikeEventDetail = LinkTileProductLikeEvent;\n\nexport const TILE_PRODUCT_ASPECT_RATIOS = ['3:4', '9:16'] as const;\nexport type LinkTileProductAspectRatio = Extract<TileAspectRatio, (typeof TILE_PRODUCT_ASPECT_RATIOS)[number]>;\n\nexport const headerSlot = 'header';\nexport const anchorSlot = 'anchor';\n"],"sourceRoot":""}