(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2c77d510"],{"0000":function(e,t,n){e.exports=n.p+"img/loading-behavior-angular-02.48d2a256.jpg"},"0f8f":function(e,t,n){e.exports=n.p+"img/loading-behavior-angular-05.b7636daf.jpg"},4828:function(e,t,n){e.exports=n.p+"img/loading-behavior-angular-04.f548641d.jpg"},"4c27":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e._self._c;return t("div",{staticClass:"vmark"},[t("h1",[e._v("Initialization")]),t("TableOfContents"),t("h2",[e._v("Setup")]),e._m(0),e._m(1),e._m(2),e._m(3),t("h2",[e._v("Mounting")]),e._m(4),e._m(5),e._m(6),t("Notification",{attrs:{heading:"Important","heading-tag":"h3",state:"warning"}},[e._v(" In any JavaScript framework, the available wrapper components' purpose is typing, rendering a web component into the DOM and syncing framework props to the rendered component. Once rendered, the web component has its own lifecycle and is not aware of any framework. ")]),t("h2",[e._v("Prop Changes")]),e._m(7),t("h2",[e._v("Unmounting")]),e._m(8),t("hr"),t("h2",[e._v("Optimization")]),e._m(9),t("h3",[e._v("Status Quo")]),t("p",[e._v("By default, the network traffic looks something like this.")]),e._m(10),e._m(11),t("h3",[e._v("Preloading font-face.css")]),e._m(12),e._m(13),t("p",[e._v("As we can see, this happens in parallel with the Angular bundles.")]),t("h3",[e._v("Preloading font files")]),e._m(14),e._m(15),e._m(16),t("h3",[e._v("Preloading component chunks")]),e._m(17),e._m(18),t("p",[e._v("Again, with this improvement, the asset is now being loaded in parallel, too.")]),e._m(19),e._m(20),e._m(21),t("p",[e._v("Now, everything is preloaded in parallel.")]),t("Notification",{attrs:{heading:"Hint","heading-tag":"h4",state:"warning"}},[e._v(" Just preloading all component chunks on the page or even every chunk available should be avoided."),t("br"),e._v(" Instead, the most performant but also more complicated approach would be to only preload the component chunks (and fonts) that are located "),t("strong",[e._v("above the fold")]),e._v(" which means visible on page load without scrolling. ")]),t("Notification",{attrs:{heading:"Conclusion","heading-tag":"h4",state:"warning"}},[e._v(" Applying the "),t("code",[e._v("getLoaderScript()")]),e._v(" partial is pointless since there is no benefit because everything Porsche Design System related is loaded before or at the same time as the Angular app itself. Therefore, the DOM is empty once the preloaded chunks are available. ")])],1)},o=[function(){var e=this,t=e._self._c;return t("p",[e._v("The most basic "),t("a",{attrs:{href:"developing/angular/getting-started#integration"}},[e._v("integration")]),e._v(" of "),t("code",[e._v("@porsche-design-system/components-angular")]),e._v(" looks like this.")])},function(){var e=this,t=e._self._c;return t("pre",[t("code",{staticClass:"language-tsx"},[e._v("@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, PorscheDesignSystemModule],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n")])])},function(){var e=this,t=e._self._c;return t("p",[e._v("Internally "),t("code",[e._v("PorscheDesignSystemModule")]),e._v(" is calling "),t("code",[e._v("load()")]),e._v(" of "),t("code",[e._v("@porsche-design-system/components-js")]),e._v(" since the web components are exactly the same."),t("br"),e._v(" In fact, the framework specific packages like "),t("code",[e._v("@porsche-design-system/components-angular")]),e._v(" only provide thin wrapper components for typing, prop binding and good developer experience just like with any other Angular component.")])},function(){var e=this,t=e._self._c;return t("p",[e._v("For more details what happens when "),t("code",[e._v("load()")]),e._v(" is invoked, please take a look at the "),t("a",{attrs:{href:"must-know/initialization/vanilla-js#setup"}},[e._v("Vanilla Js Setup")]),e._v(".")])},function(){var e=this,t=e._self._c;return t("p",[e._v("In the example from above we didn't render any component, yet, so let's render a single "),t("code",[e._v("p-button")]),e._v(".")])},function(){var e=this,t=e._self._c;return t("pre",[t("code",{staticClass:"language-tsx"},[e._v("<p-button>Hello</p-button>\n")])])},function(){var e=this,t=e._self._c;return t("p",[e._v("Once rendered, this produces a "),t("code",[e._v("p-button")]),e._v(" tag in the DOM."),t("br"),e._v(" From here on the exact same things happen as described at "),t("a",{attrs:{href:"must-know/initialization/vanilla-js#preparation"}},[e._v("Vanilla Js Preparation")]),e._v(" and "),t("a",{attrs:{href:"must-know/initialization/vanilla-js#connect-lifecycle"}},[e._v("Vanilla Js Connect Lifecycle")]),e._v(".")])},function(){var e=this,t=e._self._c;return t("p",[e._v("In case of a prop change the Angular "),t("code",[e._v("p-button")]),e._v(" renders again and synchronizes its properties to the rendered "),t("code",[e._v("p-button")]),e._v(" element. What follows is, again, exactly as documented at "),t("a",{attrs:{href:"must-know/initialization/vanilla-js#change-lifecycle"}},[e._v("Vanilla Js Change Lifecycle")]),e._v(".")])},function(){var e=this,t=e._self._c;return t("p",[e._v("Once the Angular "),t("code",[e._v("p-button")]),e._v(" is not needed anymore, e.g. when conditionally rendered or navigating away, the "),t("code",[e._v("p-button")]),e._v(" element is removed from the DOM. What happens additionally can be found at "),t("a",{attrs:{href:"must-know/initialization/vanilla-js#disconnect-lifecycle"}},[e._v("Vanilla Js Disconnect Lifecycle")]),e._v(".")])},function(){var e=this,t=e._self._c;return t("p",[e._v("Now that it is clear what is happening under the hood when a simple "),t("code",[e._v("p-button")]),e._v(" is rendered, let's see how this looks from the perspective of network requests and how to improve them if necessary.")])},function(){var e=this,t=e._self._c;return t("p",[t("img",{attrs:{src:n("b9dd"),alt:"Loading Behavior Angular 01"}})])},function(){var e=this,t=e._self._c;return t("ul",[t("li",[e._v("starts with the "),t("code",[e._v("index.html")])]),t("li",[e._v("then continues with the "),t("code",[e._v("runtime.js")]),e._v(", "),t("code",[e._v("polyfills.js")]),e._v(" and "),t("code",[e._v("main.js")]),e._v(" bundle of the Angular app")]),t("li",[e._v("which then loads the "),t("strong",[e._v("core chunk")])]),t("li",[e._v("that injects both the "),t("strong",[e._v("font-face.css")]),e._v(" and the "),t("strong",[e._v("component chunk")])]),t("li",[e._v("and last the "),t("strong",[e._v("font file")]),e._v(" after the styles within the component's Shadow DOM are applied")])])},function(){var e=this,t=e._self._c;return t("p",[e._v("By applying the "),t("a",{attrs:{href:"partials/font-face-stylesheet"}},[e._v("getFontFaceStylesheet()")]),e._v(" partial we can preload the "),t("strong",[e._v("font-face.css")]),e._v(" asset.")])},function(){var e=this,t=e._self._c;return t("p",[t("img",{attrs:{src:n("0000"),alt:"Loading Behavior Angular 02"}})])},function(){var e=this,t=e._self._c;return t("p",[e._v("By applying the "),t("a",{attrs:{href:"partials/font-links"}},[e._v("getFontLinks()")]),e._v(" partial we can preload the font assets. As a default, both "),t("code",[e._v("regular")]),e._v(" and "),t("code",[e._v("semi-bold")]),e._v(" weights are preloaded since they are most commonly used but this can be customized.")])},function(){var e=this,t=e._self._c;return t("p",[t("img",{attrs:{src:n("bd1c"),alt:"Loading Behavior Angular 03"}})])},function(){var e=this,t=e._self._c;return t("p",[e._v("As a result, both font files are additionally loaded in parallel, while earlier this happened not only in sequence but even last and only when a style is present on the page that uses the "),t("code",[e._v("font-family")]),e._v(" and that particular "),t("code",[e._v("font-weight")]),e._v(" which can lead to a phenomena called "),t("strong",[e._v("Flash of Unstyled Text (FOUT)")]),e._v(".")])},function(){var e=this,t=e._self._c;return t("p",[e._v("The loading experience can be improved further by using the "),t("a",{attrs:{href:"partials/component-chunk-links"}},[e._v("getComponentChunkLinks()")]),e._v(" partial. Without any configuration it simply preloads the "),t("strong",[e._v("core chunk")]),e._v(".")])},function(){var e=this,t=e._self._c;return t("p",[t("img",{attrs:{src:n("4828"),alt:"Loading Behavior Angular 04"}})])},function(){var e=this,t=e._self._c;return t("p",[e._v("For the next step, we also want to preload the "),t("strong",[e._v("component chunk")]),e._v(" by using the partial like")])},function(){var e=this,t=e._self._c;return t("pre",[t("code",{staticClass:"language-ts"},[e._v("getComponentChunkLinks({ components: ['button'] });\n")])])},function(){var e=this,t=e._self._c;return t("p",[t("img",{attrs:{src:n("0f8f"),alt:"Loading Behavior Angular 05"}})])}],i=n("2877"),s={},r=Object(i["a"])(s,a,o,!1,null,null,null);t["default"]=r.exports},b9dd:function(e,t,n){e.exports=n.p+"img/loading-behavior-angular-01.5a48d592.jpg"},bd1c:function(e,t,n){e.exports=n.p+"img/loading-behavior-angular-03.b546911e.jpg"}}]);
//# sourceMappingURL=chunk-2c77d510.569a4ec7.js.map