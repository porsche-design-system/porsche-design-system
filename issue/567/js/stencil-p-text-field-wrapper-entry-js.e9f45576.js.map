{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/p-text-field-wrapper.entry.js"],"names":["TextFieldWrapper","hostRef","registerInstance","this","label","state","message","hideLabel","showPassword","labelId","randomString","prototype","componentWillLoad","setInput","setState","updatePasswordToggleable","bindStateListener","addSlottedStyles","render","_this","containerClasses","cx","prefix","labelClasses","labelTextClasses","mapBreakpointPropToPrefixedClasses","disabled","fakeInputClasses","readonly","buttonClasses","messageClasses","h","Host","class","id","isLabelVisible","tag","color","onClick","labelClick","name","isPasswordToggleable","type","togglePassword","isMessageVisible","role","Object","defineProperty","get","host","querySelector","enumerable","configurable","includes","isMessageDefined","input","setAttribute","readOnly","focus","transitionListener","style","cssText","tagName","toLowerCase","insertSlottedStyles","getElement"],"mappings":"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","file":"js/stencil-p-text-field-wrapper-entry-js.e9f45576.js","sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-da6c7ef6.js';\nimport { r as randomString, c as cx, p as prefix, m as mapBreakpointPropToPrefixedClasses, t as transitionListener, i as insertSlottedStyles } from './index-eed0324a.js';\nvar TextFieldWrapper = /** @class */ (function () {\n    function TextFieldWrapper(hostRef) {\n        registerInstance(this, hostRef);\n        /** The label text. */\n        this.label = '';\n        /** The validation state. */\n        this.state = 'none';\n        /** The message styled depending on validation state. */\n        this.message = '';\n        /** Show or hide label. For better accessibility it is recommended to show the label. */\n        this.hideLabel = false;\n        this.showPassword = false;\n        this.labelId = randomString();\n    }\n    TextFieldWrapper.prototype.componentWillLoad = function () {\n        this.setInput();\n        this.setState();\n        this.updatePasswordToggleable();\n        this.bindStateListener();\n        this.addSlottedStyles();\n    };\n    TextFieldWrapper.prototype.render = function () {\n        var _this = this;\n        var containerClasses = cx(prefix('text-field-wrapper__container'));\n        var labelClasses = cx(prefix('text-field-wrapper__label'));\n        var labelTextClasses = cx(prefix('text-field-wrapper__label-text'), mapBreakpointPropToPrefixedClasses('text-field-wrapper__label-text-', this.hideLabel, ['hidden', 'visible']), this.disabled && prefix('text-field-wrapper__label-text--disabled'));\n        var fakeInputClasses = cx(prefix('text-field-wrapper__fake-input'), this.state !== 'none' && prefix(\"text-field-wrapper__fake-input--\" + this.state), this.disabled && prefix('text-field-wrapper__fake-input--disabled'), this.readonly && prefix('text-field-wrapper__fake-input--readonly'));\n        var buttonClasses = cx(prefix('text-field-wrapper__button'));\n        var messageClasses = cx(prefix('text-field-wrapper__message'), this.state !== 'none' && prefix(\"text-field-wrapper__message--\" + this.state));\n        return (h(Host, null, h(\"span\", { class: containerClasses }, h(\"label\", { class: labelClasses, id: this.state === 'error' && this.labelId }, this.isLabelVisible &&\n            h(\"p-text\", { class: labelTextClasses, tag: 'span', color: 'inherit', onClick: function () { return _this.labelClick(); } }, this.label ? this.label : h(\"span\", null, h(\"slot\", { name: 'label' }))), h(\"span\", { class: fakeInputClasses }, h(\"slot\", null))), this.isPasswordToggleable &&\n            h(\"button\", { type: 'button', class: buttonClasses, onClick: function () { return _this.togglePassword(); }, disabled: this.disabled }, h(\"p-icon\", { name: this.showPassword ? 'view-off' : 'view', color: 'inherit' }))), this.isMessageVisible &&\n            h(\"p-text\", { class: messageClasses, color: 'inherit', role: this.state === 'error' && 'alert', \"aria-describedby\": this.state === 'error' && this.labelId }, this.message ? this.message : h(\"span\", null, h(\"slot\", { name: 'message' })))));\n    };\n    Object.defineProperty(TextFieldWrapper.prototype, \"isLabelVisible\", {\n        get: function () {\n            return !!this.label || !!this.host.querySelector('[slot=\"label\"]');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextFieldWrapper.prototype, \"isMessageDefined\", {\n        get: function () {\n            return !!this.message || !!this.host.querySelector('[slot=\"message\"]');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextFieldWrapper.prototype, \"isMessageVisible\", {\n        get: function () {\n            return ['success', 'error'].includes(this.state) && this.isMessageDefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextFieldWrapper.prototype.setInput = function () {\n        this.input = this.host.querySelector('input');\n        this.input.setAttribute('aria-label', this.label);\n    };\n    TextFieldWrapper.prototype.setState = function () {\n        this.disabled = this.input.disabled;\n        this.readonly = this.input.readOnly;\n    };\n    TextFieldWrapper.prototype.labelClick = function () {\n        this.input.focus();\n    };\n    TextFieldWrapper.prototype.bindStateListener = function () {\n        var _this = this;\n        transitionListener(this.input, 'border-top-color', function () {\n            _this.setState();\n        });\n    };\n    TextFieldWrapper.prototype.updatePasswordToggleable = function () {\n        this.isPasswordToggleable = this.input.type === 'password';\n        if (this.isPasswordToggleable) {\n            this.input.style.cssText = 'padding-right: 3rem !important';\n        }\n    };\n    TextFieldWrapper.prototype.togglePassword = function () {\n        this.input.type === 'password' ? this.input.type = 'text' : this.input.type = 'password';\n        this.showPassword = !this.showPassword;\n        this.labelClick();\n    };\n    TextFieldWrapper.prototype.addSlottedStyles = function () {\n        var tagName = this.host.tagName.toLowerCase();\n        var style = tagName + \" a {\\n      outline: none transparent;\\n      color: inherit;\\n      text-decoration: underline;\\n      -webkit-transition: outline-color .24s ease, color .24s ease;\\n      transition: outline-color .24s ease, color .24s ease;\\n    }\\n\\n    \" + tagName + \" a:hover {\\n      color: #d5001c;\\n    }\\n\\n    \" + tagName + \" a:focus {\\n      outline: 2px solid #00d5b9;\\n      outline-offset: 1px;\\n    }\\n\\n    \" + tagName + \" input::-webkit-outer-spin-button {\\n      appearance: none !important;\\n      -webkit-appearance: none !important;\\n    }\\n\\n    \" + tagName + \" input::-webkit-inner-spin-button {\\n      appearance: none !important;\\n      -webkit-appearance: none !important;\\n    }\\n\\n    \" + tagName + \" input[type=password]::-webkit-contacts-auto-fill-button,\\n    \" + tagName + \" input[type=password]::-webkit-credentials-auto-fill-button {\\n      margin-right: 32px;\\n    }\\n    \";\n        insertSlottedStyles(this.host, style);\n    };\n    Object.defineProperty(TextFieldWrapper.prototype, \"host\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextFieldWrapper, \"style\", {\n        get: function () { return \":host{display:block}::slotted(input){position:absolute !important;top:0 !important;left:0 !important;width:100% !important;height:100% !important;display:block !important;padding:0.75rem !important;margin:0 !important;outline:transparent none !important;outline-offset:1px !important;-webkit-appearance:none !important;-moz-appearance:none !important;appearance:none !important;-webkit-box-sizing:border-box !important;box-sizing:border-box !important;border-width:0 !important;border-top-color:transparent !important;background-color:transparent !important;opacity:1 !important;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif !important;font-weight:400 !important;font-size:1rem !important;line-height:1.5 !important;text-indent:0 !important;color:#000 !important;-webkit-transition:outline-color 0.24s ease, color 0.24s ease, border-top-color 1ms linear !important;transition:outline-color 0.24s ease, color 0.24s ease, border-top-color 1ms linear !important}::slotted(input:focus){outline:#00d5b9 solid 2px !important}::slotted(input:-moz-read-only:focus){outline:none !important}::slotted(input:read-only:focus){outline:none !important}::slotted(input:not(:disabled):-moz-read-only){border-top-color:rgba(255, 255, 255, 0.01) !important;color:#626669 !important}::slotted(input:not(:disabled):read-only){border-top-color:rgba(255, 255, 255, 0.01) !important;color:#626669 !important}::slotted(input:disabled){border-top-color:rgba(255, 255, 255, 0.02) !important;color:#96989a !important;cursor:not-allowed !important}.p-text-field-wrapper__container{position:relative;display:block}.p-text-field-wrapper__label{display:block}.p-text-field-wrapper__label-text{display:inline-block;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-text-field-wrapper__label-text--disabled{color:#96989a}.p-text-field-wrapper__label-text--visible{position:static;width:auto;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}\\@media (min-width: 480px){.p-text-field-wrapper__label-text--visible-xs{position:static;width:auto;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-xs{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width: 760px){.p-text-field-wrapper__label-text--visible-s{position:static;width:auto;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-s{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width: 1000px){.p-text-field-wrapper__label-text--visible-m{position:static;width:auto;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-m{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width: 1300px){.p-text-field-wrapper__label-text--visible-l{position:static;width:auto;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-l{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width: 1760px){.p-text-field-wrapper__label-text--visible-xl{position:static;width:auto;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-xl{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}.p-text-field-wrapper__fake-input{position:relative;width:100%;height:3rem;display:block;background-color:#fff;-webkit-box-shadow:inset 0 0 0 1px #626669;box-shadow:inset 0 0 0 1px #626669;-webkit-transition:background-color 0.24s ease, -webkit-box-shadow 0.24s ease;transition:background-color 0.24s ease, -webkit-box-shadow 0.24s ease;transition:box-shadow 0.24s ease, background-color 0.24s ease;transition:box-shadow 0.24s ease, background-color 0.24s ease, -webkit-box-shadow 0.24s ease}.p-text-field-wrapper__fake-input:hover:not(.p-text-field-wrapper__fake-input--disabled):not(.p-text-field-wrapper__fake-input--readonly):not(.p-text-field-wrapper__fake-input--success):not(.p-text-field-wrapper__fake-input--error),.p-text-field-wrapper__label-text:hover~.p-text-field-wrapper__fake-input:not(.p-text-field-wrapper__fake-input--disabled):not(.p-text-field-wrapper__fake-input--readonly):not(.p-text-field-wrapper__fake-input--success):not(.p-text-field-wrapper__fake-input--error){-webkit-box-shadow:inset 0 0 0 1px #000;box-shadow:inset 0 0 0 1px #000}.p-text-field-wrapper__fake-input--disabled{-webkit-box-shadow:inset 0 0 0 1px #96989a;box-shadow:inset 0 0 0 1px #96989a;background-color:#fff}.p-text-field-wrapper__fake-input--readonly{-webkit-box-shadow:inset 0 0 0 1px #f2f2f2;box-shadow:inset 0 0 0 1px #f2f2f2;background-color:#f2f2f2}.p-text-field-wrapper__fake-input--success{-webkit-box-shadow:inset 0 0 0 2px #018a16;box-shadow:inset 0 0 0 2px #018a16}.p-text-field-wrapper__fake-input--success:hover,.p-text-field-wrapper__label-text:hover~.p-text-field-wrapper__fake-input--success{-webkit-box-shadow:inset 0 0 0 2px #014d0c;box-shadow:inset 0 0 0 2px #014d0c}.p-text-field-wrapper__fake-input--error{-webkit-box-shadow:inset 0 0 0 2px #e00000;box-shadow:inset 0 0 0 2px #e00000}.p-text-field-wrapper__fake-input--error:hover,.p-text-field-wrapper__label-text:hover~.p-text-field-wrapper__fake-input--error{-webkit-box-shadow:inset 0 0 0 2px #a30000;box-shadow:inset 0 0 0 2px #a30000}.p-text-field-wrapper__message{margin-top:0.25rem;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-text-field-wrapper__message--success{color:#018a16}.p-text-field-wrapper__message--error{color:#e00000}.p-text-field-wrapper__button{position:absolute;bottom:0;right:0;margin:0;width:3rem;height:3rem;padding:0.75rem;-webkit-box-sizing:border-box;box-sizing:border-box;outline:transparent none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;text-decoration:none;background:transparent;cursor:pointer;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-text-field-wrapper__button::-moz-focus-inner{border:0}.p-text-field-wrapper__button:hover{color:#d5001c}.p-text-field-wrapper__button:active{color:#d5001c}.p-text-field-wrapper__button:focus{color:#00d5b9}.p-text-field-wrapper__button:disabled{color:#96989a;cursor:not-allowed !important}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return TextFieldWrapper;\n}());\nexport { TextFieldWrapper as p_text_field_wrapper };\n"],"sourceRoot":""}