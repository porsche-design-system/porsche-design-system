{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/p-radio-button-wrapper.entry.js"],"names":["radioButtonWrapperCss","RadioButtonWrapper","hostRef","registerInstance","this","label","state","message","hideLabel","labelId","randomString","setInput","setState","bindStateListener","addSlottedStyles","labelClasses","cx","prefix","fakeRadioButtonClasses","checked","disabled","labelTextClasses","mapBreakpointPropToPrefixedClasses","messageClasses","h","Host","class","id","isLabelVisible","tag","color","onClick","e","labelClick","name","isMessageVisible","role","input","host","querySelector","setAttribute","event","shadowRoot","target","closest","click","transitionListener","tagName","toLowerCase","style","insertSlottedStyles","includes","isMessageDefined","getElement"],"mappings":"iRAGMA,EAAwB,oyOAExBC,EAAkB,WACpB,WAAYC,GAAS,uBACjBC,eAAiBC,KAAMF,GAEvBE,KAAKC,MAAQ,GAEbD,KAAKE,MAAQ,OAEbF,KAAKG,QAAU,GAEfH,KAAKI,WAAY,EACjBJ,KAAKK,QAAUC,iBAXC,mEAchBN,KAAKO,WACLP,KAAKQ,WACLR,KAAKS,oBACLT,KAAKU,qBAjBW,+BAmBX,WACCC,EAAeC,eAAGC,eAAO,gCACzBC,EAAyBF,eAAGC,eAAO,2CAA4Cb,KAAKe,SAAWF,eAAO,oDAAqDb,KAAKgB,UAAYH,eAAO,qDAAqE,SAAfb,KAAKE,OAAoBW,eAAO,4CAAD,OAA6Cb,KAAKE,SAC1Te,EAAmBL,eAAGC,eAAO,oCAAqCK,eAAmC,oCAAqClB,KAAKI,UAAW,CAAC,SAAU,YAAaJ,KAAKgB,UAAYH,eAAO,+CAC1MM,EAAiBP,eAAGC,eAAO,iCAAiD,SAAfb,KAAKE,OAAoBW,eAAO,kCAAD,OAAmCb,KAAKE,SAC1I,OAAQkB,eAAEC,OAAM,KAAMD,eAAE,QAAS,CAAEE,MAAOX,EAAcY,GAAmB,UAAfvB,KAAKE,OAAqBF,KAAKK,SAAWL,KAAKwB,gBACvGJ,eAAE,SAAU,CAAEE,MAAOL,EAAkBQ,IAAK,OAAQC,MAAO,UAAWC,QAAS,SAACC,GAAD,OAAO,EAAKC,WAAWD,KAAM5B,KAAKC,MAAQD,KAAKC,MAAQmB,eAAE,OAAQ,KAAMA,eAAE,OAAQ,CAAEU,KAAM,YAAcV,eAAE,OAAQ,CAAEE,MAAOR,GAA0BM,eAAE,OAAQ,QAASpB,KAAK+B,kBAC3PX,eAAE,SAAU,CAAEE,MAAOH,EAAgBO,MAAO,UAAWM,KAAqB,UAAfhC,KAAKE,OAAqB,QAAS,mBAAmC,UAAfF,KAAKE,OAAqBF,KAAKK,SAAWL,KAAKG,QAAUH,KAAKG,QAAUiB,eAAE,OAAQ,KAAMA,eAAE,OAAQ,CAAEU,KAAM,iBA1BlN,iCAsChB9B,KAAKiC,MAAQjC,KAAKkC,KAAKC,cAAc,uBACrCnC,KAAKiC,MAAMG,aAAa,aAAcpC,KAAKC,SAvC3B,iCAyCToC,GAMHrC,KAAKkC,KAAKI,YAActC,KAAKkC,KAAKI,WAAWJ,MACZ,OAA9BG,EAAME,OAAOC,QAAQ,MACxBxC,KAAKiC,MAAMQ,UAjDC,iCAqDhBzC,KAAKe,QAAUf,KAAKiC,MAAMlB,QAC1Bf,KAAKgB,SAAWhB,KAAKiC,MAAMjB,WAtDX,0CAwDA,WAChB0B,eAAmB1C,KAAKiC,MAAO,oBAAoB,WAC/C,EAAKzB,gBA1DO,yCA8DhB,IAAMmC,EAAU3C,KAAKkC,KAAKS,QAAQC,cAC5BC,EAAQ,GAAH,OAAMF,EAAN,4PAQbA,EARa,2DAYbA,EAZa,oFAgBXG,eAAoB9C,KAAKkC,KAAMW,KA/Ef,qCA6BhB,QAAS7C,KAAKC,SAAWD,KAAKkC,KAAKC,cAAc,oBA7BjC,uCAgChB,QAASnC,KAAKG,WAAaH,KAAKkC,KAAKC,cAAc,sBAhCnC,uCAmChB,MAAO,CAAC,UAAW,SAASY,SAAS/C,KAAKE,QAAUF,KAAKgD,mBAnCzC,2BAiFP,OAAOC,eAAWjD,UAjFX,KAmFxBH,EAAmBgD,MAAQjD","file":"js/stencil-p-radio-button-wrapper-entry-js.8500bda2.js","sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-356901b5.js';\nimport { r as randomString, c as cx, p as prefix, m as mapBreakpointPropToPrefixedClasses, t as transitionListener, i as insertSlottedStyles } from './index-5cae920f.js';\n\nconst radioButtonWrapperCss = \":host{display:block}::slotted(input){position:absolute !important;top:-1px !important;left:-1px !important;width:1.625rem !important;height:1.625rem !important;display:block !important;margin:0 !important;padding:0 !important;-webkit-appearance:none !important;-moz-appearance:none !important;appearance:none !important;border:0 rgba(255, 255, 255, 0) !important;border-radius:50% !important;background-color:transparent !important;opacity:1 !important;outline:none !important;-webkit-box-shadow:0 0 0 0 transparent !important;box-shadow:0 0 0 0 transparent !important;-webkit-transition:border-top-color 1ms linear, -webkit-box-shadow 0.24s ease !important;transition:border-top-color 1ms linear, -webkit-box-shadow 0.24s ease !important;transition:box-shadow 0.24s ease, border-top-color 1ms linear !important;transition:box-shadow 0.24s ease, border-top-color 1ms linear, -webkit-box-shadow 0.24s ease !important}::slotted(input::-ms-check){display:none !important}::slotted(input:focus){-webkit-box-shadow:0 0 0 2px #00d5b9 !important;box-shadow:0 0 0 2px #00d5b9 !important}::slotted(input:checked){border-top-color:rgba(255, 255, 255, 0.01) !important}::slotted(input:disabled){cursor:not-allowed !important;border-top-color:rgba(255, 255, 255, 0.02) !important}::slotted(input:disabled:checked){border-top-color:rgba(255, 255, 255, 0.03) !important}.p-radio-button-wrapper__label{position:relative;display:-ms-flexbox;display:flex}.p-radio-button-wrapper__label-text{-ms-flex-order:1;order:1;display:inline-block;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-radio-button-wrapper__label-text--disabled{color:#96989a}.p-radio-button-wrapper__label-text--visible{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-radio-button-wrapper__label-text--hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}@media (min-width: 480px){.p-radio-button-wrapper__label-text--visible-xs{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-radio-button-wrapper__label-text--hidden-xs{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 760px){.p-radio-button-wrapper__label-text--visible-s{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-radio-button-wrapper__label-text--hidden-s{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1000px){.p-radio-button-wrapper__label-text--visible-m{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-radio-button-wrapper__label-text--hidden-m{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1300px){.p-radio-button-wrapper__label-text--visible-l{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-radio-button-wrapper__label-text--hidden-l{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1760px){.p-radio-button-wrapper__label-text--visible-xl{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-radio-button-wrapper__label-text--hidden-xl{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}.p-radio-button-wrapper__fake-radio-button{position:relative;width:1.5rem;height:1.5rem;display:block;-ms-flex-negative:0;flex-shrink:0;border-radius:50%;-webkit-box-shadow:inset 0 0 0 1px #626669;box-shadow:inset 0 0 0 1px #626669;background-color:#fff;-webkit-transition:background-color 0.24s ease, -webkit-box-shadow 0.24s ease;transition:background-color 0.24s ease, -webkit-box-shadow 0.24s ease;transition:box-shadow 0.24s ease, background-color 0.24s ease;transition:box-shadow 0.24s ease, background-color 0.24s ease, -webkit-box-shadow 0.24s ease}.p-radio-button-wrapper__fake-radio-button:hover:not(.p-radio-button-wrapper__fake-radio-button--disabled):not(.p-radio-button-wrapper__fake-radio-button--success):not(.p-radio-button-wrapper__fake-radio-button--error),.p-radio-button-wrapper__label-text:hover~.p-radio-button-wrapper__fake-radio-button:not(.p-radio-button-wrapper__fake-radio-button--disabled):not(.p-radio-button-wrapper__fake-radio-button--success):not(.p-radio-button-wrapper__fake-radio-button--error){-webkit-box-shadow:inset 0 0 0 1px #000;box-shadow:inset 0 0 0 1px #000}.p-radio-button-wrapper__fake-radio-button::before{content:\\\"\\\";width:1rem;height:1rem;border-radius:50%;background-color:transparent;position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);-webkit-transition:background-color 0.24s ease;transition:background-color 0.24s ease}.p-radio-button-wrapper__fake-radio-button--checked{-webkit-box-shadow:inset 0 0 0 1px #323639;box-shadow:inset 0 0 0 1px #323639}.p-radio-button-wrapper__fake-radio-button--checked::before{background-color:#323639}.p-radio-button-wrapper__fake-radio-button--checked.p-radio-button-wrapper__fake-radio-button--disabled::before{background-color:#96989a}.p-radio-button-wrapper__fake-radio-button--checked.p-radio-button-wrapper__fake-radio-button--error::before{background-color:#e00000}.p-radio-button-wrapper__fake-radio-button--checked.p-radio-button-wrapper__fake-radio-button--success::before{background-color:#018a16}.p-radio-button-wrapper__fake-radio-button--disabled{-webkit-box-shadow:inset 0 0 0 1px #96989a;box-shadow:inset 0 0 0 1px #96989a}.p-radio-button-wrapper__fake-radio-button--error{-webkit-box-shadow:inset 0 0 0 2px #e00000;box-shadow:inset 0 0 0 2px #e00000}.p-radio-button-wrapper__fake-radio-button--error:hover,.p-radio-button-wrapper__label-text:hover~.p-radio-button-wrapper__fake-radio-button--error{-webkit-box-shadow:inset 0 0 0 2px #a30000;box-shadow:inset 0 0 0 2px #a30000}.p-radio-button-wrapper__fake-radio-button--success{-webkit-box-shadow:inset 0 0 0 2px #018a16;box-shadow:inset 0 0 0 2px #018a16}.p-radio-button-wrapper__fake-radio-button--success:hover,.p-radio-button-wrapper__label-text:hover~.p-radio-button-wrapper__fake-radio-button--success{-webkit-box-shadow:inset 0 0 0 2px #014d0c;box-shadow:inset 0 0 0 2px #014d0c}.p-radio-button-wrapper__message{margin-top:0.25rem;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-radio-button-wrapper__message--success{color:#018a16}.p-radio-button-wrapper__message--error{color:#e00000}\";\n\nconst RadioButtonWrapper = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The label text. */\n        this.label = '';\n        /** The validation state. */\n        this.state = 'none';\n        /** The message styled depending on validation state. */\n        this.message = '';\n        /** Show or hide label. For better accessibility it's recommended to show the label. */\n        this.hideLabel = false;\n        this.labelId = randomString();\n    }\n    componentWillLoad() {\n        this.setInput();\n        this.setState();\n        this.bindStateListener();\n        this.addSlottedStyles();\n    }\n    render() {\n        const labelClasses = cx(prefix('radio-button-wrapper__label'));\n        const fakeRadioButtonClasses = cx(prefix('radio-button-wrapper__fake-radio-button'), this.checked && prefix(`radio-button-wrapper__fake-radio-button--checked`), this.disabled && prefix(`radio-button-wrapper__fake-radio-button--disabled`), this.state !== 'none' && prefix(`radio-button-wrapper__fake-radio-button--${this.state}`));\n        const labelTextClasses = cx(prefix('radio-button-wrapper__label-text'), mapBreakpointPropToPrefixedClasses('radio-button-wrapper__label-text-', this.hideLabel, ['hidden', 'visible']), this.disabled && prefix('radio-button-wrapper__label-text--disabled'));\n        const messageClasses = cx(prefix('radio-button-wrapper__message'), this.state !== 'none' && prefix(`radio-button-wrapper__message--${this.state}`));\n        return (h(Host, null, h(\"label\", { class: labelClasses, id: this.state === 'error' && this.labelId }, this.isLabelVisible &&\n            h(\"p-text\", { class: labelTextClasses, tag: 'span', color: 'inherit', onClick: (e) => this.labelClick(e) }, this.label ? this.label : h(\"span\", null, h(\"slot\", { name: 'label' }))), h(\"span\", { class: fakeRadioButtonClasses }, h(\"slot\", null))), this.isMessageVisible &&\n            h(\"p-text\", { class: messageClasses, color: 'inherit', role: this.state === 'error' && 'alert', \"aria-describedby\": this.state === 'error' && this.labelId }, this.message ? this.message : h(\"span\", null, h(\"slot\", { name: 'message' })))));\n    }\n    get isLabelVisible() {\n        return !!this.label || !!this.host.querySelector('[slot=\"label\"]');\n    }\n    get isMessageDefined() {\n        return !!this.message || !!this.host.querySelector('[slot=\"message\"]');\n    }\n    get isMessageVisible() {\n        return ['success', 'error'].includes(this.state) && this.isMessageDefined;\n    }\n    setInput() {\n        this.input = this.host.querySelector('input[type=\"radio\"]');\n        this.input.setAttribute('aria-label', this.label);\n    }\n    labelClick(event) {\n        /**\n         * we only want to simulate the checkbox click by label click\n         * for real shadow dom, else the native behaviour works out\n         * of the box\n         */\n        if (this.host.shadowRoot && this.host.shadowRoot.host\n            && event.target.closest('a') === null) {\n            this.input.click();\n        }\n    }\n    setState() {\n        this.checked = this.input.checked;\n        this.disabled = this.input.disabled;\n    }\n    bindStateListener() {\n        transitionListener(this.input, 'border-top-color', () => {\n            this.setState();\n        });\n    }\n    addSlottedStyles() {\n        const tagName = this.host.tagName.toLowerCase();\n        const style = `${tagName} a {\n      outline: none transparent;\n      color: inherit;\n      text-decoration: underline;\n      -webkit-transition: outline-color .24s ease, color .24s ease;\n      transition: outline-color .24s ease, color .24s ease;\n    }\n\n    ${tagName} a:hover {\n      color: #d5001c;\n    }\n\n    ${tagName} a:focus {\n      outline: 2px solid #00d5b9;\n      outline-offset: 1px;\n    }`;\n        insertSlottedStyles(this.host, style);\n    }\n    get host() { return getElement(this); }\n};\nRadioButtonWrapper.style = radioButtonWrapperCss;\n\nexport { RadioButtonWrapper as p_radio_button_wrapper };\n"],"sourceRoot":""}