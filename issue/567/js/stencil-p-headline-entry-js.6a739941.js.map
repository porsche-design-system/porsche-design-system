{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/p-headline.entry.js"],"names":["headlineCss","Headline","hostRef","registerInstance","this","variant","tag","undefined","align","color","ellipsis","theme","tagName","element","toLowerCase","style","insertSlottedStyles","TagType","headlineClasses","cx","prefix","h","class","getElement"],"mappings":"qOAGMA,EAAc,o8GAEdC,EAAQ,WACV,WAAYC,GAAS,uBACjBC,eAAiBC,KAAMF,GAEvBE,KAAKC,QAAU,aAEfD,KAAKE,SAAMC,EAEXH,KAAKI,MAAQ,OAEbJ,KAAKK,MAAQ,UAEbL,KAAKM,UAAW,EAEhBN,KAAKO,MAAQ,QAdP,kEAiBN,IAAMC,EAAUR,KAAKS,QAAQD,QAAQE,cAC/BC,EAAQ,GAAH,OAAMH,EAAN,oEAIXI,eAAoBZ,KAAKS,QAASE,KAtB5B,+BAyBN,IAAME,EAAWb,KAAKE,IAMhBF,KAAKE,KALU,gBAAjBF,KAAKC,SACmB,eAAjBD,KAAKC,QADsB,KAEV,eAAjBD,KAAKC,SAA4B,OAChB,eAAjBD,KAAKC,SAA4B,MAChB,eAAjBD,KAAKC,SAA4B,KAEtCa,EAAkBC,eAAGC,eAAO,YAAaA,eAAO,qBAAD,OAAsBhB,KAAKC,UAAYe,eAAO,mBAAD,OAAoBhB,KAAKI,QAAUY,eAAO,mBAAD,OAAoBhB,KAAKK,QAAUL,KAAKM,UAAYU,eAAO,sBAAsC,YAAfhB,KAAKK,OAAuBW,eAAO,mBAAD,OAAoBhB,KAAKO,SACxR,OAAQU,eAAEJ,EAAS,CAAEK,MAAOJ,GAAmBG,eAAE,OAAQ,SAjCnD,8BAmCM,OAAOE,eAAWnB,UAnCxB,KAqCdH,EAASc,MAAQf","file":"js/stencil-p-headline-entry-js.6a739941.js","sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-356901b5.js';\nimport { i as insertSlottedStyles, c as cx, p as prefix } from './index-5cae920f.js';\n\nconst headlineCss = \":host{display:block}.p-headline{padding:0;margin:0}.p-headline--variant-large-title{font-size:2rem;line-height:1.375;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;font-weight:600}@media (min-width: 760px) and (max-width: 999px){.p-headline--variant-large-title{font-size:2.625rem;line-height:1.2380952381}}@media (min-width: 1000px) and (max-width: 1299px){.p-headline--variant-large-title{font-size:3.25rem;line-height:1.2307692308}}@media (min-width: 1300px) and (max-width: 1759px){.p-headline--variant-large-title{font-size:3.875rem;line-height:1.2258064516}}@media (min-width: 1760px){.p-headline--variant-large-title{font-size:4.5rem;line-height:1.2222222222}}.p-headline--variant-headline-1{font-size:1.75rem;line-height:1.4285714286;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;font-weight:600}@media (min-width: 760px) and (max-width: 999px){.p-headline--variant-headline-1{font-size:2.25rem;line-height:1.3333333333}}@media (min-width: 1000px) and (max-width: 1299px){.p-headline--variant-headline-1{font-size:2.75rem;line-height:1.1818181818}}@media (min-width: 1300px) and (max-width: 1759px){.p-headline--variant-headline-1{font-size:3.25rem;line-height:1.2307692308}}@media (min-width: 1760px){.p-headline--variant-headline-1{font-size:3.75rem;line-height:1.2}}.p-headline--variant-headline-2{font-size:1.5rem;line-height:1.5;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;font-weight:600}@media (min-width: 760px) and (max-width: 999px){.p-headline--variant-headline-2{font-size:1.875rem;line-height:1.3333333333}}@media (min-width: 1000px) and (max-width: 1299px){.p-headline--variant-headline-2{font-size:2.25rem;line-height:1.3333333333}}@media (min-width: 1300px) and (max-width: 1759px){.p-headline--variant-headline-2{font-size:2.625rem;line-height:1.2380952381}}@media (min-width: 1760px){.p-headline--variant-headline-2{font-size:3rem;line-height:1.25}}.p-headline--variant-headline-3{font-size:1.25rem;line-height:1.4;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;font-weight:600}@media (min-width: 760px) and (max-width: 999px){.p-headline--variant-headline-3{font-size:1.5rem;line-height:1.5}}@media (min-width: 1000px) and (max-width: 1299px){.p-headline--variant-headline-3{font-size:1.75rem;line-height:1.4285714286}}@media (min-width: 1300px) and (max-width: 1759px){.p-headline--variant-headline-3{font-size:2rem;line-height:1.375}}@media (min-width: 1760px){.p-headline--variant-headline-3{font-size:2.25rem;line-height:1.3333333333}}.p-headline--variant-headline-4{font-size:1rem;line-height:1.5;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;font-weight:600}@media (min-width: 760px) and (max-width: 999px){.p-headline--variant-headline-4{font-size:1.125rem;line-height:1.5555555556}}@media (min-width: 1000px) and (max-width: 1299px){.p-headline--variant-headline-4{font-size:1.25rem;line-height:1.4}}@media (min-width: 1300px) and (max-width: 1759px){.p-headline--variant-headline-4{font-size:1.375rem;line-height:1.4545454545}}@media (min-width: 1760px){.p-headline--variant-headline-4{font-size:1.5rem;line-height:1.5}}.p-headline--align-left{text-align:left}.p-headline--align-center{text-align:center}.p-headline--align-right{text-align:right}.p-headline--color-default.p-headline--theme-light{color:#000}.p-headline--color-default.p-headline--theme-dark{color:#fff}.p-headline--color-inherit{color:inherit}.p-headline--ellipsis{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\";\n\nconst Headline = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Style of the text. */\n        this.variant = 'headline-1';\n        /** Sets a custom HTML tag depending of the usage of the headline component. */\n        this.tag = undefined;\n        /** Text alignment of the component. */\n        this.align = 'left';\n        /** Basic text color variations depending on theme property. */\n        this.color = 'default';\n        /** Adds an ellipsis to a single line of text if it overflows. */\n        this.ellipsis = false;\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n    }\n    componentDidLoad() {\n        const tagName = this.element.tagName.toLowerCase();\n        const style = `${tagName} a {\n      color: inherit;\n      text-decoration: none;\n    }`;\n        insertSlottedStyles(this.element, style);\n    }\n    render() {\n        const TagType = !this.tag ?\n            this.variant === 'large-title' && 'h1'\n                || this.variant === 'headline-1' && 'h1'\n                || this.variant === 'headline-2' && 'h2'\n                || this.variant === 'headline-3' && 'h3'\n                || this.variant === 'headline-4' && 'h4'\n            : this.tag;\n        const headlineClasses = cx(prefix('headline'), prefix(`headline--variant-${this.variant}`), prefix(`headline--align-${this.align}`), prefix(`headline--color-${this.color}`), this.ellipsis && prefix('headline--ellipsis'), this.color !== 'inherit' && prefix(`headline--theme-${this.theme}`));\n        return (h(TagType, { class: headlineClasses }, h(\"slot\", null)));\n    }\n    get element() { return getElement(this); }\n};\nHeadline.style = headlineCss;\n\nexport { Headline as p_headline };\n"],"sourceRoot":""}