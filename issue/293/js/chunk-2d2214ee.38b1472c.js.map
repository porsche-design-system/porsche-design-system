{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/p-text-list.entry.js"],"names":["TextList","hostRef","registerInstance","this","listType","orderType","theme","prototype","render","TagType","textListClasses","cx","prefix","isNestedList","h","Host","slot","class","Object","defineProperty","get","nestedList","host","closest","enumerable","configurable","getElement"],"mappings":"gHAAA,2FAGIA,EAA0B,WAC1B,SAASA,EAASC,GACdC,eAAiBC,KAAMF,GAEvBE,KAAKC,SAAW,YAEhBD,KAAKE,UAAY,WAEjBF,KAAKG,MAAQ,QAyBjB,OAvBAN,EAASO,UAAUC,OAAS,WACxB,IAAIC,EAA4B,cAAlBN,KAAKC,SAA2B,KAAO,KACjDM,EAAkBC,eAAGC,eAAO,aAAcA,eAAO,cAAgBT,KAAKC,UAAWQ,eAAO,oBAAsBT,KAAKG,OAAQH,KAAKU,cAAgBD,eAAO,sBAC3J,OAAQE,eAAEC,OAAM,CAAEC,KAAMb,KAAKU,cAAgB,UAAYC,eAAEL,EAAS,CAAEQ,MAAOP,GAAmBI,eAAE,OAAQ,SAE9GI,OAAOC,eAAenB,EAASO,UAAW,eAAgB,CACtDa,IAAK,WACD,IAAIC,EAAalB,KAAKmB,KAAKC,QAAQX,eAAO,mBAC1C,OAAOS,IAAc,GAEzBG,YAAY,EACZC,cAAc,IAElBP,OAAOC,eAAenB,EAASO,UAAW,OAAQ,CAC9Ca,IAAK,WAAc,OAAOM,eAAWvB,OACrCqB,YAAY,EACZC,cAAc,IAElBP,OAAOC,eAAenB,EAAU,QAAS,CACrCoB,IAAK,WAAc,MAAO,0SAC1BI,YAAY,EACZC,cAAc,IAEXzB,EAjCmB","file":"js/chunk-2d2214ee.38b1472c.js","sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-07965708.js';\nimport './core-478dae06.js';\nimport { c as cx, p as prefix } from './index-af732401.js';\nvar TextList = /** @class */ (function () {\n    function TextList(hostRef) {\n        registerInstance(this, hostRef);\n        /** The type of the text list. */\n        this.listType = 'unordered';\n        /** The list style type of an ordered list. */\n        this.orderType = 'numbered';\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n    }\n    TextList.prototype.render = function () {\n        var TagType = this.listType === 'unordered' ? 'ul' : 'ol';\n        var textListClasses = cx(prefix('text-list'), prefix(\"text-list--\" + this.listType), prefix(\"text-list--theme-\" + this.theme), this.isNestedList && prefix('text-list--nested'));\n        return (h(Host, { slot: this.isNestedList && 'nested' }, h(TagType, { class: textListClasses }, h(\"slot\", null))));\n    };\n    Object.defineProperty(TextList.prototype, \"isNestedList\", {\n        get: function () {\n            var nestedList = this.host.closest(prefix('text-list-item'));\n            return nestedList && true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextList.prototype, \"host\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextList, \"style\", {\n        get: function () { return \":host{display:block;counter-reset:section!important}.p-text-list{font-size:1rem;line-height:1.5;font-family:Porsche Next,Arial Narrow,Arial,sans-serif;font-weight:400;display:block;padding:0;margin:0;list-style-type:none}.p-text-list--theme-light{color:#000}.p-text-list--theme-dark{color:#fff}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return TextList;\n}());\nexport { TextList as p_text_list };\n"],"sourceRoot":""}