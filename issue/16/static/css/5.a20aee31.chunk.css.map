{"version":3,"sources":["/github/workspace/packages/storefront/src/components/example/exampleVrt.module.scss","/github/workspace/packages/workshop/src/styles/utility/variable/color.scss","/github/workspace/packages/storefront/src/components/example/example.global.scss","/github/workspace/packages/workshop/src/styles/utility/function/rem.function.scss","/github/workspace/packages/workshop/src/styles/utility/mixin/breakpoint.mixin.scss","/github/workspace/packages/workshop/src/styles/utility/mixin/spacing.mixin.scss"],"names":[],"mappings":"AAEA,uBACE,uBAAyB,CAG3B,8CACE,eAAgB,CADlB,qDAII,UAAA,CACA,aAAA,CACA,iBAAA,CACA,UAAA,CACA,wBAAA,CACA,SAAU,CAGd,+CACE,qBClBkB,CDoBpB,8CACE,wBCVuB,CCGtB,uCAEG,YAAa,CAHnB,kCAQI,mBAAA,CACA,iBAAA,CACA,UDvBgB,CCapB,iCAcI,gBChB6B,CDEjC,oHAqBQ,WAAY,CArBpB,oHAwBQ,WAAY,CAxBpB,oHA2BQ,WAAY,CA3BpB,8DAmCM,iBCrC2B,CDEjC,8CAyCM,wBAhDwB,CAO9B,8CA4CM,wBAlDuB,CAM7B,8CA+CM,wBApDsB,CAK5B,8CAkDM,wBAtDqB,CAI3B,qDAuDM,iBCzD2B,CDEjC,gEA8DM,kBAAA,CACA,mBCjE2B,CDsE9B,qCAEG,sCAAwC,CAF3C,qDAKK,wBAhFsB,CA2E3B,qDAQK,wBAlFqB,CA0E1B,qDAWK,wBApFoB,CAyEzB,qDAcK,wBAtFmB,CA6F3B,4CAEI,wBAAA,CACA,yBAAA,CAAA,sBAAA,CAAA,iBAAkB,CAItB,oBACE,YAAa,CADf,wBAII,mBAAA,CACA,wBA5G0B,CAuG9B,qCASI,wBAAA,CACA,UAAA,CACA,WC7G6B,CDgH9B,kCAEG,cClH2B,CDsH9B,0DAEG,UAAA,CACA,WAAwB,CExGxB,yBFqGH,0DAKK,UAAA,CACA,WAA0B,CAAA,CE3G5B,0BFqGH,0DASK,UAAA,CACA,WAA0B,CAAA,CE/G5B,0BFqGH,0DAaK,UAAA,CACA,WAA0B,CAAA,CEnH5B,0BFqGH,0DAiBK,UAAA,CACA,WAA2B,CAAA,CAlBhC,6CG4BC,cAAU,CDjIR,yBFqGH,6CGqCG,YAAU,CAAA,CD1IV,0BFqGH,6CG+CG,cAAU,CAAA,CDpJV,0BFqGH,6CGyDG,YAAU,CAAA,CD9JV,0BFqGH,6CGmEG,cAAU,CAAA","file":"5.a20aee31.chunk.css","sourcesContent":["/**\n * basic hover animation timing (of color and opacity).\n * timing and bezier should be refactored after official Porsche animation guidelines are defined\n */\n/*\n* responsive spacing\n*/\n.vrt {\n  display: block !important; }\n\n.vrt + .vrt {\n  margin-top: 80px; }\n  .vrt + .vrt::before {\n    content: \"\";\n    display: block;\n    position: relative;\n    height: 1px;\n    background-color: #e3e4e4;\n    top: -40px; }\n\n.vrt.light {\n  background-color: #fff; }\n\n.vrt.dark {\n  background-color: #191f22; }\n","// ci colors\n$p-color-white: #fff;\n$p-color-grey-1: #eff0f1;\n$p-color-grey-2: #e3e4e4;\n$p-color-grey-3: #c8cacb;\n$p-color-grey-4: #afb1b2;\n$p-color-grey-5: #959899;\n$p-color-grey-6: #7b7e80;\n$p-color-grey-7: #626669;\n$p-color-grey-8: #494e51;\n$p-color-grey-9: #313639;\n$p-color-grey-9-1: #1c2225;\n$p-color-grey-10: #191f22;\n$p-color-grey-10-1: #12181c;\n$p-color-black: #000;\n\n$p-color-red-1: #d5001c;\n$p-color-red-2: #960014;\n\n$p-color-blue-1: #196a99;\n$p-color-blue-2: #15577e;\n$p-color-blue-3: #2da6d5;\n\n// status colors\n$p-color-status-green: #13d246;\n$p-color-status-yellow: #ff0;\n$p-color-status-orange: #e6950a;\n$p-color-status-red: #d5001c;\n\n// external brand colors\n$p-color-facebook: #3b5998;\n$p-color-google: #cc3732;\n$p-color-youtube: #cd201f;\n$p-color-twitter: #55acee;\n$p-color-pinterest: #cc2127;\n$p-color-instagram: #3f729b;\n$p-color-linkedin: #0077b5;\n","/**\n * basic hover animation timing (of color and opacity).\n * timing and bezier should be refactored after official Porsche animation guidelines are defined\n */\n/*\n* responsive spacing\n*/\n/**\n * Define styles for component representation\n */\n/* ----------  flex component styles ---------- */\n.sg-example-flex--fixed-height .p-flex {\n  height: 180px; }\n\n.sg-example-flex .sg-example-item {\n  padding: 0.25rem 5rem;\n  text-align: center;\n  color: #fff; }\n\n.sg-example-flex .p-flex + .p-flex {\n  margin-top: 0.5rem; }\n\n.sg-example-flex [class*=\"p-flex--align-items-\"] .p-flex__child:not(.p-flex__child--align-self-stretch):nth-child(1n) {\n  height: 40px; }\n\n.sg-example-flex [class*=\"p-flex--align-items-\"] .p-flex__child:not(.p-flex__child--align-self-stretch):nth-child(2n) {\n  height: 80px; }\n\n.sg-example-flex [class*=\"p-flex--align-items-\"] .p-flex__child:not(.p-flex__child--align-self-stretch):nth-child(3n) {\n  height: 54px; }\n\n.sg-example-flex .p-flex--align-items-baseline .p-flex__child {\n  margin-top: 1.5rem; }\n\n.sg-example-flex .p-flex__child:nth-child(1n) {\n  background-color: lightskyblue; }\n\n.sg-example-flex .p-flex__child:nth-child(2n) {\n  background-color: deepskyblue; }\n\n.sg-example-flex .p-flex__child:nth-child(3n) {\n  background-color: dodgerblue; }\n\n.sg-example-flex .p-flex__child:nth-child(4n) {\n  background-color: royalblue; }\n\n.sg-example-flex .p-flex__child--align-self-baseline {\n  margin-top: 1.5rem; }\n\n.sg-example-flex [class*=\"p-flex__child--width\"] .sg-example-item {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem; }\n\n.sg-example-flex--gap .p-flex__child {\n  background-color: transparent !important; }\n  .sg-example-flex--gap .p-flex__child:nth-child(1n) p {\n    background-color: lightskyblue; }\n  .sg-example-flex--gap .p-flex__child:nth-child(2n) p {\n    background-color: deepskyblue; }\n  .sg-example-flex--gap .p-flex__child:nth-child(3n) p {\n    background-color: dodgerblue; }\n  .sg-example-flex--gap .p-flex__child:nth-child(4n) p {\n    background-color: royalblue; }\n\n/* ----------  spacing component styles ---------- */\n.sg-example-spacing-visual .sg-example-item {\n  background-color: lightskyblue;\n  width: fit-content; }\n\n.sg-example-spacing {\n  display: flex; }\n  .sg-example-spacing > div {\n    display: inline-flex;\n    background-color: lightskyblue; }\n  .sg-example-spacing .sg-example-item {\n    background-color: deepskyblue;\n    width: 5rem;\n    height: 5rem; }\n  .sg-example-spacing--negative > div {\n    padding: 2.5rem; }\n  .sg-example-spacing--negative-responsive .sg-example-item {\n    width: 3rem;\n    height: 3rem; }\n    @media (min-width: 760px) {\n      .sg-example-spacing--negative-responsive .sg-example-item {\n        width: 4rem;\n        height: 4rem; } }\n    @media (min-width: 1000px) {\n      .sg-example-spacing--negative-responsive .sg-example-item {\n        width: 5rem;\n        height: 5rem; } }\n    @media (min-width: 1300px) {\n      .sg-example-spacing--negative-responsive .sg-example-item {\n        width: 6rem;\n        height: 6rem; } }\n    @media (min-width: 1760px) {\n      .sg-example-spacing--negative-responsive .sg-example-item {\n        width: 7rem;\n        height: 7rem; } }\n  .sg-example-spacing--negative-responsive > div {\n    padding: 1.5rem; }\n    @media (min-width: 760px) {\n      .sg-example-spacing--negative-responsive > div {\n        padding: 2rem; } }\n    @media (min-width: 1000px) {\n      .sg-example-spacing--negative-responsive > div {\n        padding: 2.5rem; } }\n    @media (min-width: 1300px) {\n      .sg-example-spacing--negative-responsive > div {\n        padding: 3rem; } }\n    @media (min-width: 1760px) {\n      .sg-example-spacing--negative-responsive > div {\n        padding: 3.5rem; } }\n","@import \"../variable/global\";\n@import \"strip-units.function\";\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $p-global-rem-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n","$p-breakpoints: (\n  'xxs': 0,\n  'xs': 480px,\n  's': 760px,\n  'm': 1000px,\n  'l': 1300px,\n  'xl': 1760px\n);\n\n@mixin breakpoint($min-breakpoint: null, $max-breakpoint: null) {\n  @if ($min-breakpoint and $max-breakpoint) {\n    @if map-has-key($p-breakpoints, $min-breakpoint) and map-has-key($p-breakpoints, $max-breakpoint) {\n      @media (min-width: #{map-get($p-breakpoints, $min-breakpoint)}) and (max-width: #{map-get($p-breakpoints, $max-breakpoint) - 1px}) {\n        @content;\n      }\n    } @else {\n      @if unitless($min-breakpoint) {\n        $min-breakpoint: $min-breakpoint + 0;\n      }\n      @if unitless($max-breakpoint) {\n        $max-breakpoint: $max-breakpoint + 0;\n      }\n\n      @media (min-width: $min-breakpoint) and (max-width: $max-breakpoint) {\n        @content;\n      }\n    }\n  } @else if ($min-breakpoint) {\n    @if map-has-key($p-breakpoints, $min-breakpoint) {\n      @media (min-width: #{map-get($p-breakpoints, $min-breakpoint)}) {\n        @content;\n      }\n    } @else {\n      @if unitless($min-breakpoint) {\n        $min-breakpoint: $min-breakpoint + 0;\n      }\n\n      @media (min-width: $min-breakpoint) {\n        @content;\n      }\n    }\n  }\n}\n","@import \"../variable/spacing\";\n@import \"./breakpoint.mixin\";\n\n/*\n* responsive spacing\n*/\n@mixin p-spacing-a($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-a;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-a;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-a-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-a-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-a-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-a-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-a-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-a-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-a-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-a-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-b($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-b;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-b;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-b-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-b-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-b-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-b-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-b-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-b-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-b-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-b-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-c($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-c;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-c;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-c-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-c-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-c-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-c-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-c-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-c-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-c-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-c-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-d($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-d;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-d;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-d-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-d-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-d-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-d-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-d-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-d-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-d-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-d-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-e($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-e;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-e;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-e-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-e-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-e-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-e-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-e-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-e-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-e-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-e-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-f($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-f;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-f;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-f-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-f-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-f-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-f-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-f-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-f-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-f-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-f-xl;\n      }\n    }\n  }\n}\n\n@mixin p-spacing-g($type: \"margin\", $direction: \"top\", $sign: \"+\") {\n  @if $direction == \"\" {\n    #{$type}: #{$sign}$p-spacing-g;\n  } @else {\n    #{$type}: {\n      #{$direction}: #{$sign}$p-spacing-g;\n    }\n  }\n\n  @include breakpoint(\"s\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-g-s;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-g-s;\n      }\n    }\n  }\n\n  @include breakpoint(\"m\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-g-m;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-g-m;\n      }\n    }\n  }\n\n  @include breakpoint(\"l\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-g-l;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-g-l;\n      }\n    }\n  }\n\n  @include breakpoint(\"xl\") {\n    @if $direction == \"\" {\n      #{$type}: #{$sign}$p-spacing-g-xl;\n    } @else {\n      #{$type}: {\n        #{$direction}: #{$sign}$p-spacing-g-xl;\n      }\n    }\n  }\n}\n"]}