(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d01f6"],{6743:function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"vmark"},[t("ComponentHeading",{attrs:{name:"Pin Code"}}),e._m(0),t("p",[e._v("A few things to note:")]),e._m(1),t("TableOfContents"),t("h2",[e._v("Basic")]),e._m(2),t("Playground",{attrs:{markup:e.hideLabelMarkup,config:e.config}},[t("PlaygroundSelect",{attrs:{values:e.hideLabels,name:"hideLabel"},model:{value:e.hideLabel,callback:function(t){e.hideLabel=t},expression:"hideLabel"}})],1),t("h2",[e._v("With description text")]),e._m(3),t("Playground",{attrs:{markup:e.withDescriptionText,config:e.config}}),t("h2",[e._v("Length")]),e._m(4),t("Playground",{attrs:{markup:e.lengthMarkup,config:e.config}},[t("PlaygroundSelect",{attrs:{values:e.lengths},model:{value:e.length,callback:function(t){e.length=t},expression:"length"}})],1),t("h2",[e._v("Type")]),e._m(5),t("Playground",{attrs:{markup:e.typeMarkup,config:e.config}},[t("PlaygroundSelect",{attrs:{values:e.types},model:{value:e.type,callback:function(t){e.type=t},expression:"type"}})],1),t("h2",[e._v("Validation states")]),e._m(6),t("Playground",{attrs:{markup:e.stateMarkup,config:e.config}},[t("PlaygroundSelect",{attrs:{values:e.states,name:"state"},model:{value:e.state,callback:function(t){e.state=t},expression:"state"}})],1),t("h2",[e._v("Disabled")]),t("Playground",{attrs:{markup:e.disabledMarkup,config:e.config}}),t("h3",[t("A11yIcon"),e._v(" Accessibility hints")],1),e._m(7),t("h2",[e._v("Loading")]),t("Playground",{attrs:{markup:e.loadingMarkup,config:e.config}}),t("h2",[e._v("Required")]),t("Playground",{attrs:{markup:e.requiredMarkup,config:e.config}}),t("h2",[e._v("Slots")]),e._m(8),t("Playground",{attrs:{markup:e.slots,config:e.config}}),t("h2",[e._v("Framework Implementation (within form)")]),e._m(9),t("Playground",{attrs:{frameworkMarkup:e.formExample,config:e.config}},[t("form",{on:{submit:function(t){return t.preventDefault(),e.onSubmit.apply(null,arguments)}}},[t("p-pin-code",{attrs:{theme:e.theme,label:"Some Label",name:"pin-code"}}),t("p-button",{staticStyle:{margin:"1rem 0"},attrs:{theme:e.theme,type:"submit"}},[e._v("Submit")])],1),t("p-text",{attrs:{theme:e.theme}},[e._v("Last submitted data: "+e._s(e.submittedValue))])],1),t("h2",[e._v("Framework implementation (controlled)")]),e._m(10),t("Playground",{attrs:{frameworkMarkup:e.eventHandlingExample,config:e.config}},[t("p-pin-code",{attrs:{theme:e.theme,label:"Some Label",value:e.currentValueControlled},on:{update:e.onUpdate}}),t("p-text",{staticStyle:{margin:"1rem 0"},attrs:{theme:e.theme}},[e._v("Current value: "+e._s(e.currentValueControlled))]),t("p-text",{attrs:{theme:e.theme}},[e._v("Completely filled: "+e._s(e.isComplete))])],1),t("h2",[e._v("Copy+Paste and autocomplete")]),e._m(11),e._m(12),e._m(13),e._m(14),t("Playground",{attrs:{markup:e.hideLabelMarkup,config:e.config}},[t("PlaygroundSelect",{attrs:{values:e.hideLabels,name:"hideLabel"},model:{value:e.hideLabel,callback:function(t){e.hideLabel=t},expression:"hideLabel"}})],1)],1)},a=[function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("The "),t("code",[e._v("p-pin-code")]),e._v(" component is optimized for entering sequences of digits. The most common use case is for entering one-time-passwords (OTP) or pin codes. The input fields allow only one digit at a time. When a digit is entered, the focus shifts automatically to the next input, until every input is filled.")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("ul",[t("li",[e._v("Only digits can be entered.")]),t("li",[e._v("Only one digit can be entered per input.")]),t("li",[e._v("Pressing "),t("code",[e._v("Delete")]),e._v(" or "),t("code",[e._v("Backspace")]),e._v(": If the focussed input is blank and "),t("code",[e._v("Delete")]),e._v("/"),t("code",[e._v("Backspace")]),e._v(" is pressed the focus transfers to the next/previous input, and clears the value of the next/previous input (if any). This avoids the need to explicitly "),t("code",[e._v("Shift+Tab & Delete")]),e._v("/ "),t("code",[e._v("Tab & Backspace")]),e._v(".")])])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("A "),t("code",[e._v("label")]),e._v(" is a caption which informs the user what information a particular form field is asking for. The "),t("code",[e._v("p-pin-code")]),e._v(" component can be used with or without a label, but it's recommended to keep the label visible for better accessibility whenever possible. When used without a label, it's best practice to provide a descriptive label text for screen readers.")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("A description text can be added to explain the meaning of the form field. It's meant to be a textual enhancement of the label text and is technically related to the "),t("code",[e._v("hide-label")]),e._v(" property.")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("By default, the "),t("code",[e._v("p-pin-code")]),e._v(" component renders four input fields. For other security codes you can choose to set the "),t("code",[e._v("length")]),e._v(" prop between "),t("code",[e._v("1")]),e._v(" and "),t("code",[e._v("6")]),e._v(".")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("When collecting private or sensitive information, the entered value might be masked. The security code can be masked by setting the prop "),t("code",[e._v("type")]),e._v(" to "),t("code",[e._v("password")]),e._v(". Even with "),t("code",[e._v("type=password")]),e._v(", the input fields of the "),t("code",[e._v("p-pin-code")]),e._v(" component allow digits only.")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("The "),t("code",[e._v("p-pin-code")]),e._v(" component supports the visualisation of inline validation. The "),t("code",[e._v("message")]),e._v(" is colored and visible/hidden depending on the defined "),t("code",[e._v("state")]),e._v(".")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("In general, you should "),t("strong",[e._v("prevent")]),e._v(" using the "),t("code",[e._v('disabled="true"')]),e._v(" state. Disabled elements are not reachable (focusable) anymore and can be missed by screen reader users. They can be confusing for sighted users as well by not pointing out why these elements are disabled. A good practice when to use the disabled state is during "),t("strong",[e._v("form submission")]),e._v(" to prevent changes while this process is performed.")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("Sometimes it's useful to be able to render markup (e.g. an anchor tag) for "),t("code",[e._v("label")]),e._v(", "),t("code",[e._v("description")]),e._v(" or "),t("code",[e._v("message")]),e._v(". Therefore, a named slot can be used. Make sure "),t("strong",[e._v("not")]),e._v(" to define the corresponding property on the host element when a named slot is used (because a property definition is preferred over a named slot). For named slots only "),t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content"}},[e._v("phrasing content")]),e._v(" is allowed.")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("When used within a form element, the "),t("code",[e._v("p-pin-code")]),e._v(" component creates a native hidden input in light DOM to process the "),t("code",[e._v("p-pin-code")]),e._v("'s value. This is required due to the constraints of shadow DOM boundaries. To ensure proper submission of the form, it's required to provide an individual "),t("code",[e._v("name")]),e._v(" prop to the "),t("code",[e._v("p-pin-code")]),e._v(" component. The prop will be shared with the hidden input in light DOM', enabling the "),t("code",[e._v("p-pin-code")]),e._v("'s value to be included in the form's data when it is submitted.")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("We do not envision a lot of scenarios where you would need this level of control, however the "),t("code",[e._v("p-pin-code")]),e._v(" can be used as a controlled component. This means it does not contain any internal state, and you got full control over its behavior. Any change of the input's values triggers a custom update event and the value is updated immediately. The prop "),t("code",[e._v("value")]),e._v(" is an array of strings synchronized with the input's values.")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("By default, only one input can be changed at a time. The "),t("code",[e._v("p-pin-code")]),e._v(" component also supports copying and pasting a value and OTP auto-suggestion on mobile.")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("The "),t("code",[e._v("p-pin-code")]),e._v(" component performs basic validation of the pasted value:")])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("ul",[t("li",[e._v("If the pasted string is too long the "),t("code",[e._v("p-pin-code")]),e._v(" attempts to fill in the other inputs.")]),t("li",[e._v("If the pasted value contains whitespaces, these will be removed.")]),t("li",[e._v("If the value contains other characters than digits, the value can not be pasted.")])])},function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",[e._v("Try copy+paste "),t("code",[e._v("1234")]),e._v(" into any of the inputs in the example below.")])}],s=n("ade3"),i=(n("7b4b"),n("2b0e")),r=n("2fe1"),l=n("526d"),c=n("70ab");const d=[1,2,3,4,5,6];var p=n("d257"),u=function(e,t,n,o){var a,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(i=(s<3?a(i):s>3?a(t,n,i):a(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i};let h=class extends i["a"]{constructor(...e){super(...e),Object(s["a"])(this,"config",{themeable:!0}),Object(s["a"])(this,"eventHandlingUrl",Object(p["h"])("event-handling")),Object(s["a"])(this,"hideLabel",!1),Object(s["a"])(this,"hideLabels",[!1,!0,"{ base: true, l: false }"]),Object(s["a"])(this,"withDescriptionText",'<p-pin-code label="Some label" description="Some description"></p-pin-code>'),Object(s["a"])(this,"length",4),Object(s["a"])(this,"lengths",d),Object(s["a"])(this,"type","number"),Object(s["a"])(this,"types",["number","password"]),Object(s["a"])(this,"state","error"),Object(s["a"])(this,"states",c["d"]),Object(s["a"])(this,"disabledMarkup",'<p-pin-code label="Some label" disabled="true"></p-pin-code>'),Object(s["a"])(this,"loadingMarkup",'<p-pin-code label="Some label" loading="true"></p-pin-code>'),Object(s["a"])(this,"requiredMarkup",'<p-pin-code label="Some label" required="true"></p-pin-code>'),Object(s["a"])(this,"slots",'<p-pin-code state="error">\n    <span slot="label" id="some-label-id">\n      Some label with a <a href="https://designsystem.porsche.com">link</a>.\n    </span>\n    <span slot="description" id="some-description-id">\n      Some description with a <a href="https://designsystem.porsche.com">link</a>.\n    </span>\n    <span slot="message" id="some-message-id">\n      Some error message with a <a href="https://designsystem.porsche.com">link</a>.\n    </span>\n  </p-pin-code>'),Object(s["a"])(this,"currentValueControlled",""),Object(s["a"])(this,"isComplete",!1),Object(s["a"])(this,"eventHandlingExample",Object(l["k"])("example-controlled")),Object(s["a"])(this,"submittedValue","none"),Object(s["a"])(this,"formExample",Object(l["k"])("default"))}get hideLabelMarkup(){return`<p-pin-code label="Some label" hide-label="${this.hideLabel}"></p-pin-code>`}get lengthMarkup(){return`<p-pin-code label="Some label" length="${this.length}"></p-pin-code>`}get typeMarkup(){return`<p-pin-code label="Some label" type="${this.type}"></p-pin-code>`}get stateMarkup(){const e=`message="${"none"!==this.state?`Some ${this.state} validation message.`:""}"`;return`<p-pin-code label="Some label" state="${this.state}" ${e}></p-pin-code>`}onUpdate(e){this.currentValueControlled=e.detail.value,this.isComplete=e.detail.isComplete}onSubmit(e){const t=new FormData(e.target);this.submittedValue=Array.from(t.values()).join()||"none"}get theme(){return this.$store.getters.playgroundTheme}};h=u([r["b"]],h);var v=h,_=v,m=n("2877"),f=Object(m["a"])(_,o,a,!1,null,null,null);t["default"]=f.exports}}]);
//# sourceMappingURL=chunk-2d0d01f6.97815c3b.js.map