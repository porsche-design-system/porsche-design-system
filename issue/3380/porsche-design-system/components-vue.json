{"@porsche-design-system/components-vue/package.json":"{\n  \"name\": \"@porsche-design-system/components-vue\",\n  \"version\": \"3.17.0-rc.0\",\n  \"description\": \"Porsche Design System is a component library designed to help developers create the best experience for software or services distributed by Dr. Ing. h.c. F. Porsche AG.\",\n  \"keywords\": [\n    \"porsche\",\n    \"design\",\n    \"system\",\n    \"web\",\n    \"component\",\n    \"library\",\n    \"vue\",\n    \"js\"\n  ],\n  \"scope\": \"@porsche-design-system\",\n  \"author\": \"Dr. Ing. h.c. F. Porsche AG\",\n  \"license\": \"SEE LICENSE IN LICENSE\",\n  \"homepage\": \"https://designsystem.porsche.com\",\n  \"dependencies\": {\n    \"./../components-js\": \"3.17.0-rc.0\"\n  },\n  \"peerDependencies\": {\n    \"vue\": \">=3.0.0 <4.0.0\"\n  },\n  \"main\": \"cjs/public-api.cjs\",\n  \"module\": \"esm/public-api.mjs\",\n  \"types\": \"esm/public-api.d.ts\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"types\": \"./esm/public-api.d.ts\",\n      \"import\": \"./esm/public-api.mjs\",\n      \"default\": \"./cjs/public-api.cjs\"\n    },\n    \"./jsdom-polyfill\": {\n      \"types\": \"./jsdom-polyfill/index.d.ts\",\n      \"default\": \"./jsdom-polyfill/index.cjs\"\n    },\n    \"./partials\": {\n      \"types\": \"./partials/index.d.ts\",\n      \"module\": \"./partials/index.js\",\n      \"default\": \"./partials/index.cjs\"\n    },\n    \"./styles\": {\n      \"sass\": \"./styles/_index.scss\",\n      \"types\": \"./styles/esm/index.d.ts\",\n      \"import\": \"./styles/esm/index.mjs\",\n      \"default\": \"./styles/cjs/index.cjs\"\n    },\n    \"./testing\": {\n      \"types\": \"./testing/index.d.ts\",\n      \"default\": \"./testing/index.cjs\"\n    }\n  }\n}\n","@porsche-design-system/components-vue/esm/PorscheDesignSystemProvider.vue.d.ts":"import type { Theme } from './lib/types';\ntype Props = {\n    prefix?: string;\n    cdn?: 'auto' | 'cn';\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<Props>, {\n    prefix: string;\n    theme: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<Props>, {\n    prefix: string;\n    theme: string;\n}>>>, {\n    prefix: string;\n    theme: Theme;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\n\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/PorscheDesignSystemProvider.vue.mjs":"import { defineComponent as i, ref as p, onUpdated as f, provide as o, renderSlot as m } from \"vue\";\nimport { load as s } from \"./../../components-js\";\nimport { prefixInjectionKey as d, themeInjectionKey as a } from \"./utils.mjs\";\nconst _ = /* @__PURE__ */ i({\n  __name: \"PorscheDesignSystemProvider\",\n  props: {\n    prefix: { default: \"\" },\n    cdn: {},\n    theme: { default: \"light\" }\n  },\n  setup(r) {\n    const t = p(\"light\"), e = r;\n    return f(() => {\n      t.value = e.theme;\n    }), s(e), o(d, e.prefix), o(a, t), (n, c) => m(n.$slots, \"default\");\n  }\n});\nexport {\n  _ as default\n};\n","@porsche-design-system/components-vue/esm/PorscheDesignSystemProvider.vue2.mjs":"import f from \"./PorscheDesignSystemProvider.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/plugin.d.ts":"import type { App, InjectionKey } from 'vue';\nexport type PorscheDesignSystemPluginOptions = {\n    prefix?: string;\n    extends?: Record<string, unknown>;\n};\nexport type PorscheDesignSystemPlugin = {\n    [key: string]: any;\n    install: (app: App, options?: PorscheDesignSystemPluginOptions) => void;\n};\nexport declare const porscheDesignSystemSymbol: InjectionKey<PorscheDesignSystemPlugin>;\nexport declare function usePorscheDesignSystemPlugin(): PorscheDesignSystemPlugin;\nexport declare function createPorscheDesignSystem(options?: {\n    prefix: string;\n}): PorscheDesignSystemPlugin;\n","@porsche-design-system/components-vue/esm/plugin.mjs":"import { inject as n, ref as c } from \"vue\";\nimport { componentsReady as i, load as m } from \"./../../components-js\";\nimport { prefixInjectionKey as a } from \"./utils.mjs\";\nconst t = Symbol();\nfunction u() {\n  const e = n(t);\n  if (!e)\n    throw new Error(\n      \"[Porsche Design System Vue] No plugin was provided. Make sure to create one via `createPorscheDesignSystem()`.\"\n    );\n  return e;\n}\nfunction g(e = { prefix: \"\" }) {\n  const r = c(!1), s = {\n    options: e,\n    isPorscheDesignSystemLoaded: r,\n    componentsReady: i,\n    async install(o) {\n      r.value || (m({ prefix: e.prefix }), await i(), r.value = !0), o.provide(a, e.prefix), o.provide(t, s);\n    }\n  };\n  return s;\n}\nexport {\n  g as createPorscheDesignSystem,\n  t as porscheDesignSystemSymbol,\n  u as usePorscheDesignSystemPlugin\n};\n","@porsche-design-system/components-vue/esm/public-api.d.ts":"export { componentsReady } from './../../components-js';\nexport * from './lib/components';\nexport * from './lib/types';\nexport { useToastManager } from './utils';\nexport { default as PorscheDesignSystemProvider } from './PorscheDesignSystemProvider.vue';\nexport { createPorscheDesignSystem, usePorscheDesignSystemPlugin } from './plugin';\n","@porsche-design-system/components-vue/esm/public-api.mjs":"import { componentsReady as o } from \"./../../components-js\";\nimport { default as a } from \"./lib/components/AccordionWrapper.vue.mjs\";\nimport { default as l } from \"./lib/components/BannerWrapper.vue.mjs\";\nimport { default as s } from \"./lib/components/ButtonWrapper.vue.mjs\";\nimport { default as u } from \"./lib/components/ButtonGroupWrapper.vue.mjs\";\nimport { default as x } from \"./lib/components/ButtonPureWrapper.vue.mjs\";\nimport { default as i } from \"./lib/components/ButtonTileWrapper.vue.mjs\";\nimport { default as T } from \"./lib/components/CanvasWrapper.vue.mjs\";\nimport { default as S } from \"./lib/components/CarouselWrapper.vue.mjs\";\nimport { default as b } from \"./lib/components/CheckboxWrapperWrapper.vue.mjs\";\nimport { default as y } from \"./lib/components/ContentWrapperWrapper.vue.mjs\";\nimport { default as M } from \"./lib/components/CrestWrapper.vue.mjs\";\nimport { default as B } from \"./lib/components/DisplayWrapper.vue.mjs\";\nimport { default as L } from \"./lib/components/DividerWrapper.vue.mjs\";\nimport { default as H } from \"./lib/components/FieldsetWrapper.vue.mjs\";\nimport { default as D } from \"./lib/components/FieldsetWrapperWrapper.vue.mjs\";\nimport { default as R } from \"./lib/components/FlexWrapper.vue.mjs\";\nimport { default as G } from \"./lib/components/FlexItemWrapper.vue.mjs\";\nimport { default as z } from \"./lib/components/FlyoutWrapper.vue.mjs\";\nimport { default as A } from \"./lib/components/FlyoutMultilevelWrapper.vue.mjs\";\nimport { default as j } from \"./lib/components/FlyoutMultilevelItemWrapper.vue.mjs\";\nimport { default as J } from \"./lib/components/GridWrapper.vue.mjs\";\nimport { default as Q } from \"./lib/components/GridItemWrapper.vue.mjs\";\nimport { default as V } from \"./lib/components/HeadingWrapper.vue.mjs\";\nimport { default as Y } from \"./lib/components/HeadlineWrapper.vue.mjs\";\nimport { default as _ } from \"./lib/components/IconWrapper.vue.mjs\";\nimport { default as ee } from \"./lib/components/InlineNotificationWrapper.vue.mjs\";\nimport { default as oe } from \"./lib/components/LinkWrapper.vue.mjs\";\nimport { default as ae } from \"./lib/components/LinkPureWrapper.vue.mjs\";\nimport { default as le } from \"./lib/components/LinkSocialWrapper.vue.mjs\";\nimport { default as se } from \"./lib/components/LinkTileWrapper.vue.mjs\";\nimport { default as ue } from \"./lib/components/LinkTileModelSignatureWrapper.vue.mjs\";\nimport { default as xe } from \"./lib/components/LinkTileProductWrapper.vue.mjs\";\nimport { default as ie } from \"./lib/components/MarqueWrapper.vue.mjs\";\nimport { default as Te } from \"./lib/components/ModalWrapper.vue.mjs\";\nimport { default as Se } from \"./lib/components/ModelSignatureWrapper.vue.mjs\";\nimport { default as be } from \"./lib/components/MultiSelectWrapper.vue.mjs\";\nimport { default as ye } from \"./lib/components/MultiSelectOptionWrapper.vue.mjs\";\nimport { default as Me } from \"./lib/components/OptgroupWrapper.vue.mjs\";\nimport { default as Be } from \"./lib/components/PaginationWrapper.vue.mjs\";\nimport { default as Le } from \"./lib/components/PinCodeWrapper.vue.mjs\";\nimport { default as He } from \"./lib/components/PopoverWrapper.vue.mjs\";\nimport { default as De } from \"./lib/components/RadioButtonWrapperWrapper.vue.mjs\";\nimport { default as Re } from \"./lib/components/ScrollerWrapper.vue.mjs\";\nimport { default as Ge } from \"./lib/components/SegmentedControlWrapper.vue.mjs\";\nimport { default as ze } from \"./lib/components/SegmentedControlItemWrapper.vue.mjs\";\nimport { default as Ae } from \"./lib/components/SelectWrapper.vue.mjs\";\nimport { default as je } from \"./lib/components/SelectOptionWrapper.vue.mjs\";\nimport { default as Je } from \"./lib/components/SelectWrapperWrapper.vue.mjs\";\nimport { default as Qe } from \"./lib/components/SpinnerWrapper.vue.mjs\";\nimport { default as Ve } from \"./lib/components/StepperHorizontalWrapper.vue.mjs\";\nimport { default as Ye } from \"./lib/components/StepperHorizontalItemWrapper.vue.mjs\";\nimport { default as _e } from \"./lib/components/SwitchWrapper.vue.mjs\";\nimport { default as et } from \"./lib/components/TableWrapper.vue.mjs\";\nimport { default as ot } from \"./lib/components/TableBodyWrapper.vue.mjs\";\nimport { default as at } from \"./lib/components/TableCellWrapper.vue.mjs\";\nimport { default as lt } from \"./lib/components/TableHeadWrapper.vue.mjs\";\nimport { default as st } from \"./lib/components/TableHeadCellWrapper.vue.mjs\";\nimport { default as ut } from \"./lib/components/TableHeadRowWrapper.vue.mjs\";\nimport { default as xt } from \"./lib/components/TableRowWrapper.vue.mjs\";\nimport { default as it } from \"./lib/components/TabsWrapper.vue.mjs\";\nimport { default as Tt } from \"./lib/components/TabsBarWrapper.vue.mjs\";\nimport { default as St } from \"./lib/components/TabsItemWrapper.vue.mjs\";\nimport { default as bt } from \"./lib/components/TagWrapper.vue.mjs\";\nimport { default as yt } from \"./lib/components/TagDismissibleWrapper.vue.mjs\";\nimport { default as Mt } from \"./lib/components/TextWrapper.vue.mjs\";\nimport { default as Bt } from \"./lib/components/TextFieldWrapperWrapper.vue.mjs\";\nimport { default as Lt } from \"./lib/components/TextListWrapper.vue.mjs\";\nimport { default as Ht } from \"./lib/components/TextListItemWrapper.vue.mjs\";\nimport { default as Dt } from \"./lib/components/TextareaWrapperWrapper.vue.mjs\";\nimport { default as Rt } from \"./lib/components/ToastWrapper.vue.mjs\";\nimport { default as Gt } from \"./lib/components/WordmarkWrapper.vue.mjs\";\nimport { useToastManager as zt } from \"./utils.mjs\";\nimport { default as At } from \"./PorscheDesignSystemProvider.vue.mjs\";\nimport { createPorscheDesignSystem as jt, usePorscheDesignSystemPlugin as Et } from \"./plugin.mjs\";\nexport {\n  a as PAccordion,\n  l as PBanner,\n  s as PButton,\n  u as PButtonGroup,\n  x as PButtonPure,\n  i as PButtonTile,\n  T as PCanvas,\n  S as PCarousel,\n  b as PCheckboxWrapper,\n  y as PContentWrapper,\n  M as PCrest,\n  B as PDisplay,\n  L as PDivider,\n  H as PFieldset,\n  D as PFieldsetWrapper,\n  R as PFlex,\n  G as PFlexItem,\n  z as PFlyout,\n  A as PFlyoutMultilevel,\n  j as PFlyoutMultilevelItem,\n  J as PGrid,\n  Q as PGridItem,\n  V as PHeading,\n  Y as PHeadline,\n  _ as PIcon,\n  ee as PInlineNotification,\n  oe as PLink,\n  ae as PLinkPure,\n  le as PLinkSocial,\n  se as PLinkTile,\n  ue as PLinkTileModelSignature,\n  xe as PLinkTileProduct,\n  ie as PMarque,\n  Te as PModal,\n  Se as PModelSignature,\n  be as PMultiSelect,\n  ye as PMultiSelectOption,\n  Me as POptgroup,\n  Be as PPagination,\n  Le as PPinCode,\n  He as PPopover,\n  De as PRadioButtonWrapper,\n  Re as PScroller,\n  Ge as PSegmentedControl,\n  ze as PSegmentedControlItem,\n  Ae as PSelect,\n  je as PSelectOption,\n  Je as PSelectWrapper,\n  Qe as PSpinner,\n  Ve as PStepperHorizontal,\n  Ye as PStepperHorizontalItem,\n  _e as PSwitch,\n  et as PTable,\n  ot as PTableBody,\n  at as PTableCell,\n  lt as PTableHead,\n  st as PTableHeadCell,\n  ut as PTableHeadRow,\n  xt as PTableRow,\n  it as PTabs,\n  Tt as PTabsBar,\n  St as PTabsItem,\n  bt as PTag,\n  yt as PTagDismissible,\n  Mt as PText,\n  Bt as PTextFieldWrapper,\n  Lt as PTextList,\n  Ht as PTextListItem,\n  Dt as PTextareaWrapper,\n  Rt as PToast,\n  Gt as PWordmark,\n  At as PorscheDesignSystemProvider,\n  o as componentsReady,\n  jt as createPorscheDesignSystem,\n  Et as usePorscheDesignSystemPlugin,\n  zt as useToastManager\n};\n","@porsche-design-system/components-vue/esm/utils.d.ts":"import type { InjectionKey, Ref } from 'vue';\nimport type { Theme, ToastMessage } from './lib/types';\nexport declare const prefixInjectionKey: InjectionKey<string>;\nexport declare const themeInjectionKey: InjectionKey<Ref<Theme>>;\nexport declare const usePrefix: (tagName: string) => string;\nexport declare const syncProperties: <T extends HTMLElement>(elementRef: Ref<T | undefined>, props: Partial<T>) => void;\nexport declare const addEventListenerToElementRef: <T extends HTMLElement, E extends string>(elementRef: Ref<T | undefined>, eventName: E, emit: (eventName: E, detail: any) => void) => void;\nexport declare const useToastManager: () => {\n    addMessage: (message: ToastMessage) => void;\n};\n","@porsche-design-system/components-vue/esm/utils.mjs":"import { inject as o } from \"vue\";\nconst r = Symbol(\"pdsPrefix\"), a = Symbol(\"pdsTheme\"), i = (t) => {\n  const e = o(r);\n  if (e === void 0)\n    throw new Error(\"It appears the <PorscheDesignSystemProvider /> is missing. Make sure to wrap your App in it.\");\n  return e ? e + \"-\" + t : t;\n}, d = (t, e) => {\n  const s = t.value;\n  Object.keys(e).forEach((n) => s[n] = e[n]);\n}, m = (t, e, s) => {\n  t.value.addEventListener(e, (n) => {\n    s(e, n.detail);\n  });\n}, u = () => {\n  const t = i(\"p-toast\");\n  return {\n    addMessage: (e) => {\n      const s = document.body.querySelector(t);\n      customElements.whenDefined(t).then(() => s.addMessage(e));\n    }\n  };\n};\nexport {\n  m as addEventListenerToElementRef,\n  r as prefixInjectionKey,\n  d as syncProperties,\n  a as themeInjectionKey,\n  i as usePrefix,\n  u as useToastManager\n};\n","@porsche-design-system/components-vue/styles/_index.scss":"@import './../../components-js/styles';\n","@porsche-design-system/components-vue/styles/package.json":"{\n  \"main\": \"cjs/index.cjs\",\n  \"module\": \"esm/index.mjs\",\n  \"types\": \"esm/index.d.ts\",\n  \"sideEffects\": false\n}\n","@porsche-design-system/components-vue/esm/lib/types.d.ts":"export type Booleanish = boolean | \"true\" | \"false\";\nexport type AriaAttributes = {\n    /** Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application. */\n    \"aria-activedescendant\"?: string | undefined;\n    /** Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute. */\n    \"aria-atomic\"?: Booleanish | undefined;\n    /**\n     * Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\n     * presented if they are made.\n     */\n    \"aria-autocomplete\"?: \"none\" | \"inline\" | \"list\" | \"both\" | undefined;\n    /** Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user. */\n    /**\n     * Defines a string value that labels the current element, which is intended to be converted into Braille.\n     * @see aria-label.\n     */\n    \"aria-braillelabel\"?: string | undefined;\n    /**\n     * Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n     * @see aria-roledescription.\n     */\n    \"aria-brailleroledescription\"?: string | undefined;\n    \"aria-busy\"?: Booleanish | undefined;\n    /**\n     * Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n     * @see aria-pressed @see aria-selected.\n     */\n    \"aria-checked\"?: boolean | \"false\" | \"mixed\" | \"true\" | undefined;\n    /**\n     * Defines the total number of columns in a table, grid, or treegrid.\n     * @see aria-colindex.\n     */\n    \"aria-colcount\"?: number | undefined;\n    /**\n     * Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n     * @see aria-colcount @see aria-colspan.\n     */\n    \"aria-colindex\"?: number | undefined;\n    /**\n     * Defines a human readable text alternative of aria-colindex.\n     * @see aria-rowindextext.\n     */\n    \"aria-colindextext\"?: string | undefined;\n    /**\n     * Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n     * @see aria-colindex @see aria-rowspan.\n     */\n    \"aria-colspan\"?: number | undefined;\n    /**\n     * Identifies the element (or elements) whose contents or presence are controlled by the current element.\n     * @see aria-owns.\n     */\n    \"aria-controls\"?: string | undefined;\n    /** Indicates the element that represents the current item within a container or set of related elements. */\n    \"aria-current\"?: boolean | \"false\" | \"true\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\" | undefined;\n    /**\n     * Identifies the element (or elements) that describes the object.\n     * @see aria-labelledby\n     */\n    \"aria-describedby\"?: string | undefined;\n    /**\n     * Defines a string value that describes or annotates the current element.\n     * @see related aria-describedby.\n     */\n    \"aria-description\"?: string | undefined;\n    /**\n     * Identifies the element that provides a detailed, extended description for the object.\n     * @see aria-describedby.\n     */\n    \"aria-details\"?: string | undefined;\n    /**\n     * Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n     * @see aria-hidden @see aria-readonly.\n     */\n    \"aria-disabled\"?: Booleanish | undefined;\n    /**\n     * Indicates what functions can be performed when a dragged object is released on the drop target.\n     * @deprecated in ARIA 1.1\n     */\n    \"aria-dropeffect\"?: \"none\" | \"copy\" | \"execute\" | \"link\" | \"move\" | \"popup\" | undefined;\n    /**\n     * Identifies the element that provides an error message for the object.\n     * @see aria-invalid @see aria-describedby.\n     */\n    \"aria-errormessage\"?: string | undefined;\n    /** Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed. */\n    \"aria-expanded\"?: Booleanish | undefined;\n    /**\n     * Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\n     * allows assistive technology to override the general default of reading in document source order.\n     */\n    \"aria-flowto\"?: string | undefined;\n    /**\n     * Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n     * @deprecated in ARIA 1.1\n     */\n    \"aria-grabbed\"?: Booleanish | undefined;\n    /** Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element. */\n    \"aria-haspopup\"?: boolean | \"false\" | \"true\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\" | undefined;\n    /**\n     * Indicates whether the element is exposed to an accessibility API.\n     * @see aria-disabled.\n     */\n    \"aria-hidden\"?: Booleanish | undefined;\n    /**\n     * Indicates the entered value does not conform to the format expected by the application.\n     * @see aria-errormessage.\n     */\n    \"aria-invalid\"?: boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\" | undefined;\n    /** Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element. */\n    \"aria-keyshortcuts\"?: string | undefined;\n    /**\n     * Defines a string value that labels the current element.\n     * @see aria-labelledby.\n     */\n    \"aria-label\"?: string | undefined;\n    /**\n     * Identifies the element (or elements) that labels the current element.\n     * @see aria-describedby.\n     */\n    \"aria-labelledby\"?: string | undefined;\n    /** Defines the hierarchical level of an element within a structure. */\n    \"aria-level\"?: number | undefined;\n    /** Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region. */\n    \"aria-live\"?: \"off\" | \"assertive\" | \"polite\" | undefined;\n    /** Indicates whether an element is modal when displayed. */\n    \"aria-modal\"?: Booleanish | undefined;\n    /** Indicates whether a text box accepts multiple lines of input or only a single line. */\n    \"aria-multiline\"?: Booleanish | undefined;\n    /** Indicates that the user may select more than one item from the current selectable descendants. */\n    \"aria-multiselectable\"?: Booleanish | undefined;\n    /** Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous. */\n    \"aria-orientation\"?: \"horizontal\" | \"vertical\" | undefined;\n    /**\n     * Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\n     * between DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n     * @see aria-controls.\n     */\n    \"aria-owns\"?: string | undefined;\n    /**\n     * Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\n     * A hint could be a sample value or a brief description of the expected format.\n     */\n    \"aria-placeholder\"?: string | undefined;\n    /**\n     * Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n     * @see aria-setsize.\n     */\n    \"aria-posinset\"?: number | undefined;\n    /**\n     * Indicates the current \"pressed\" state of toggle buttons.\n     * @see aria-checked @see aria-selected.\n     */\n    \"aria-pressed\"?: boolean | \"false\" | \"mixed\" | \"true\" | undefined;\n    /**\n     * Indicates that the element is not editable, but is otherwise operable.\n     * @see aria-disabled.\n     */\n    \"aria-readonly\"?: Booleanish | undefined;\n    /**\n     * Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n     * @see aria-atomic.\n     */\n    \"aria-relevant\"?: \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text\" | \"text additions\" | \"text removals\" | undefined;\n    /** Indicates that user input is required on the element before a form may be submitted. */\n    \"aria-required\"?: Booleanish | undefined;\n    /** Defines a human-readable, author-localized description for the role of an element. */\n    \"aria-roledescription\"?: string | undefined;\n    /**\n     * Defines the total number of rows in a table, grid, or treegrid.\n     * @see aria-rowindex.\n     */\n    \"aria-rowcount\"?: number | undefined;\n    /**\n     * Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n     * @see aria-rowcount @see aria-rowspan.\n     */\n    \"aria-rowindex\"?: number | undefined;\n    /**\n     * Defines a human readable text alternative of aria-rowindex.\n     * @see aria-colindextext.\n     */\n    \"aria-rowindextext\"?: string | undefined;\n    /**\n     * Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n     * @see aria-rowindex @see aria-colspan.\n     */\n    \"aria-rowspan\"?: number | undefined;\n    /**\n     * Indicates the current \"selected\" state of various widgets.\n     * @see aria-checked @see aria-pressed.\n     */\n    \"aria-selected\"?: Booleanish | undefined;\n    /**\n     * Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n     * @see aria-posinset.\n     */\n    \"aria-setsize\"?: number | undefined;\n    /** Indicates if items in a table or grid are sorted in ascending or descending order. */\n    \"aria-sort\"?: \"none\" | \"ascending\" | \"descending\" | \"other\" | undefined;\n    /** Defines the maximum allowed value for a range widget. */\n    \"aria-valuemax\"?: number | undefined;\n    /** Defines the minimum allowed value for a range widget. */\n    \"aria-valuemin\"?: number | undefined;\n    /**\n     * Defines the current value for a range widget.\n     * @see aria-valuetext.\n     */\n    \"aria-valuenow\"?: number | undefined;\n    /** Defines the human readable text alternative of aria-valuenow for a range widget. */\n    \"aria-valuetext\"?: string | undefined;\n    /** All the WAI-ARIA 1.1 role attribute values from https://w3.org/TR/wai-aria-1.1/#role_definitions */\n    role?: AriaRole;\n};\nexport type AriaRole = \"alert\" | \"alertdialog\" | \"application\" | \"article\" | \"banner\" | \"button\" | \"cell\" | \"checkbox\" | \"columnheader\" | \"combobox\" | \"complementary\" | \"contentinfo\" | \"definition\" | \"dialog\" | \"directory\" | \"document\" | \"feed\" | \"figure\" | \"form\" | \"grid\" | \"gridcell\" | \"group\" | \"heading\" | \"img\" | \"link\" | \"list\" | \"listbox\" | \"listitem\" | \"log\" | \"main\" | \"marquee\" | \"math\" | \"menu\" | \"menubar\" | \"menuitem\" | \"menuitemcheckbox\" | \"menuitemradio\" | \"navigation\" | \"none\" | \"note\" | \"option\" | \"presentation\" | \"progressbar\" | \"radio\" | \"radiogroup\" | \"region\" | \"row\" | \"rowgroup\" | \"rowheader\" | \"scrollbar\" | \"search\" | \"searchbox\" | \"separator\" | \"slider\" | \"spinbutton\" | \"status\" | \"switch\" | \"tab\" | \"table\" | \"tablist\" | \"tabpanel\" | \"term\" | \"textbox\" | \"timer\" | \"toolbar\" | \"tooltip\" | \"tree\" | \"treegrid\" | \"treeitem\";\ndeclare const ICON_NAMES: readonly [\n    \"360\",\n    \"accessibility\",\n    \"active-cabin-ventilation\",\n    \"add\",\n    \"adjust\",\n    \"arrow-double-down\",\n    \"arrow-double-left\",\n    \"arrow-double-right\",\n    \"arrow-double-up\",\n    \"arrow-down\",\n    \"arrow-first\",\n    \"arrow-head-down\",\n    \"arrow-head-left\",\n    \"arrow-head-right\",\n    \"arrow-head-up\",\n    \"arrow-last\",\n    \"arrow-left\",\n    \"arrow-right\",\n    \"arrow-up\",\n    \"augmented-reality\",\n    \"battery-empty\",\n    \"battery-empty-co2\",\n    \"battery-empty-fuel\",\n    \"battery-full\",\n    \"bell\",\n    \"bookmark\",\n    \"bookmark-filled\",\n    \"broadcast\",\n    \"calculator\",\n    \"calendar\",\n    \"camera\",\n    \"car\",\n    \"car-battery\",\n    \"card\",\n    \"charging-active\",\n    \"charging-state\",\n    \"charging-station\",\n    \"chart\",\n    \"chat\",\n    \"check\",\n    \"city\",\n    \"climate\",\n    \"climate-control\",\n    \"clock\",\n    \"close\",\n    \"closed-caption\",\n    \"co2-class\",\n    \"co2-emission\",\n    \"compare\",\n    \"configurate\",\n    \"copy\",\n    \"country-road\",\n    \"cubic-capacity\",\n    \"delete\",\n    \"disable\",\n    \"document\",\n    \"download\",\n    \"duration\",\n    \"edit\",\n    \"email\",\n    \"error-filled\",\n    \"exclamation\",\n    \"external\",\n    \"filter\",\n    \"fingerprint\",\n    \"flash\",\n    \"fuel-station\",\n    \"garage\",\n    \"gift\",\n    \"globe\",\n    \"grid\",\n    \"heart\",\n    \"heart-filled\",\n    \"highway\",\n    \"home\",\n    \"horn\",\n    \"image\",\n    \"increase\",\n    \"information\",\n    \"information-filled\",\n    \"key\",\n    \"leaf\",\n    \"leather\",\n    \"light\",\n    \"list\",\n    \"locate\",\n    \"lock\",\n    \"lock-open\",\n    \"logo-apple-podcast\",\n    \"logo-baidu\",\n    \"logo-delicious\",\n    \"logo-digg\",\n    \"logo-facebook\",\n    \"logo-foursquare\",\n    \"logo-gmail\",\n    \"logo-google\",\n    \"logo-hatena\",\n    \"logo-instagram\",\n    \"logo-kaixin\",\n    \"logo-kakaotalk\",\n    \"logo-linkedin\",\n    \"logo-naver\",\n    \"logo-pinterest\",\n    \"logo-qq\",\n    \"logo-qq-share\",\n    \"logo-reddit\",\n    \"logo-skyrock\",\n    \"logo-sohu\",\n    \"logo-spotify\",\n    \"logo-tecent\",\n    \"logo-telegram\",\n    \"logo-tiktok\",\n    \"logo-tumblr\",\n    \"logo-twitter\",\n    \"logo-viber\",\n    \"logo-vk\",\n    \"logo-wechat\",\n    \"logo-weibo\",\n    \"logo-whatsapp\",\n    \"logo-x\",\n    \"logo-xing\",\n    \"logo-yahoo\",\n    \"logo-youku\",\n    \"logo-youtube\",\n    \"logout\",\n    \"map\",\n    \"menu-dots-horizontal\",\n    \"menu-dots-vertical\",\n    \"menu-lines\",\n    \"minus\",\n    \"mobile\",\n    \"moon\",\n    \"oil-can\",\n    \"parking-brake\",\n    \"parking-light\",\n    \"pause\",\n    \"phone\",\n    \"pin\",\n    \"pin-filled\",\n    \"play\",\n    \"plug\",\n    \"plus\",\n    \"preheating\",\n    \"printer\",\n    \"purchase\",\n    \"push-pin\",\n    \"push-pin-off\",\n    \"qr\",\n    \"question\",\n    \"racing-flag\",\n    \"refresh\",\n    \"replay\",\n    \"reset\",\n    \"roof-closed\",\n    \"roof-open\",\n    \"route\",\n    \"rss\",\n    \"save\",\n    \"screen\",\n    \"search\",\n    \"send\",\n    \"share\",\n    \"shopping-bag\",\n    \"shopping-bag-filled\",\n    \"shopping-cart\",\n    \"shopping-cart-filled\",\n    \"sidelights\",\n    \"snowflake\",\n    \"sort\",\n    \"stack\",\n    \"star\",\n    \"star-filled\",\n    \"steering-wheel\",\n    \"stopwatch\",\n    \"subtract\",\n    \"success\",\n    \"success-filled\",\n    \"sun\",\n    \"switch\",\n    \"tablet\",\n    \"tachometer\",\n    \"tire\",\n    \"truck\",\n    \"upload\",\n    \"user\",\n    \"user-filled\",\n    \"user-group\",\n    \"user-manual\",\n    \"video\",\n    \"view\",\n    \"view-off\",\n    \"volume-off\",\n    \"volume-up\",\n    \"warning\",\n    \"warning-filled\",\n    \"weight\",\n    \"wifi\",\n    \"work\",\n    \"wrench\",\n    \"wrenches\",\n    \"zoom-in\",\n    \"zoom-out\"\n];\nexport type IconName = typeof ICON_NAMES[number];\ndeclare const FORM_STATES: readonly [\n    \"none\",\n    \"error\",\n    \"success\"\n];\nexport type FormState = typeof FORM_STATES[number];\ndeclare const BUTTON_ARIA_ATTRIBUTES: readonly [\n    \"aria-label\",\n    \"aria-expanded\",\n    \"aria-pressed\",\n    \"aria-haspopup\"\n];\nexport type ButtonAriaAttribute = typeof BUTTON_ARIA_ATTRIBUTES[number];\ndeclare const LINK_ARIA_ATTRIBUTES: readonly [\n    \"aria-label\",\n    \"aria-current\"\n];\nexport type LinkAriaAttribute = (typeof LINK_ARIA_ATTRIBUTES)[number];\ndeclare const breakpoints: readonly [\n    \"base\",\n    \"xs\",\n    \"s\",\n    \"m\",\n    \"l\",\n    \"xl\",\n    \"xxl\"\n];\nexport type Breakpoint = (typeof breakpoints)[number];\nexport type BreakpointValues<T> = {\n    [key in Breakpoint]?: T;\n} & {\n    base: T;\n};\nexport type BreakpointCustomizable<T> = T | BreakpointValues<T>;\ndeclare const LINK_TARGETS: readonly [\n    \"_self\",\n    \"_blank\",\n    \"_parent\",\n    \"_top\"\n];\nexport type LinkTarget = (typeof LINK_TARGETS)[number] | string;\ndeclare const THEMES: readonly [\n    \"light\",\n    \"dark\",\n    \"auto\"\n];\nexport type Theme = (typeof THEMES)[number];\ndeclare const TILE_ASPECT_RATIOS: readonly [\n    \"1/1\",\n    \"4/3\",\n    \"3/4\",\n    \"16/9\",\n    \"9/16\",\n    \"1:1\",\n    \"4:3\",\n    \"3:4\",\n    \"16:9\",\n    \"9:16\"\n];\nexport type TileAspectRatio = (typeof TILE_ASPECT_RATIOS)[number];\ndeclare const TILE_SIZES: readonly [\n    \"medium\",\n    \"large\",\n    \"inherit\",\n    \"default\"\n];\nexport type TileSize = (typeof TILE_SIZES)[number];\ndeclare const TILE_WEIGHTS: readonly [\n    \"regular\",\n    \"semi-bold\"\n];\nexport type TileWeight = (typeof TILE_WEIGHTS)[number];\nexport type TileBackground = (typeof THEMES)[number];\ndeclare const TILE_ALIGNS: readonly [\n    \"top\",\n    \"bottom\"\n];\nexport type TileAlign = (typeof TILE_ALIGNS)[number];\ndeclare const SCROLLER_ARIA_ATTRIBUTES: readonly [\n    \"role\"\n];\nexport type ScrollerAriaAttribute = (typeof SCROLLER_ARIA_ATTRIBUTES)[number];\ndeclare const GRADIENT_COLOR_SCHEMES: readonly [\n    \"default\",\n    \"surface\"\n];\n/** @deprecated */\nexport type ScrollerGradientColorScheme = (typeof GRADIENT_COLOR_SCHEMES)[number];\ndeclare const GRADIENT_COLORS: readonly [\n    \"background-base\",\n    \"background-surface\"\n];\nexport type ScrollerGradientColor = (typeof GRADIENT_COLORS)[number];\nexport type ScrollerScrollToPosition = {\n    scrollPosition: number;\n    isSmooth?: boolean;\n} | string;\ndeclare const SCROLL_INDICATOR_POSITIONS: readonly [\n    \"top\",\n    \"center\"\n];\n/** @deprecated */\nexport type ScrollerScrollIndicatorPosition = (typeof SCROLL_INDICATOR_POSITIONS)[number];\nexport type ScrollerAlignScrollIndicator = ScrollerScrollIndicatorPosition;\ndeclare const SELECT_DROPDOWN_DIRECTIONS: readonly [\n    \"down\",\n    \"up\",\n    \"auto\"\n];\nexport type SelectComponentsDropdownDirection = (typeof SELECT_DROPDOWN_DIRECTIONS)[number];\ndeclare const HEADING_SIZES: readonly [\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"x-large\",\n    \"xx-large\",\n    \"inherit\"\n];\nexport type HeadingSize = (typeof HEADING_SIZES)[number];\ndeclare const HEADING_TAGS: readonly [\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\"\n];\nexport type HeadingTag = typeof HEADING_TAGS[number];\ndeclare const TEXT_SIZES: readonly [\n    \"xx-small\",\n    \"x-small\",\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"x-large\",\n    \"inherit\"\n];\nexport type TextSize = (typeof TEXT_SIZES)[number];\ndeclare const TYPOGRAPHY_ALIGNS: readonly [\n    \"start\",\n    \"center\",\n    \"end\",\n    \"left\",\n    \"right\"\n];\nexport type TypographyAlign = (typeof TYPOGRAPHY_ALIGNS)[number];\ndeclare const TYPOGRAPHY_TEXT_COLORS: readonly [\n    \"primary\",\n    \"contrast-low\",\n    \"contrast-medium\",\n    \"contrast-high\",\n    \"notification-success\",\n    \"notification-warning\",\n    \"notification-error\",\n    \"notification-info\",\n    \"inherit\",\n    \"brand\",\n    \"default\",\n    \"neutral-contrast-low\",\n    \"neutral-contrast-medium\",\n    \"neutral-contrast-high\",\n    \"notification-neutral\"\n];\nexport type TypographyTextColor = (typeof TYPOGRAPHY_TEXT_COLORS)[number];\ndeclare const TYPOGRAPHY_TEXT_WEIGHTS: readonly [\n    \"regular\",\n    \"semi-bold\",\n    \"bold\",\n    \"thin\",\n    \"semibold\"\n];\nexport type TypographyTextWeight = (typeof TYPOGRAPHY_TEXT_WEIGHTS)[number];\ndeclare const ALIGN_LABELS: readonly [\n    \"start\",\n    \"end\",\n    \"left\",\n    \"right\"\n];\nexport type AlignLabel = (typeof ALIGN_LABELS)[number];\ndeclare const BUTTON_TYPES: readonly [\n    \"button\",\n    \"submit\",\n    \"reset\"\n];\nexport type ButtonType = typeof BUTTON_TYPES[number];\ndeclare const LINK_BUTTON_VARIANTS: readonly [\n    \"primary\",\n    \"secondary\",\n    \"tertiary\"\n];\nexport type LinkButtonVariant = typeof LINK_BUTTON_VARIANTS[number];\nexport type LinkButtonIconName = IconName | \"none\";\nexport type ButtonVariant = LinkButtonVariant;\nexport type LinkVariant = LinkButtonVariant;\nexport type PorscheDesignSystem = {\n    [key: `${number}.${number}.${number}${`-rc.${number}` | \"\"}`]: {\n        prefixes: string[];\n        isReady: () => Promise<void>;\n        readyResolve: () => void;\n    };\n    cdn: {\n        url: string;\n        prefixes: string[];\n    };\n};\nexport type SelectedAriaAttributes<T extends keyof AriaAttributes> = Pick<AriaAttributes, T>;\ndeclare const ACCORDION_SIZES: readonly [\n    \"small\",\n    \"medium\"\n];\nexport type AccordionSize = (typeof ACCORDION_SIZES)[number];\n/** @deprecated */\nexport type AccordionUpdateEvent = {\n    open: boolean;\n};\nexport type AccordionUpdateEventDetail = AccordionUpdateEvent;\n/** @deprecated */\nexport type AccordionTag = HeadingTag;\nexport type AccordionHeadingTag = HeadingTag;\ndeclare const INLINE_NOTIFICATION_STATES: readonly [\n    \"success\",\n    \"info\",\n    \"warning\",\n    \"error\",\n    \"neutral\"\n];\nexport type InlineNotificationState = (typeof INLINE_NOTIFICATION_STATES)[number];\nexport type InlineNotificationActionIcon = IconName;\nexport type InlineNotificationHeadingTag = HeadingTag;\ndeclare const BANNER_STATES: readonly [\n    \"info\",\n    \"warning\",\n    \"error\",\n    \"neutral\"\n];\nexport type BannerState = (typeof BANNER_STATES)[number];\ndeclare const BANNER_WIDTHS: readonly [\n    \"extended\",\n    \"basic\",\n    \"fluid\"\n];\n/** @deprecated */\nexport type BannerWidth = (typeof BANNER_WIDTHS)[number];\nexport type BannerHeadingTag = InlineNotificationHeadingTag;\nexport type ButtonIcon = LinkButtonIconName;\ndeclare const GROUP_DIRECTIONS: readonly [\n    \"row\",\n    \"column\"\n];\nexport type GroupDirection = (typeof GROUP_DIRECTIONS)[number];\nexport type ButtonGroupDirection = GroupDirection;\nexport type ButtonPureType = ButtonType;\nexport type ButtonPureIcon = LinkButtonIconName;\nexport type ButtonPureAriaAttribute = ButtonAriaAttribute;\nexport type ButtonPureAlignLabel = AlignLabel;\nexport type ButtonPureWeight = TypographyTextWeight;\nexport type ButtonPureSize = TextSize;\nexport type ButtonTileAriaAttribute = ButtonAriaAttribute;\nexport type ButtonTileIcon = LinkButtonIconName;\nexport type ButtonTileType = ButtonType;\nexport type ButtonTileAspectRatio = TileAspectRatio;\nexport type ButtonTileSize = TileSize;\nexport type ButtonTileBackground = TileBackground;\nexport type ButtonTileWeight = TileWeight;\nexport type ButtonTileAlign = TileAlign;\ndeclare const CANVAS_SIDEBAR_WIDTHS: readonly [\n    \"medium\",\n    \"large\"\n];\nexport type CanvasSidebarWidth = (typeof CANVAS_SIDEBAR_WIDTHS)[number];\nexport type CanvasSidebarStartWidth = CanvasSidebarWidth;\nexport type CanvasSidebarEndWidth = CanvasSidebarWidth;\ndeclare const CAROUSEL_WIDTHS: readonly [\n    \"basic\",\n    \"extended\"\n];\nexport type CarouselWidth = (typeof CAROUSEL_WIDTHS)[number];\ndeclare const CAROUSEL_ALIGN_HEADERS: readonly [\n    \"start\",\n    \"center\",\n    \"left\"\n];\nexport type CarouselAlignHeader = (typeof CAROUSEL_ALIGN_HEADERS)[number];\nexport type CarouselHeadingSize = Extract<HeadingSize, \"x-large\" | \"xx-large\">;\ndeclare const CAROUSEL_ARIA_ATTRIBUTES: readonly [\n    \"aria-label\"\n];\nexport type CarouselAriaAttribute = (typeof CAROUSEL_ARIA_ATTRIBUTES)[number];\nexport type CarouselInternationalization = Partial<Record<\"prev\" | \"next\" | \"first\" | \"last\" | \"slideLabel\" | \"slide\", string>>;\n/** @deprecated */\nexport type CarouselUpdateEvent = {\n    activeIndex: number;\n    previousIndex: number;\n};\nexport type CarouselUpdateEventDetail = CarouselUpdateEvent;\nexport type CheckboxWrapperState = FormState;\ndeclare const CONTENT_WRAPPER_BACKGROUND_COLORS: readonly [\n    \"transparent\",\n    \"default\"\n];\nexport type ContentWrapperBackgroundColor = typeof CONTENT_WRAPPER_BACKGROUND_COLORS[number];\ndeclare const CONTENT_WRAPPER_WIDTHS: readonly [\n    \"narrow\",\n    \"basic\",\n    \"extended\",\n    \"fluid\",\n    \"full\"\n];\nexport type ContentWrapperWidth = typeof CONTENT_WRAPPER_WIDTHS[number];\nexport type CrestTarget = LinkTarget;\nexport type CrestAriaAttribute = LinkAriaAttribute;\ndeclare const DISPLAY_TAGS: readonly [\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\"\n];\nexport type DisplayTag = (typeof DISPLAY_TAGS)[number];\ndeclare const DISPLAY_SIZES: readonly [\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"inherit\"\n];\nexport type DisplaySize = (typeof DISPLAY_SIZES)[number];\ndeclare const DISPLAY_COLORS: readonly [\n    \"primary\",\n    \"inherit\"\n];\nexport type DisplayColor = (typeof DISPLAY_COLORS)[number];\nexport type DisplayAlign = TypographyAlign;\ndeclare const DIVIDER_COLORS: readonly [\n    \"contrast-low\",\n    \"contrast-medium\",\n    \"contrast-high\",\n    \"neutral-contrast-high\",\n    \"neutral-contrast-medium\",\n    \"neutral-contrast-low\"\n];\nexport type DividerColor = typeof DIVIDER_COLORS[number];\ndeclare const DIVIDER_DIRECTIONS: readonly [\n    \"vertical\",\n    \"horizontal\"\n];\nexport type DividerDirection = typeof DIVIDER_DIRECTIONS[number];\nexport type DividerOrientation = DividerDirection;\ndeclare const FIELDSET_LABEL_SIZES: readonly [\n    \"small\",\n    \"medium\"\n];\nexport type FieldsetLabelSize = (typeof FIELDSET_LABEL_SIZES)[number];\nexport type FieldsetState = FormState;\nexport type FieldsetWrapperLabelSize = FieldsetLabelSize;\nexport type FieldsetWrapperState = FieldsetState;\nexport type FlexInline = boolean;\ndeclare const FLEX_WRAPS: readonly [\n    \"nowrap\",\n    \"wrap\",\n    \"wrap-reverse\"\n];\nexport type FlexWrap = typeof FLEX_WRAPS[number];\ndeclare const FLEX_DIRECTIONS: readonly [\n    \"row\",\n    \"row-reverse\",\n    \"column\",\n    \"column-reverse\"\n];\nexport type FlexDirection = typeof FLEX_DIRECTIONS[number];\ndeclare const FLEX_JUSTIFY_CONTENTS: readonly [\n    \"flex-start\",\n    \"flex-end\",\n    \"center\",\n    \"space-between\",\n    \"space-around\",\n    \"space-evenly\"\n];\nexport type FlexJustifyContent = typeof FLEX_JUSTIFY_CONTENTS[number];\ndeclare const FLEX_ALIGN_ITEMS: readonly [\n    \"stretch\",\n    \"flex-start\",\n    \"flex-end\",\n    \"center\",\n    \"baseline\"\n];\nexport type FlexAlignItems = typeof FLEX_ALIGN_ITEMS[number];\ndeclare const FLEX_ALIGN_CONTENTS: readonly [\n    \"stretch\",\n    \"flex-start\",\n    \"flex-end\",\n    \"center\",\n    \"space-between\",\n    \"space-around\",\n    \"space-evenly\"\n];\nexport type FlexAlignContent = typeof FLEX_ALIGN_CONTENTS[number];\ndeclare const FLEX_ITEM_WIDTHS: readonly [\n    \"auto\",\n    \"one-quarter\",\n    \"one-third\",\n    \"half\",\n    \"two-thirds\",\n    \"three-quarters\",\n    \"full\"\n];\nexport type FlexItemWidth = typeof FLEX_ITEM_WIDTHS[number];\ndeclare const FLEX_ITEM_OFFSETS: readonly [\n    \"none\",\n    \"one-quarter\",\n    \"one-third\",\n    \"half\",\n    \"two-thirds\",\n    \"three-quarters\"\n];\nexport type FlexItemOffset = typeof FLEX_ITEM_OFFSETS[number];\ndeclare const FLEX_ITEM_ALIGN_SELFS: readonly [\n    \"auto\",\n    \"flex-start\",\n    \"flex-end\",\n    \"center\",\n    \"baseline\",\n    \"stretch\"\n];\nexport type FlexItemAlignSelf = typeof FLEX_ITEM_ALIGN_SELFS[number];\ndeclare const FLEX_ITEM_GROWS: readonly [\n    0,\n    1\n];\nexport type FlexItemGrow = typeof FLEX_ITEM_GROWS[number];\ndeclare const FLEX_ITEM_SHRINKS: readonly [\n    0,\n    1\n];\nexport type FlexItemShrink = typeof FLEX_ITEM_SHRINKS[number];\ndeclare const FLEX_ITEM_FLEXS: readonly [\n    \"initial\",\n    \"auto\",\n    \"none\",\n    \"equal\"\n];\nexport type FlexItemFlex = typeof FLEX_ITEM_FLEXS[number];\ndeclare const FLYOUT_POSITIONS: readonly [\n    \"start\",\n    \"end\",\n    \"left\",\n    \"right\"\n];\nexport type FlyoutPosition = (typeof FLYOUT_POSITIONS)[number];\ndeclare const FLYOUT_ARIA_ATTRIBUTES: readonly [\n    \"aria-label\"\n];\nexport type FlyoutAriaAttribute = (typeof FLYOUT_ARIA_ATTRIBUTES)[number];\nexport type FlyoutMotionVisibleEndEventDetail = TransitionEvent;\nexport type FlyoutMotionHiddenEndEventDetail = TransitionEvent;\ndeclare const FLYOUT_MULTILEVEL_ARIA_ATTRIBUTES: readonly [\n    \"aria-label\"\n];\nexport type FlyoutMultilevelAriaAttribute = (typeof FLYOUT_MULTILEVEL_ARIA_ATTRIBUTES)[number];\nexport type FlyoutMultilevelUpdate = {\n    activeIdentifier: string;\n};\n/** @deprecated */\nexport type FlyoutMultilevelUpdateEvent = FlyoutMultilevelUpdate;\nexport type FlyoutMultilevelUpdateEventDetail = FlyoutMultilevelUpdateEvent;\ndeclare const GRID_DIRECTIONS: readonly [\n    \"row\",\n    \"row-reverse\",\n    \"column\",\n    \"column-reverse\"\n];\nexport type GridDirection = typeof GRID_DIRECTIONS[number];\ndeclare const GRID_WRAPS: readonly [\n    \"nowrap\",\n    \"wrap\"\n];\nexport type GridWrap = typeof GRID_WRAPS[number];\ndeclare const GRID_GUTTERS: readonly [\n    16,\n    24,\n    36\n];\nexport type GridGutter = typeof GRID_GUTTERS[number];\ndeclare const GRID_ITEM_SIZES: readonly [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12\n];\nexport type GridItemSize = typeof GRID_ITEM_SIZES[number];\ndeclare const GRID_ITEM_OFFSETS: readonly [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11\n];\nexport type GridItemOffset = typeof GRID_ITEM_OFFSETS[number];\ndeclare const HEADING_COLORS: readonly [\n    \"primary\",\n    \"inherit\"\n];\nexport type HeadingColor = (typeof HEADING_COLORS)[number];\nexport type HeadingAlign = TypographyAlign;\ndeclare const HEADLINE_VARIANTS: readonly [\n    \"large-title\",\n    \"headline-1\",\n    \"headline-2\",\n    \"headline-3\",\n    \"headline-4\",\n    \"headline-5\"\n];\nexport type HeadlineVariantType = (typeof HEADLINE_VARIANTS)[number];\nexport type HeadlineVariantCustom = Exclude<BreakpointCustomizable<TextSize>, TextSize>;\nexport type HeadlineVariant = HeadlineVariantType | HeadlineVariantCustom | Extract<TextSize, \"inherit\">;\ndeclare const HEADLINE_TAGS: readonly [\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\"\n];\nexport type HeadlineTag = (typeof HEADLINE_TAGS)[number];\ndeclare const HEADLINE_COLORS: readonly [\n    \"primary\",\n    \"default\",\n    \"inherit\"\n];\nexport type HeadlineColor = (typeof HEADLINE_COLORS)[number];\nexport type HeadlineAlign = TypographyAlign;\ndeclare const ICON_ARIA_ATTRIBUTES: readonly [\n    \"aria-label\"\n];\nexport type IconAriaAttribute = (typeof ICON_ARIA_ATTRIBUTES)[number];\nexport type IconSize = TextSize;\ndeclare const ICON_COLORS: readonly [\n    \"primary\",\n    \"contrast-low\",\n    \"contrast-medium\",\n    \"contrast-high\",\n    \"notification-success\",\n    \"notification-warning\",\n    \"notification-error\",\n    \"notification-info\",\n    \"inherit\",\n    \"brand\",\n    \"default\",\n    \"neutral-contrast-low\",\n    \"neutral-contrast-medium\",\n    \"neutral-contrast-high\",\n    \"notification-neutral\",\n    \"state-disabled\"\n];\nexport type IconColor = (typeof ICON_COLORS)[number];\nexport type LinkIcon = LinkButtonIconName;\nexport type LinkPureIcon = LinkButtonIconName;\nexport type LinkPureAriaAttribute = LinkAriaAttribute;\nexport type LinkPureAlignLabel = AlignLabel;\nexport type LinkPureWeight = TypographyTextWeight;\nexport type LinkPureSize = TextSize;\nexport type LinkPureTarget = LinkTarget;\nexport type LinkSocialIcon = Extract<IconName, \"logo-facebook\" | \"logo-google\" | \"logo-instagram\" | \"logo-linkedin\" | \"logo-pinterest\" | \"logo-twitter\" | \"logo-wechat\" | \"logo-whatsapp\" | \"logo-xing\" | \"logo-youtube\" | \"logo-baidu\" | \"logo-delicious\" | \"logo-digg\" | \"logo-foursquare\" | \"logo-gmail\" | \"logo-hatena\" | \"logo-kaixin\" | \"logo-kakaotalk\" | \"logo-naver\" | \"logo-qq-share\" | \"logo-qq\" | \"logo-reddit\" | \"logo-skyrock\" | \"logo-sohu\" | \"logo-tecent\" | \"logo-telegram\" | \"logo-tiktok\" | \"logo-tumblr\" | \"logo-viber\" | \"logo-vk\" | \"logo-weibo\" | \"logo-yahoo\" | \"logo-youku\">;\nexport type LinkSocialTarget = LinkTarget;\nexport type LinkTileTarget = LinkTarget;\nexport type LinkTileAriaAttribute = LinkAriaAttribute;\nexport type LinkTileAspectRatio = TileAspectRatio;\nexport type LinkTileSize = TileSize;\nexport type LinkTileBackground = TileBackground;\nexport type LinkTileAlign = TileAlign;\ndeclare const LINK_TILE_WEIGHTS: readonly [\n    \"regular\",\n    \"semi-bold\",\n    \"semibold\"\n];\nexport type LinkTileWeight = (typeof LINK_TILE_WEIGHTS)[number];\ndeclare const LINK_TILE_MODEL_SIGNATURE_MODELS: readonly [\n    \"718\",\n    \"911\",\n    \"boxster\",\n    \"cayenne\",\n    \"cayman\",\n    \"macan\",\n    \"panamera\",\n    \"taycan\",\n    \"turbo-s\",\n    \"turbo\"\n];\nexport type LinkTileModelSignatureModel = (typeof LINK_TILE_MODEL_SIGNATURE_MODELS)[number];\ndeclare const LINK_TILE_MODEL_SIGNATURE_HEADING_TAGS: readonly [\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\"\n];\nexport type LinkTileModelSignatureHeadingTag = (typeof LINK_TILE_MODEL_SIGNATURE_HEADING_TAGS)[number];\nexport type LinkTileModelSignatureWeight = TileWeight;\nexport type LinkTileModelSignatureAspectRatio = TileAspectRatio;\nexport type LinkTileModelSignatureLinkDirection = GroupDirection;\nexport type LinkTileProductTarget = LinkTarget;\n/** @deprecated */\nexport type LinkTileProductLikeEvent = {\n    liked: boolean;\n};\nexport type LinkTileProductLikeEventDetail = LinkTileProductLikeEvent;\ndeclare const TILE_PRODUCT_ASPECT_RATIOS: readonly [\n    \"3:4\",\n    \"9:16\"\n];\nexport type LinkTileProductAspectRatio = Extract<TileAspectRatio, (typeof TILE_PRODUCT_ASPECT_RATIOS)[number]>;\ndeclare const MODEL_SIGNATURES_MANIFEST: {\n    \"718\": {\n        src: string;\n        width: number;\n        height: number;\n    };\n    \"911\": {\n        src: string;\n        width: number;\n        height: number;\n    };\n    boxster: {\n        src: string;\n        width: number;\n        height: number;\n    };\n    cayenne: {\n        src: string;\n        width: number;\n        height: number;\n    };\n    cayman: {\n        src: string;\n        width: number;\n        height: number;\n    };\n    macan: {\n        src: string;\n        width: number;\n        height: number;\n    };\n    panamera: {\n        src: string;\n        width: number;\n        height: number;\n    };\n    taycan: {\n        src: string;\n        width: number;\n        height: number;\n    };\n    \"turbo-s\": {\n        src: string;\n        width: number;\n        height: number;\n    };\n    turbo: {\n        src: string;\n        width: number;\n        height: number;\n    };\n};\ndeclare const MARQUE_VARIANTS: readonly [\n    \"75-years\",\n    \"default\"\n];\nexport type MarqueVariant = (typeof MARQUE_VARIANTS)[number];\nexport type MarqueTarget = LinkTarget;\nexport type MarqueAriaAttribute = LinkAriaAttribute;\ndeclare const MARQUE_SIZES: readonly [\n    \"responsive\",\n    \"small\",\n    \"medium\"\n];\nexport type MarqueSize = typeof MARQUE_SIZES[number];\ndeclare const BACKDROPS: readonly [\n    \"blur\",\n    \"shading\"\n];\nexport type Backdrop = (typeof BACKDROPS)[number];\ndeclare const MODAL_ARIA_ATTRIBUTES: readonly [\n    \"aria-label\"\n];\nexport type ModalAriaAttribute = (typeof MODAL_ARIA_ATTRIBUTES)[number];\nexport type ModalBackdrop = Backdrop;\nexport type ModalMotionVisibleEndEventDetail = TransitionEvent;\nexport type ModalMotionHiddenEndEventDetail = TransitionEvent;\ndeclare const MODEL_SIGNATURE_FETCH_PRIORITY: readonly [\n    \"low\",\n    \"high\",\n    \"auto\"\n];\nexport type ModelSignatureFetchPriority = (typeof MODEL_SIGNATURE_FETCH_PRIORITY)[number];\ndeclare const MODEL_SIGNATURE_SIZES: readonly [\n    \"small\",\n    \"inherit\"\n];\nexport type ModelSignatureSize = (typeof MODEL_SIGNATURE_SIZES)[number];\nexport type ModelSignatureModel = keyof typeof MODEL_SIGNATURES_MANIFEST;\ndeclare const MODEL_SIGNATURE_COLORS: readonly [\n    \"primary\",\n    \"contrast-low\",\n    \"contrast-medium\",\n    \"contrast-high\",\n    \"inherit\"\n];\nexport type ModelSignatureColor = (typeof MODEL_SIGNATURE_COLORS)[number];\nexport type MultiSelectState = FormState;\nexport type MultiSelectDropdownDirection = SelectComponentsDropdownDirection;\n/** @deprecated */\nexport type MultiSelectUpdateEvent = {\n    name: string;\n    value: string[];\n};\nexport type MultiSelectUpdateEventDetail = MultiSelectUpdateEvent;\ndeclare const PAGINATION_NUMBER_OF_PAGE_LINKS: readonly [\n    5,\n    7\n];\n/** @deprecated */\nexport type PaginationMaxNumberOfPageLinks = (typeof PAGINATION_NUMBER_OF_PAGE_LINKS)[number];\n/** @deprecated */\nexport type PaginationUpdateEvent = {\n    page: number;\n    previousPage: number;\n};\nexport type PaginationUpdateEventDetail = PaginationUpdateEvent;\nexport type PaginationInternationalization = Partial<Record<\"root\" | \"prev\" | \"next\" | \"page\", string>>;\ndeclare const PIN_CODE_TYPES: readonly [\n    \"number\",\n    \"password\"\n];\nexport type PinCodeType = (typeof PIN_CODE_TYPES)[number];\ndeclare const PIN_CODE_LENGTHS: readonly [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6\n];\nexport type PinCodeLength = (typeof PIN_CODE_LENGTHS)[number];\n/** @deprecated */\nexport type PinCodeUpdateEvent = {\n    value: string;\n    isComplete: boolean;\n};\nexport type PinCodeUpdateEventDetail = PinCodeUpdateEvent;\nexport type PinCodeState = FormState;\ndeclare const POPOVER_DIRECTIONS: readonly [\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\"\n];\nexport type PopoverDirection = (typeof POPOVER_DIRECTIONS)[number];\ndeclare const POPOVER_ARIA_ATTRIBUTES: readonly [\n    \"aria-label\"\n];\nexport type PopoverAriaAttribute = (typeof POPOVER_ARIA_ATTRIBUTES)[number];\nexport type RadioButtonWrapperState = FormState;\ndeclare const SEGMENTED_CONTROL_BACKGROUND_COLORS: readonly [\n    \"background-surface\",\n    \"background-default\"\n];\nexport type SegmentedControlBackgroundColor = (typeof SEGMENTED_CONTROL_BACKGROUND_COLORS)[number];\n/** @deprecated */\nexport type SegmentedControlUpdateEvent = {\n    value: string | number;\n};\nexport type SegmentedControlUpdateEventDetail = SegmentedControlUpdateEvent;\ndeclare const SEGMENTED_CONTROL_COLUMNS: (string | number)[];\nexport type SegmentedControlColumns = (typeof SEGMENTED_CONTROL_COLUMNS)[number];\nexport type SegmentedControlItemIcon = LinkButtonIconName;\ndeclare const SEGMENTED_CONTROL_ITEM_ARIA_ATTRIBUTES: readonly [\n    \"aria-label\"\n];\nexport type SegmentedControlItemAriaAttribute = (typeof SEGMENTED_CONTROL_ITEM_ARIA_ATTRIBUTES)[number];\nexport type SelectState = FormState;\nexport type SelectDropdownDirection = SelectComponentsDropdownDirection;\nexport type SelectUpdateEventDetail = {\n    name: string;\n    value: string;\n};\ndeclare const DROPDOWN_DIRECTIONS: readonly [\n    \"down\",\n    \"up\",\n    \"auto\"\n];\nexport type SelectWrapperDropdownDirection = (typeof DROPDOWN_DIRECTIONS)[number];\nexport type SelectWrapperState = FormState;\ndeclare const SPINNER_SIZES: readonly [\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"inherit\"\n];\nexport type SpinnerSize = typeof SPINNER_SIZES[number];\ndeclare const SPINNER_ARIA_ATTRIBUTES: readonly [\n    \"aria-label\"\n];\nexport type SpinnerAriaAttribute = typeof SPINNER_ARIA_ATTRIBUTES[number];\ndeclare const STEPPER_HORIZONTAL_SIZES: readonly [\n    \"small\",\n    \"medium\"\n];\nexport type StepperHorizontalSize = (typeof STEPPER_HORIZONTAL_SIZES)[number];\n/** @deprecated */\nexport type StepperHorizontalUpdateEvent = {\n    activeStepIndex: number;\n};\nexport type StepperHorizontalUpdateEventDetail = StepperHorizontalUpdateEvent;\ndeclare const STEPPER_ITEM_STATES: readonly [\n    \"current\",\n    \"complete\",\n    \"warning\"\n];\nexport type StepperHorizontalItemState = (typeof STEPPER_ITEM_STATES)[number];\nexport type SwitchAlignLabel = AlignLabel;\n/** @deprecated */\nexport type SwitchUpdateEvent = {\n    checked: boolean;\n};\nexport type SwitchUpdateEventDetail = SwitchUpdateEvent;\nexport type Direction = \"asc\" | \"desc\";\nexport type TableHeadCellSort = {\n    id: string;\n    active?: boolean;\n    direction?: Direction;\n};\n/** @deprecated */\nexport type TableUpdateEvent = TableHeadCellSort;\nexport type TableUpdateEventDetail = TableUpdateEvent;\ndeclare const TABS_BAR_SIZES: readonly [\n    \"small\",\n    \"medium\"\n];\nexport type TabsBarSize = (typeof TABS_BAR_SIZES)[number];\ndeclare const TABS_BAR_WEIGHTS: readonly [\n    \"regular\",\n    \"semi-bold\",\n    \"semibold\"\n];\nexport type TabsBarWeight = (typeof TABS_BAR_WEIGHTS)[number];\n/** @deprecated */\nexport type TabsBarUpdateEvent = {\n    activeTabIndex: number;\n};\nexport type TabsBarUpdateEventDetail = TabsBarUpdateEvent;\n/** @deprecated */\nexport type TabsBarGradientColorScheme = ScrollerGradientColorScheme;\nexport type TabsBarGradientColor = ScrollerGradientColor;\nexport type TabsSize = TabsBarSize;\nexport type TabsWeight = TabsBarWeight;\n/** @deprecated */\nexport type TabsGradientColorScheme = TabsBarGradientColorScheme;\nexport type TabsGradientColor = TabsBarGradientColor;\n/** @deprecated */\nexport type TabsUpdateEvent = TabsBarUpdateEvent;\nexport type TabsUpdateEventDetail = TabsUpdateEvent;\ndeclare const TAG_DISMISSIBLE_COLORS: readonly [\n    \"background-base\",\n    \"background-surface\",\n    \"background-default\"\n];\nexport type TagDismissibleColor = typeof TAG_DISMISSIBLE_COLORS[number];\ndeclare const TAG_DISMISSIBLE_ARIA_ATTRIBUTES: readonly [\n    \"aria-label\"\n];\nexport type TagDismissibleAriaAttribute = typeof TAG_DISMISSIBLE_ARIA_ATTRIBUTES[number];\nexport type TagIcon = IconName;\ndeclare const TAG_COLORS: readonly [\n    \"background-base\",\n    \"background-surface\",\n    \"background-default\",\n    \"background-frosted\",\n    \"primary\",\n    \"notification-info-soft\",\n    \"notification-warning-soft\",\n    \"notification-success-soft\",\n    \"notification-error-soft\",\n    \"neutral-contrast-high\",\n    \"notification-neutral\",\n    \"notification-warning\",\n    \"notification-success\",\n    \"notification-error\"\n];\nexport type TagColor = (typeof TAG_COLORS)[number];\ndeclare const TEXT_TAGS: readonly [\n    \"p\",\n    \"span\",\n    \"div\",\n    \"address\",\n    \"blockquote\",\n    \"figcaption\",\n    \"cite\",\n    \"time\",\n    \"legend\"\n];\nexport type TextTag = (typeof TEXT_TAGS)[number];\nexport type TextAlign = TypographyAlign;\nexport type TextColor = TypographyTextColor;\nexport type TextWeight = TypographyTextWeight;\ndeclare const UNIT_POSITIONS: readonly [\n    \"prefix\",\n    \"suffix\"\n];\nexport type TextFieldWrapperUnitPosition = (typeof UNIT_POSITIONS)[number];\nexport type TextFieldWrapperActionIcon = Extract<IconName, \"locate\">;\nexport type TextFieldWrapperState = FormState;\ndeclare const LIST_TYPES: readonly [\n    \"unordered\",\n    \"ordered\"\n];\n/** @deprecated */\nexport type TextListListType = typeof LIST_TYPES[number];\ndeclare const ORDER_TYPES: readonly [\n    \"numbered\",\n    \"alphabetically\"\n];\n/** @deprecated */\nexport type TextListOrderType = typeof ORDER_TYPES[number];\ndeclare const TEXT_LIST_TYPES: readonly [\n    \"unordered\",\n    \"numbered\",\n    \"alphabetically\"\n];\nexport type TextListType = typeof TEXT_LIST_TYPES[number];\nexport type TextareaWrapperState = FormState;\ndeclare const TOAST_STATES: readonly [\n    \"info\",\n    \"success\",\n    \"neutral\"\n];\nexport type ToastState = typeof TOAST_STATES[number];\nexport type ToastMessage = {\n    text: string;\n    state?: ToastState;\n};\ndeclare const WORDMARK_SIZES: readonly [\n    \"small\",\n    \"inherit\"\n];\nexport type WordmarkSize = (typeof WORDMARK_SIZES)[number];\nexport type WordmarkTarget = LinkTarget;\nexport type WordmarkAriaAttribute = LinkAriaAttribute;\nexport {};\n","@porsche-design-system/components-vue/styles/esm/index.d.ts":"export * from './../../../components-js/styles';\n","@porsche-design-system/components-vue/styles/esm/index.mjs":"export * from './../../../components-js/styles';\n","@porsche-design-system/components-vue/esm/lib/components/AccordionWrapper.vue.d.ts":"import type { AccordionHeadingTag, BreakpointCustomizable, AccordionSize, AccordionTag, Theme } from '../types';\ntype PAccordionProps = {\n    /**\n     * Displays the Accordion as compact version with thinner border and smaller paddings.\n     */\n    compact?: boolean;\n    /**\n     * Defines the heading used in accordion.\n     */\n    heading?: string;\n    /**\n     * Sets a heading tag, so it fits correctly within the outline of the page.\n     */\n    headingTag?: AccordionHeadingTag;\n    /**\n     * Defines if accordion is open.\n     */\n    open?: boolean;\n    /**\n     * The text size.\n     */\n    size?: BreakpointCustomizable<AccordionSize>;\n    /**\n     * @experimental Sticks the Accordion heading at the top, fixed while scrolling\n     */\n    sticky?: boolean;\n    /**\n     * @deprecated , will be removed with next major release, use `heading-tag` instead. Sets a heading tag, so it fits correctly within the outline of the page.\n     */\n    tag?: AccordionTag;\n    /**\n     * Adapts the color when used on dark background.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PAccordionProps>, {\n    headingTag: string;\n    size: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    accordionChange: (value: import(\"../types\").AccordionUpdateEvent) => void;\n    update: (value: import(\"../types\").AccordionUpdateEvent) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PAccordionProps>, {\n    headingTag: string;\n    size: string;\n}>>> & {\n    onAccordionChange?: ((value: import(\"../types\").AccordionUpdateEvent) => any) | undefined;\n    onUpdate?: ((value: import(\"../types\").AccordionUpdateEvent) => any) | undefined;\n}, {\n    headingTag: AccordionHeadingTag;\n    size: BreakpointCustomizable<AccordionSize>;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/AccordionWrapper.vue.mjs":"import { defineComponent as i, ref as f, inject as l, onMounted as h, onUpdated as u, watch as y, openBlock as C, createBlock as g, resolveDynamicComponent as _, unref as B, withCtx as k, renderSlot as R } from \"vue\";\nimport { usePrefix as v, themeInjectionKey as w, addEventListenerToElementRef as r, syncProperties as p } from \"../../utils.mjs\";\nconst j = /* @__PURE__ */ i({\n  __name: \"AccordionWrapper\",\n  props: {\n    compact: { type: Boolean },\n    heading: {},\n    headingTag: { default: \"h2\" },\n    open: { type: Boolean },\n    size: { default: \"small\" },\n    sticky: { type: Boolean },\n    tag: {},\n    theme: {}\n  },\n  emits: [\"accordionChange\", \"update\"],\n  setup(s, { emit: m }) {\n    const d = v(\"p-accordion\"), t = s, e = f(), n = m, a = l(w), c = () => p(e, { ...t, theme: t.theme || a.value });\n    return h(() => {\n      c(), r(e, \"accordionChange\", n), r(e, \"update\", n);\n    }), u(c), y(a, (o) => {\n      p(e, { theme: t.theme || o });\n    }), (o, x) => (C(), g(_(B(d)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: k(() => [\n        R(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  j as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/AccordionWrapper.vue2.mjs":"import f from \"./AccordionWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/BannerWrapper.vue.d.ts":"import type { BannerHeadingTag, BannerState, Theme, BannerWidth } from '../types';\ntype PBannerProps = {\n    /**\n     * Description of the banner.\n     */\n    description?: string;\n    /**\n     * If false, the banner will not have a dismiss button.\n     */\n    dismissButton?: boolean;\n    /**\n     * Heading of the banner.\n     */\n    heading?: string;\n    /**\n     * Sets a heading tag, so it fits correctly within the outline of the page.\n     */\n    headingTag?: BannerHeadingTag;\n    /**\n     * If true, the banner is open.\n     */\n    open: boolean;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `dismissButton` instead. Defines if the banner can be closed/removed by the user.\n     */\n    persistent?: boolean;\n    /**\n     * State of the banner.\n     */\n    state?: BannerState;\n    /**\n     * Adapts the banner color depending on the theme.\n     */\n    theme?: Theme;\n    /**\n     * Has no effect anymore\n     * @deprecated since v3.0.0, will be removed with next major release\n     */\n    width?: BannerWidth;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PBannerProps>, {\n    description: string;\n    dismissButton: boolean;\n    heading: string;\n    headingTag: string;\n    open: boolean;\n    state: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, any, string, import(\"vue\").PublicProps, any, {\n    heading: string;\n    description: string;\n    headingTag: BannerHeadingTag;\n    open: boolean;\n    dismissButton: boolean;\n    state: BannerState;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/BannerWrapper.vue.mjs":"import { defineComponent as d, ref as f, inject as c, onMounted as l, onUpdated as u, watch as h, openBlock as y, createBlock as B, resolveDynamicComponent as _, unref as C, withCtx as g, renderSlot as w } from \"vue\";\nimport { usePrefix as R, themeInjectionKey as k, addEventListenerToElementRef as v, syncProperties as a } from \"../../utils.mjs\";\nconst b = /* @__PURE__ */ d({\n  __name: \"BannerWrapper\",\n  props: {\n    description: { default: \"\" },\n    dismissButton: { type: Boolean, default: !0 },\n    heading: { default: \"\" },\n    headingTag: { default: \"h5\" },\n    open: { type: Boolean, default: !1 },\n    persistent: { type: Boolean },\n    state: { default: \"info\" },\n    theme: {},\n    width: {}\n  },\n  emits: [\"dismiss\"],\n  setup(r, { emit: p }) {\n    const i = R(\"p-banner\"), t = r, e = f(), m = p, o = c(k), s = () => a(e, { ...t, theme: t.theme || o.value });\n    return l(() => {\n      s(), v(e, \"dismiss\", m);\n    }), u(s), h(o, (n) => {\n      a(e, { theme: t.theme || n });\n    }), (n, x) => (y(), B(_(C(i)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: g(() => [\n        w(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  b as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/BannerWrapper.vue2.mjs":"import f from \"./BannerWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonGroupWrapper.vue.d.ts":"import type { BreakpointCustomizable, ButtonGroupDirection } from '../types';\ntype PButtonGroupProps = {\n    /**\n     * Defines the direction of the main and cross axis. The default is ’{base: ‘column’, xs: ‘row’}' showing buttons vertically stacked on mobile viewports and side-by-side in a horizontal row from breakpoint ‘xs’. You always need to provide a base value when using breakpoints.\n     */\n    direction?: BreakpointCustomizable<ButtonGroupDirection>;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PButtonGroupProps>, {\n    direction: () => {\n        base: string;\n        xs: string;\n    };\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PButtonGroupProps>, {\n    direction: () => {\n        base: string;\n        xs: string;\n    };\n}>>>, {\n    direction: BreakpointCustomizable<ButtonGroupDirection>;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonGroupWrapper.vue.mjs":"import { defineComponent as s, ref as c, onMounted as f, onUpdated as u, openBlock as a, createBlock as m, resolveDynamicComponent as d, unref as i, withCtx as l, renderSlot as _ } from \"vue\";\nimport { usePrefix as C, syncProperties as x } from \"../../utils.mjs\";\nconst w = /* @__PURE__ */ s({\n  __name: \"ButtonGroupWrapper\",\n  props: {\n    direction: { default: () => ({ base: \"column\", xs: \"row\" }) }\n  },\n  setup(n) {\n    const t = C(\"p-button-group\"), r = n, e = c(), o = () => x(e, r);\n    return f(o), u(o), (p, y) => (a(), m(d(i(t)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: l(() => [\n        _(p.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  w as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonGroupWrapper.vue2.mjs":"import f from \"./ButtonGroupWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonPureWrapper.vue.d.ts":"import type { BreakpointCustomizable, ButtonPureAlignLabel, SelectedAriaAttributes, ButtonPureAriaAttribute, ButtonPureIcon, ButtonPureSize, Theme, ButtonPureType, ButtonPureWeight } from '../types';\ntype PButtonPureProps = {\n    /**\n     * Display button in active state.\n     */\n    active?: boolean;\n    /**\n     * Aligns the label.\n     */\n    alignLabel?: BreakpointCustomizable<ButtonPureAlignLabel>;\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<ButtonPureAriaAttribute>;\n    /**\n     * Disables the button. No events will be triggered while disabled state is active.\n     */\n    disabled?: boolean;\n    /**\n     * Show or hide label. For better accessibility it is recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * The icon shown.\n     */\n    icon?: ButtonPureIcon;\n    /**\n     * A URL path to a custom icon.\n     */\n    iconSource?: string;\n    /**\n     * Disables the button and shows a loading indicator. No events will be triggered while loading state is active.\n     */\n    loading?: boolean;\n    /**\n     * The name of the button, submitted as a pair with the button's value as part of the form data, when that button is used to submit the form.\n     */\n    name?: string;\n    /**\n     * Size of the button.\n     */\n    size?: BreakpointCustomizable<ButtonPureSize>;\n    /**\n     * Stretches the area between icon and label to max available space.\n     */\n    stretch?: BreakpointCustomizable<boolean>;\n    /**\n     * Adapts the button color depending on the theme.\n     */\n    theme?: Theme;\n    /**\n     * Specifies the type of the button.\n     */\n    type?: ButtonPureType;\n    /**\n     * Shows an underline under the label.\n     */\n    underline?: boolean;\n    /**\n     * Defines the value associated with the button's name when it's submitted with the form data. This value is passed to the server in params when the form is submitted using this button.\n     */\n    value?: string;\n    /**\n     * The weight of the text (only has effect with visible label).\n     * @deprecated since v3.0.0, will be removed with next major release\n     */\n    weight?: ButtonPureWeight;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PButtonPureProps>, {\n    active: boolean;\n    alignLabel: string;\n    disabled: boolean;\n    hideLabel: boolean;\n    icon: string;\n    loading: boolean;\n    size: string;\n    stretch: boolean;\n    type: string;\n    underline: boolean;\n    weight: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PButtonPureProps>, {\n    active: boolean;\n    alignLabel: string;\n    disabled: boolean;\n    hideLabel: boolean;\n    icon: string;\n    loading: boolean;\n    size: string;\n    stretch: boolean;\n    type: string;\n    underline: boolean;\n    weight: string;\n}>>>, {\n    weight: ButtonPureWeight;\n    stretch: BreakpointCustomizable<boolean>;\n    type: ButtonPureType;\n    size: BreakpointCustomizable<ButtonPureSize>;\n    disabled: boolean;\n    hideLabel: BreakpointCustomizable<boolean>;\n    icon: ButtonPureIcon;\n    loading: boolean;\n    active: boolean;\n    alignLabel: BreakpointCustomizable<ButtonPureAlignLabel>;\n    underline: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonPureWrapper.vue.mjs":"import { defineComponent as s, ref as u, inject as p, onMounted as d, onUpdated as c, watch as i, openBlock as m, createBlock as h, resolveDynamicComponent as y, unref as B, withCtx as _, renderSlot as b } from \"vue\";\nimport { usePrefix as g, themeInjectionKey as C, syncProperties as l } from \"../../utils.mjs\";\nconst k = /* @__PURE__ */ s({\n  __name: \"ButtonPureWrapper\",\n  props: {\n    active: { type: Boolean, default: !1 },\n    alignLabel: { default: \"end\" },\n    aria: {},\n    disabled: { type: Boolean, default: !1 },\n    hideLabel: { default: !1 },\n    icon: { default: \"arrow-right\" },\n    iconSource: {},\n    loading: { type: Boolean, default: !1 },\n    name: {},\n    size: { default: \"small\" },\n    stretch: { default: !1 },\n    theme: {},\n    type: { default: \"submit\" },\n    underline: { type: Boolean, default: !1 },\n    value: {},\n    weight: { default: \"regular\" }\n  },\n  setup(r) {\n    const f = g(\"p-button-pure\"), e = r, t = u(), a = p(C), n = () => l(t, { ...e, theme: e.theme || a.value });\n    return d(n), c(n), i(a, (o) => {\n      l(t, { theme: e.theme || o });\n    }), (o, w) => (m(), h(y(B(f)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: _(() => [\n        b(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  k as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonPureWrapper.vue2.mjs":"import f from \"./ButtonPureWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonTileWrapper.vue.d.ts":"import type { ButtonTileAlign, SelectedAriaAttributes, ButtonTileAriaAttribute, BreakpointCustomizable, ButtonTileAspectRatio, ButtonTileBackground, ButtonTileIcon, ButtonTileSize, ButtonTileType, ButtonTileWeight } from '../types';\ntype PButtonTileProps = {\n    /**\n     * Alignment of button and description.\n     */\n    align?: ButtonTileAlign;\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<ButtonTileAriaAttribute>;\n    /**\n     * Aspect ratio of the button-tile.\n     */\n    aspectRatio?: BreakpointCustomizable<ButtonTileAspectRatio>;\n    /**\n     * Adapts the description and button theme when used on light background image.\n     */\n    background?: ButtonTileBackground;\n    /**\n     * Displays the button-tile as compact version with description and button icon only.\n     */\n    compact?: BreakpointCustomizable<boolean>;\n    /**\n     * Description text.\n     */\n    description: string;\n    /**\n     * Disables the button. No events will be triggered while disabled state is active.\n     */\n    disabled?: boolean;\n    /**\n     * Show gradient.\n     */\n    gradient?: boolean;\n    /**\n     * The icon shown. By choosing 'none', no icon is displayed.\n     */\n    icon?: ButtonTileIcon;\n    /**\n     * A URL path to a custom icon.\n     */\n    iconSource?: string;\n    /**\n     * Label of the button.\n     */\n    label: string;\n    /**\n     * Disables the button-tile and shows a loading indicator. No events will be triggered while loading state is active.\n     */\n    loading?: boolean;\n    /**\n     * Font size of the description.\n     */\n    size?: BreakpointCustomizable<ButtonTileSize>;\n    /**\n     * Specifies the type of the button.\n     */\n    type?: ButtonTileType;\n    /**\n     * Font weight of the description.\n     */\n    weight?: BreakpointCustomizable<ButtonTileWeight>;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PButtonTileProps>, {\n    align: string;\n    aspectRatio: string;\n    background: string;\n    compact: boolean;\n    disabled: boolean;\n    gradient: boolean;\n    icon: string;\n    loading: boolean;\n    size: string;\n    type: string;\n    weight: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PButtonTileProps>, {\n    align: string;\n    aspectRatio: string;\n    background: string;\n    compact: boolean;\n    disabled: boolean;\n    gradient: boolean;\n    icon: string;\n    loading: boolean;\n    size: string;\n    type: string;\n    weight: string;\n}>>>, {\n    weight: BreakpointCustomizable<ButtonTileWeight>;\n    type: ButtonTileType;\n    compact: BreakpointCustomizable<boolean>;\n    size: BreakpointCustomizable<ButtonTileSize>;\n    disabled: boolean;\n    icon: ButtonTileIcon;\n    loading: boolean;\n    align: ButtonTileAlign;\n    aspectRatio: BreakpointCustomizable<ButtonTileAspectRatio>;\n    background: ButtonTileBackground;\n    gradient: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonTileWrapper.vue.mjs":"import { defineComponent as r, ref as d, onMounted as p, onUpdated as s, openBlock as f, createBlock as u, resolveDynamicComponent as i, unref as c, withCtx as m, renderSlot as b } from \"vue\";\nimport { usePrefix as y, syncProperties as _ } from \"../../utils.mjs\";\nconst k = /* @__PURE__ */ r({\n  __name: \"ButtonTileWrapper\",\n  props: {\n    align: { default: \"bottom\" },\n    aria: {},\n    aspectRatio: { default: \"4/3\" },\n    background: { default: \"dark\" },\n    compact: { default: !1 },\n    description: {},\n    disabled: { type: Boolean, default: !1 },\n    gradient: { type: Boolean, default: !0 },\n    icon: { default: \"none\" },\n    iconSource: {},\n    label: {},\n    loading: { type: Boolean, default: !1 },\n    size: { default: \"medium\" },\n    type: { default: \"submit\" },\n    weight: { default: \"semi-bold\" }\n  },\n  setup(o) {\n    const n = y(\"p-button-tile\"), a = o, e = d(), t = () => _(e, a);\n    return p(t), s(t), (l, g) => (f(), u(i(c(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: m(() => [\n        b(l.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  k as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonTileWrapper.vue2.mjs":"import f from \"./ButtonTileWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonWrapper.vue.d.ts":"import type { SelectedAriaAttributes, ButtonAriaAttribute, BreakpointCustomizable, ButtonIcon, Theme, ButtonType, ButtonVariant } from '../types';\ntype PButtonProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<ButtonAriaAttribute>;\n    /**\n     * Disables the button. No events will be triggered while disabled state is active.\n     */\n    disabled?: boolean;\n    /**\n     * Show or hide label. For better accessibility it is recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * The icon shown. By choosing 'none', no icon is displayed.\n     */\n    icon?: ButtonIcon;\n    /**\n     * A URL path to a custom icon.\n     */\n    iconSource?: string;\n    /**\n     * Disables the button and shows a loading indicator. No events will be triggered while loading state is active.\n     */\n    loading?: boolean;\n    /**\n     * The name of the button, submitted as a pair with the button's value as part of the form data, when that button is used to submit the form.\n     */\n    name?: string;\n    /**\n     * Adapts the button color depending on the theme.\n     */\n    theme?: Theme;\n    /**\n     * Specifies the type of the button.\n     */\n    type?: ButtonType;\n    /**\n     * Defines the value associated with the button's name when it's submitted with the form data. This value is passed to the server in params when the form is submitted using this button.\n     */\n    value?: string;\n    /**\n     * The style variant of the button.\n     */\n    variant?: ButtonVariant;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PButtonProps>, {\n    disabled: boolean;\n    hideLabel: boolean;\n    icon: string;\n    loading: boolean;\n    type: string;\n    variant: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PButtonProps>, {\n    disabled: boolean;\n    hideLabel: boolean;\n    icon: string;\n    loading: boolean;\n    type: string;\n    variant: string;\n}>>>, {\n    type: ButtonType;\n    disabled: boolean;\n    hideLabel: BreakpointCustomizable<boolean>;\n    icon: ButtonIcon;\n    loading: boolean;\n    variant: ButtonVariant;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonWrapper.vue.mjs":"import { defineComponent as f, ref as l, inject as m, onMounted as c, onUpdated as u, watch as d, openBlock as i, createBlock as h, resolveDynamicComponent as y, unref as _, withCtx as C, renderSlot as b } from \"vue\";\nimport { usePrefix as B, themeInjectionKey as v, syncProperties as r } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ f({\n  __name: \"ButtonWrapper\",\n  props: {\n    aria: {},\n    disabled: { type: Boolean, default: !1 },\n    hideLabel: { default: !1 },\n    icon: { default: \"none\" },\n    iconSource: {},\n    loading: { type: Boolean, default: !1 },\n    name: {},\n    theme: {},\n    type: { default: \"submit\" },\n    value: {},\n    variant: { default: \"primary\" }\n  },\n  setup(p) {\n    const s = B(\"p-button\"), e = p, t = l(), n = m(v), a = () => r(t, { ...e, theme: e.theme || n.value });\n    return c(a), u(a), d(n, (o) => {\n      r(t, { theme: e.theme || o });\n    }), (o, k) => (i(), h(y(_(s)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: C(() => [\n        b(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ButtonWrapper.vue2.mjs":"import f from \"./ButtonWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/CanvasWrapper.vue.d.ts":"import type { CanvasSidebarEndWidth, CanvasSidebarStartWidth } from '../types';\ntype PCanvasProps = {\n    sidebarEndOpen?: boolean;\n    /**\n     * Defines the width of the sidebar on the end side\n     */\n    sidebarEndWidth?: CanvasSidebarEndWidth;\n    /**\n     * Open Sidebar on the start side\n     */\n    sidebarStartOpen?: boolean;\n    /**\n     * Defines the width of the sidebar on the start side\n     */\n    sidebarStartWidth?: CanvasSidebarStartWidth;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PCanvasProps>, {\n    sidebarEndOpen: boolean;\n    sidebarEndWidth: string;\n    sidebarStartOpen: boolean;\n    sidebarStartWidth: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, any, string, import(\"vue\").PublicProps, any, {\n    sidebarEndOpen: boolean;\n    sidebarEndWidth: CanvasSidebarEndWidth;\n    sidebarStartOpen: boolean;\n    sidebarStartWidth: CanvasSidebarStartWidth;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/CanvasWrapper.vue.mjs":"import { defineComponent as p, ref as m, onMounted as f, onUpdated as l, openBlock as c, createBlock as u, resolveDynamicComponent as b, unref as S, withCtx as C, renderSlot as _ } from \"vue\";\nimport { usePrefix as y, addEventListenerToElementRef as s, syncProperties as E } from \"../../utils.mjs\";\nconst k = /* @__PURE__ */ p({\n  __name: \"CanvasWrapper\",\n  props: {\n    sidebarEndOpen: { type: Boolean, default: !1 },\n    sidebarEndWidth: { default: \"medium\" },\n    sidebarStartOpen: { type: Boolean, default: !1 },\n    sidebarStartWidth: { default: \"medium\" }\n  },\n  emits: [\"dismissSidebarEnd\", \"dismissSidebarStart\"],\n  setup(o, { emit: r }) {\n    const a = y(\"p-canvas\"), d = o, e = m(), t = r, n = () => E(e, d);\n    return f(() => {\n      n(), s(e, \"dismissSidebarEnd\", t), s(e, \"dismissSidebarStart\", t);\n    }), l(n), (i, h) => (c(), u(b(S(a)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: C(() => [\n        _(i.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  k as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/CanvasWrapper.vue2.mjs":"import f from \"./CanvasWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/CarouselWrapper.vue.d.ts":"import type { CarouselAlignHeader, SelectedAriaAttributes, CarouselAriaAttribute, BreakpointCustomizable, CarouselHeadingSize, CarouselInternationalization, Theme, CarouselWidth } from '../types';\ntype PCarouselProps = {\n    /**\n     * Defines which slide to be active (zero-based numbering).\n     */\n    activeSlideIndex?: number;\n    /**\n     * Alignment of heading and description\n     */\n    alignHeader?: CarouselAlignHeader;\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<CarouselAriaAttribute>;\n    /**\n     * Defines the description used in the carousel.\n     */\n    description?: string;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `pagination` instead. If true, the carousel will not show pagination bullets at the bottom.\n     */\n    disablePagination?: BreakpointCustomizable<boolean>;\n    /**\n     * Defines the heading used in the carousel.\n     */\n    heading?: string;\n    /**\n     * Defines the heading size used in the carousel.\n     */\n    headingSize?: CarouselHeadingSize;\n    /**\n     * Override the default wordings that are used for aria-labels on the next/prev buttons and pagination.\n     */\n    intl?: CarouselInternationalization;\n    /**\n     * If false, the carousel will not show pagination bullets at the bottom.\n     */\n    pagination?: BreakpointCustomizable<boolean>;\n    /**\n     * Whether the slides should rewind from last to first slide and vice versa.\n     */\n    rewind?: boolean;\n    /**\n     * Defines target of skip link (to skip carousel entries).\n     */\n    skipLinkTarget?: string;\n    /**\n     * Sets the amount of slides visible at the same time. Can be set to `auto` if you want to define different widths per slide via CSS.\n     */\n    slidesPerPage?: BreakpointCustomizable<number> | \"auto\";\n    /**\n     * Adapts the color when used on dark background.\n     */\n    theme?: Theme;\n    /**\n     * Defines the outer spacings between the carousel and the left and right screen sides.\n     */\n    width?: CarouselWidth;\n    /**\n     * Has no effect anymore\n     * @deprecated since v3.0.0, will be removed with next major release\n     */\n    wrapContent?: boolean;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PCarouselProps>, {\n    activeSlideIndex: number;\n    alignHeader: string;\n    headingSize: string;\n    pagination: boolean;\n    rewind: boolean;\n    slidesPerPage: number;\n    width: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    carouselChange: (value: import(\"../types\").CarouselUpdateEvent) => void;\n    update: (value: import(\"../types\").CarouselUpdateEvent) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PCarouselProps>, {\n    activeSlideIndex: number;\n    alignHeader: string;\n    headingSize: string;\n    pagination: boolean;\n    rewind: boolean;\n    slidesPerPage: number;\n    width: string;\n}>>> & {\n    onUpdate?: ((value: import(\"../types\").CarouselUpdateEvent) => any) | undefined;\n    onCarouselChange?: ((value: import(\"../types\").CarouselUpdateEvent) => any) | undefined;\n}, {\n    width: CarouselWidth;\n    activeSlideIndex: number;\n    alignHeader: CarouselAlignHeader;\n    headingSize: CarouselHeadingSize;\n    pagination: BreakpointCustomizable<boolean>;\n    rewind: boolean;\n    slidesPerPage: BreakpointCustomizable<number> | \"auto\";\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/CarouselWrapper.vue.mjs":"import { defineComponent as c, ref as u, inject as f, onMounted as m, onUpdated as h, watch as g, openBlock as C, createBlock as y, resolveDynamicComponent as _, unref as w, withCtx as P, renderSlot as k } from \"vue\";\nimport { usePrefix as x, themeInjectionKey as v, addEventListenerToElementRef as i, syncProperties as s } from \"../../utils.mjs\";\nconst S = /* @__PURE__ */ c({\n  __name: \"CarouselWrapper\",\n  props: {\n    activeSlideIndex: { default: 0 },\n    alignHeader: { default: \"start\" },\n    aria: {},\n    description: {},\n    disablePagination: {},\n    heading: {},\n    headingSize: { default: \"x-large\" },\n    intl: {},\n    pagination: { default: !0 },\n    rewind: { type: Boolean, default: !0 },\n    skipLinkTarget: {},\n    slidesPerPage: { default: 1 },\n    theme: {},\n    width: { default: \"basic\" },\n    wrapContent: { type: Boolean }\n  },\n  emits: [\"carouselChange\", \"update\"],\n  setup(d, { emit: p }) {\n    const l = x(\"p-carousel\"), t = d, e = u(), a = p, o = f(v), r = () => s(e, { ...t, theme: t.theme || o.value });\n    return m(() => {\n      r(), i(e, \"carouselChange\", a), i(e, \"update\", a);\n    }), h(r), g(o, (n) => {\n      s(e, { theme: t.theme || n });\n    }), (n, B) => (C(), y(_(w(l)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: P(() => [\n        k(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  S as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/CarouselWrapper.vue2.mjs":"import f from \"./CarouselWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/CheckboxWrapperWrapper.vue.d.ts":"import type { BreakpointCustomizable, CheckboxWrapperState, Theme } from '../types';\ntype PCheckboxWrapperProps = {\n    /**\n     * Show or hide label. For better accessibility it's recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * @experimental Disables the checkbox and shows a loading indicator.\n     */\n    loading?: boolean;\n    /**\n     * The message styled depending on validation state.\n     */\n    message?: string;\n    /**\n     * The validation state.\n     */\n    state?: CheckboxWrapperState;\n    /**\n     * Adapts the color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PCheckboxWrapperProps>, {\n    hideLabel: boolean;\n    label: string;\n    loading: boolean;\n    message: string;\n    state: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PCheckboxWrapperProps>, {\n    hideLabel: boolean;\n    label: string;\n    loading: boolean;\n    message: string;\n    state: string;\n}>>>, {\n    label: string;\n    state: CheckboxWrapperState;\n    hideLabel: BreakpointCustomizable<boolean>;\n    loading: boolean;\n    message: string;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/CheckboxWrapperWrapper.vue.mjs":"import { defineComponent as f, ref as c, inject as l, onMounted as m, onUpdated as d, watch as u, openBlock as h, createBlock as i, resolveDynamicComponent as C, unref as _, withCtx as y, renderSlot as b } from \"vue\";\nimport { usePrefix as k, themeInjectionKey as x, syncProperties as r } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ f({\n  __name: \"CheckboxWrapperWrapper\",\n  props: {\n    hideLabel: { default: !1 },\n    label: { default: \"\" },\n    loading: { type: Boolean, default: !1 },\n    message: { default: \"\" },\n    state: { default: \"none\" },\n    theme: {}\n  },\n  setup(p) {\n    const s = k(\"p-checkbox-wrapper\"), e = p, t = c(), n = l(x), a = () => r(t, { ...e, theme: e.theme || n.value });\n    return m(a), d(a), u(n, (o) => {\n      r(t, { theme: e.theme || o });\n    }), (o, w) => (h(), i(C(_(s)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: y(() => [\n        b(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/CheckboxWrapperWrapper.vue2.mjs":"import f from \"./CheckboxWrapperWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ContentWrapperWrapper.vue.d.ts":"import type { ContentWrapperBackgroundColor, Theme, ContentWrapperWidth } from '../types';\ntype PContentWrapperProps = {\n    /**\n     * Has no effect anymore\n     * @deprecated since v3.0.0, will be removed with next major release\n     */\n    backgroundColor?: ContentWrapperBackgroundColor;\n    /**\n     * Has no effect anymore\n     * @deprecated since v3.0.0, will be removed with next major release\n     */\n    theme?: Theme;\n    /**\n     * Defines the outer spacings between the content area and the left and right screen sides, as well as centering its content and setting a max-width.\n     */\n    width?: ContentWrapperWidth;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PContentWrapperProps>, {\n    backgroundColor: string;\n    width: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PContentWrapperProps>, {\n    backgroundColor: string;\n    width: string;\n}>>>, {\n    width: ContentWrapperWidth;\n    backgroundColor: ContentWrapperBackgroundColor;\n}, {}>;\n/** @deprecated since v3.0.0, will be removed with next major release. Use native CSS Grid instead. */\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/ContentWrapperWrapper.vue.mjs":"import { defineComponent as c, ref as m, inject as f, onMounted as d, onUpdated as u, watch as l, openBlock as h, createBlock as i, resolveDynamicComponent as C, unref as _, withCtx as w, renderSlot as y } from \"vue\";\nimport { usePrefix as k, themeInjectionKey as x, syncProperties as p } from \"../../utils.mjs\";\nconst g = /* @__PURE__ */ c({\n  __name: \"ContentWrapperWrapper\",\n  props: {\n    backgroundColor: { default: \"transparent\" },\n    theme: {},\n    width: { default: \"extended\" }\n  },\n  setup(s) {\n    const a = k(\"p-content-wrapper\"), e = s, t = m(), o = f(x), r = () => p(t, { ...e, theme: e.theme || o.value });\n    return d(r), u(r), l(o, (n) => {\n      p(t, { theme: e.theme || n });\n    }), (n, P) => (h(), i(C(_(a)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: w(() => [\n        y(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  g as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ContentWrapperWrapper.vue2.mjs":"import f from \"./ContentWrapperWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/CrestWrapper.vue.d.ts":"import type { SelectedAriaAttributes, CrestAriaAttribute, CrestTarget } from '../types';\ntype PCrestProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<CrestAriaAttribute>;\n    /**\n     * When providing an url then the component will be rendered as `<a>`.\n     */\n    href?: string;\n    /**\n     * Target attribute where the link should be opened.\n     */\n    target?: CrestTarget;\n};\ndeclare const _default: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PCrestProps>, {\n    target: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PCrestProps>, {\n    target: string;\n}>>>, {\n    target: CrestTarget;\n}, {}>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/CrestWrapper.vue.mjs":"import { defineComponent as p, ref as s, onMounted as c, onUpdated as f, openBlock as a, createBlock as m, resolveDynamicComponent as u, unref as d } from \"vue\";\nimport { usePrefix as i, syncProperties as l } from \"../../utils.mjs\";\nconst x = /* @__PURE__ */ p({\n  __name: \"CrestWrapper\",\n  props: {\n    aria: {},\n    href: {},\n    target: { default: \"_self\" }\n  },\n  setup(n) {\n    const r = i(\"p-crest\"), t = n, e = s(), o = () => l(e, t);\n    return c(o), f(o), (_, C) => (a(), m(u(d(r)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, null, 512));\n  }\n});\nexport {\n  x as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/CrestWrapper.vue2.mjs":"import f from \"./CrestWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/DisplayWrapper.vue.d.ts":"import type { DisplayAlign, DisplayColor, BreakpointCustomizable, DisplaySize, DisplayTag, Theme } from '../types';\ntype PDisplayProps = {\n    /**\n     * Text alignment of the component.\n     */\n    align?: DisplayAlign;\n    /**\n     * Basic text color variations depending on theme property.\n     */\n    color?: DisplayColor;\n    /**\n     * Adds an ellipsis to a single line of text if it overflows.\n     */\n    ellipsis?: boolean;\n    /**\n     * Size of the component. Also defines the size for specific breakpoints, like {base: \"medium\", l: \"large\"}. You always need to provide a base value when doing this.\n     */\n    size?: BreakpointCustomizable<DisplaySize>;\n    /**\n     * Sets a heading tag, so it fits correctly within the outline of the page.\n     */\n    tag?: DisplayTag;\n    /**\n     * Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PDisplayProps>, {\n    align: string;\n    color: string;\n    ellipsis: boolean;\n    size: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PDisplayProps>, {\n    align: string;\n    color: string;\n    ellipsis: boolean;\n    size: string;\n}>>>, {\n    size: BreakpointCustomizable<DisplaySize>;\n    align: DisplayAlign;\n    color: DisplayColor;\n    ellipsis: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/DisplayWrapper.vue.mjs":"import { defineComponent as l, ref as f, inject as m, onMounted as c, onUpdated as i, watch as d, openBlock as u, createBlock as h, resolveDynamicComponent as y, unref as _, withCtx as C, renderSlot as g } from \"vue\";\nimport { usePrefix as k, themeInjectionKey as w, syncProperties as s } from \"../../utils.mjs\";\nconst R = /* @__PURE__ */ l({\n  __name: \"DisplayWrapper\",\n  props: {\n    align: { default: \"start\" },\n    color: { default: \"primary\" },\n    ellipsis: { type: Boolean, default: !1 },\n    size: { default: \"large\" },\n    tag: {},\n    theme: {}\n  },\n  setup(a) {\n    const p = k(\"p-display\"), e = a, t = f(), n = m(w), r = () => s(t, { ...e, theme: e.theme || n.value });\n    return c(r), i(r), d(n, (o) => {\n      s(t, { theme: e.theme || o });\n    }), (o, x) => (u(), h(y(_(p)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: C(() => [\n        g(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  R as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/DisplayWrapper.vue2.mjs":"import f from \"./DisplayWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/DividerWrapper.vue.d.ts":"import type { DividerColor, BreakpointCustomizable, DividerDirection, DividerOrientation, Theme } from '../types';\ntype PDividerProps = {\n    /**\n     * Defines color depending on theme.\n     */\n    color?: DividerColor;\n    /**\n     * Defines direction.\n     */\n    direction?: BreakpointCustomizable<DividerDirection>;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `direction` instead. Defines orientation.\n     */\n    orientation?: BreakpointCustomizable<DividerOrientation>;\n    /**\n     * Adapts color depending on theme.\n     */\n    theme?: Theme;\n};\ndeclare const _default: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PDividerProps>, {\n    color: string;\n    direction: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PDividerProps>, {\n    color: string;\n    direction: string;\n}>>>, {\n    direction: BreakpointCustomizable<DividerDirection>;\n    color: DividerColor;\n}, {}>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/DividerWrapper.vue.mjs":"import { defineComponent as m, ref as i, inject as a, onMounted as f, onUpdated as d, watch as l, openBlock as u, createBlock as h, resolveDynamicComponent as _, unref as y } from \"vue\";\nimport { usePrefix as C, themeInjectionKey as v, syncProperties as c } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ m({\n  __name: \"DividerWrapper\",\n  props: {\n    color: { default: \"contrast-low\" },\n    direction: { default: \"horizontal\" },\n    orientation: {},\n    theme: {}\n  },\n  setup(p) {\n    const s = C(\"p-divider\"), e = p, o = i(), t = a(v), n = () => c(o, { ...e, theme: e.theme || t.value });\n    return f(n), d(n), l(t, (r) => {\n      c(o, { theme: e.theme || r });\n    }), (r, k) => (u(), h(_(y(s)), {\n      ref_key: \"pdsComponentRef\",\n      ref: o\n    }, null, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/DividerWrapper.vue2.mjs":"import f from \"./DividerWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FieldsetWrapper.vue.d.ts":"import type { FieldsetLabelSize, FieldsetState, Theme } from '../types';\ntype PFieldsetProps = {\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * The size of the label text.\n     */\n    labelSize?: FieldsetLabelSize;\n    /**\n     * The message styled depending on validation state.\n     */\n    message?: string;\n    /**\n     * Marks the Fieldset as required.\n     */\n    required?: boolean;\n    /**\n     * The validation state.\n     */\n    state?: FieldsetState;\n    /**\n     * Adapts color depending on theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PFieldsetProps>, {\n    label: string;\n    labelSize: string;\n    message: string;\n    required: boolean;\n    state: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PFieldsetProps>, {\n    label: string;\n    labelSize: string;\n    message: string;\n    required: boolean;\n    state: string;\n}>>>, {\n    label: string;\n    state: FieldsetState;\n    required: boolean;\n    message: string;\n    labelSize: FieldsetLabelSize;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/FieldsetWrapper.vue.mjs":"import { defineComponent as f, ref as l, inject as m, onMounted as d, onUpdated as c, watch as u, openBlock as i, createBlock as h, resolveDynamicComponent as _, unref as y, withCtx as C, renderSlot as b } from \"vue\";\nimport { usePrefix as k, themeInjectionKey as w, syncProperties as s } from \"../../utils.mjs\";\nconst R = /* @__PURE__ */ f({\n  __name: \"FieldsetWrapper\",\n  props: {\n    label: { default: \"\" },\n    labelSize: { default: \"medium\" },\n    message: { default: \"\" },\n    required: { type: Boolean, default: !1 },\n    state: { default: \"none\" },\n    theme: {}\n  },\n  setup(a) {\n    const p = k(\"p-fieldset\"), e = a, t = l(), n = m(w), r = () => s(t, { ...e, theme: e.theme || n.value });\n    return d(r), c(r), u(n, (o) => {\n      s(t, { theme: e.theme || o });\n    }), (o, x) => (i(), h(_(y(p)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: C(() => [\n        b(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  R as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FieldsetWrapper.vue2.mjs":"import f from \"./FieldsetWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FieldsetWrapperWrapper.vue.d.ts":"import type { FieldsetWrapperLabelSize, FieldsetWrapperState, Theme } from '../types';\ntype PFieldsetWrapperProps = {\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * The size of the label text.\n     */\n    labelSize?: FieldsetWrapperLabelSize;\n    /**\n     * The message styled depending on validation state.\n     */\n    message?: string;\n    /**\n     * Marks the Fieldset as required.\n     */\n    required?: boolean;\n    /**\n     * The validation state.\n     */\n    state?: FieldsetWrapperState;\n    /**\n     * Adapts color depending on theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PFieldsetWrapperProps>, {\n    label: string;\n    labelSize: string;\n    message: string;\n    required: boolean;\n    state: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PFieldsetWrapperProps>, {\n    label: string;\n    labelSize: string;\n    message: string;\n    required: boolean;\n    state: string;\n}>>>, {\n    label: string;\n    state: FieldsetWrapperState;\n    required: boolean;\n    message: string;\n    labelSize: FieldsetWrapperLabelSize;\n}, {}>;\n/** @deprecated since v3.0.0, will be removed with next major release. Please use \"p-fieldset\" instead. */\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/FieldsetWrapperWrapper.vue.mjs":"import { defineComponent as f, ref as l, inject as m, onMounted as d, onUpdated as c, watch as u, openBlock as i, createBlock as h, resolveDynamicComponent as _, unref as y, withCtx as C, renderSlot as w } from \"vue\";\nimport { usePrefix as b, themeInjectionKey as k, syncProperties as a } from \"../../utils.mjs\";\nconst R = /* @__PURE__ */ f({\n  __name: \"FieldsetWrapperWrapper\",\n  props: {\n    label: { default: \"\" },\n    labelSize: { default: \"medium\" },\n    message: { default: \"\" },\n    required: { type: Boolean, default: !1 },\n    state: { default: \"none\" },\n    theme: {}\n  },\n  setup(p) {\n    const s = b(\"p-fieldset-wrapper\"), e = p, t = l(), n = m(k), r = () => a(t, { ...e, theme: e.theme || n.value });\n    return d(r), c(r), u(n, (o) => {\n      a(t, { theme: e.theme || o });\n    }), (o, x) => (i(), h(_(y(s)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: C(() => [\n        w(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  R as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FieldsetWrapperWrapper.vue2.mjs":"import f from \"./FieldsetWrapperWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlexItemWrapper.vue.d.ts":"import type { BreakpointCustomizable, FlexItemAlignSelf, FlexItemFlex, FlexItemGrow, FlexItemOffset, FlexItemShrink, FlexItemWidth } from '../types';\ntype PFlexItemProps = {\n    /**\n     * Defines how this flex item is aligned along the cross axis. This overwrites the cross axis alignment set by the container. Corresponds to the \"alignSelf\" css property.\n     */\n    alignSelf?: BreakpointCustomizable<FlexItemAlignSelf>;\n    /**\n     * The shorthand property for the combined definition of \"shrink\", \"grow\" and \"basis\"\n     */\n    flex?: BreakpointCustomizable<FlexItemFlex>;\n    /**\n     * The ability to allow/disallow the flex child to grow.\n     */\n    grow?: BreakpointCustomizable<FlexItemGrow>;\n    /**\n     * The offset of the column. You can also supply values for specific breakpoints, like {base: \"none\", l: \"one-quarter\"}. You always need to provide a base value when doing this.\n     */\n    offset?: BreakpointCustomizable<FlexItemOffset>;\n    /**\n     * The ability to allow/disallow the flex child to shrink.\n     */\n    shrink?: BreakpointCustomizable<FlexItemShrink>;\n    /**\n     * The width of the flex item. You can also supply values for specific breakpoints, like {base: \"full\", l: \"one-quarter\"}. You always need to provide a base value when doing this.\n     */\n    width?: BreakpointCustomizable<FlexItemWidth>;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PFlexItemProps>, {\n    alignSelf: string;\n    flex: string;\n    grow: number;\n    offset: string;\n    shrink: number;\n    width: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PFlexItemProps>, {\n    alignSelf: string;\n    flex: string;\n    grow: number;\n    offset: string;\n    shrink: number;\n    width: string;\n}>>>, {\n    width: BreakpointCustomizable<FlexItemWidth>;\n    alignSelf: BreakpointCustomizable<FlexItemAlignSelf>;\n    flex: BreakpointCustomizable<FlexItemFlex>;\n    grow: BreakpointCustomizable<FlexItemGrow>;\n    offset: BreakpointCustomizable<FlexItemOffset>;\n    shrink: BreakpointCustomizable<FlexItemShrink>;\n}, {}>;\n/** @deprecated since v3.0.0, will be removed with next major release. Use native CSS Flex instead. */\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlexItemWrapper.vue.mjs":"import { defineComponent as a, ref as p, onMounted as s, onUpdated as l, openBlock as d, createBlock as u, resolveDynamicComponent as i, unref as c, withCtx as m, renderSlot as _ } from \"vue\";\nimport { usePrefix as x, syncProperties as C } from \"../../utils.mjs\";\nconst y = /* @__PURE__ */ a({\n  __name: \"FlexItemWrapper\",\n  props: {\n    alignSelf: { default: \"auto\" },\n    flex: { default: \"initial\" },\n    grow: { default: 0 },\n    offset: { default: \"none\" },\n    shrink: { default: 1 },\n    width: { default: \"auto\" }\n  },\n  setup(o) {\n    const n = x(\"p-flex-item\"), r = o, e = p(), t = () => C(e, r);\n    return s(t), l(t), (f, h) => (d(), u(i(c(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: m(() => [\n        _(f.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  y as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlexItemWrapper.vue2.mjs":"import f from \"./FlexItemWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlexWrapper.vue.d.ts":"import type { BreakpointCustomizable, FlexAlignContent, FlexAlignItems, FlexDirection, FlexInline, FlexJustifyContent, FlexWrap } from '../types';\ntype PFlexProps = {\n    /**\n     * This aligns a flex container's individual lines when there is extra space in the cross-axis, similar to how \"justifyContent\" aligns individual items along the main axis.\n     */\n    alignContent?: BreakpointCustomizable<FlexAlignContent>;\n    /**\n     * Defines how the flex items are aligned along the cross axis.\n     */\n    alignItems?: BreakpointCustomizable<FlexAlignItems>;\n    /**\n     * Defines the direction of the main and cross axis. The default \"row\" defines the main axis as horizontal left to right.\n     */\n    direction?: BreakpointCustomizable<FlexDirection>;\n    /**\n     * Defines the flex containers content flow if 2 or more containers are siblings of each other.\n     */\n    inline?: BreakpointCustomizable<FlexInline>;\n    /**\n     * Defines how the flex items are aligned along the main axis.\n     */\n    justifyContent?: BreakpointCustomizable<FlexJustifyContent>;\n    /**\n     * Handles wrapping behaviour of elements.\n     */\n    wrap?: BreakpointCustomizable<FlexWrap>;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PFlexProps>, {\n    alignContent: string;\n    alignItems: string;\n    direction: string;\n    inline: boolean;\n    justifyContent: string;\n    wrap: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PFlexProps>, {\n    alignContent: string;\n    alignItems: string;\n    direction: string;\n    inline: boolean;\n    justifyContent: string;\n    wrap: string;\n}>>>, {\n    inline: BreakpointCustomizable<FlexInline>;\n    wrap: BreakpointCustomizable<FlexWrap>;\n    direction: BreakpointCustomizable<FlexDirection>;\n    alignContent: BreakpointCustomizable<FlexAlignContent>;\n    alignItems: BreakpointCustomizable<FlexAlignItems>;\n    justifyContent: BreakpointCustomizable<FlexJustifyContent>;\n}, {}>;\n/** @deprecated since v3.0.0, will be removed with next major release. Use native CSS Flex instead. */\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlexWrapper.vue.mjs":"import { defineComponent as a, ref as f, onMounted as p, onUpdated as l, openBlock as c, createBlock as d, resolveDynamicComponent as u, unref as i, withCtx as m, renderSlot as C } from \"vue\";\nimport { usePrefix as _, syncProperties as x } from \"../../utils.mjs\";\nconst g = /* @__PURE__ */ a({\n  __name: \"FlexWrapper\",\n  props: {\n    alignContent: { default: \"stretch\" },\n    alignItems: { default: \"stretch\" },\n    direction: { default: \"row\" },\n    inline: { default: !1 },\n    justifyContent: { default: \"flex-start\" },\n    wrap: { default: \"nowrap\" }\n  },\n  setup(n) {\n    const o = _(\"p-flex\"), r = n, e = f(), t = () => x(e, r);\n    return p(t), l(t), (s, w) => (c(), d(u(i(o)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: m(() => [\n        C(s.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  g as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlexWrapper.vue2.mjs":"import f from \"./FlexWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlyoutMultilevelItemWrapper.vue.d.ts":"type PFlyoutMultilevelItemProps = {\n    /**\n     * Unique identifier which controls if this item should be shown when the active-identifier on the flyout-multilevel is set to this value.\n     */\n    identifier: string;\n    /**\n     * Label of the item.\n     */\n    label?: string;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_TypePropsToOption<PFlyoutMultilevelItemProps>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_TypePropsToOption<PFlyoutMultilevelItemProps>>>, {}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlyoutMultilevelItemWrapper.vue.mjs":"import { defineComponent as s, ref as l, onMounted as f, onUpdated as m, openBlock as c, createBlock as i, resolveDynamicComponent as a, unref as u, withCtx as d, renderSlot as _ } from \"vue\";\nimport { usePrefix as y, syncProperties as C } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ s({\n  __name: \"FlyoutMultilevelItemWrapper\",\n  props: {\n    identifier: {},\n    label: {}\n  },\n  setup(t) {\n    const n = y(\"p-flyout-multilevel-item\"), r = t, e = l(), o = () => C(e, r);\n    return f(o), m(o), (p, k) => (c(), i(a(u(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: d(() => [\n        _(p.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlyoutMultilevelItemWrapper.vue2.mjs":"import f from \"./FlyoutMultilevelItemWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlyoutMultilevelWrapper.vue.d.ts":"import type { SelectedAriaAttributes, FlyoutMultilevelAriaAttribute, Theme } from '../types';\ntype PFlyoutMultilevelProps = {\n    /**\n     * Defines which flyout-multilevel-item to be visualized as opened.\n     */\n    activeIdentifier?: string | undefined;\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<FlyoutMultilevelAriaAttribute>;\n    /**\n     * If true, the flyout-multilevel is visualized as opened.\n     */\n    open?: boolean;\n    /**\n     * Adapts the flyout-multilevel color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PFlyoutMultilevelProps>, {\n    open: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, any, string, import(\"vue\").PublicProps, any, {\n    open: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlyoutMultilevelWrapper.vue.mjs":"import { defineComponent as c, ref as f, inject as d, onMounted as u, onUpdated as h, watch as y, openBlock as _, createBlock as v, resolveDynamicComponent as C, unref as R, withCtx as k, renderSlot as w } from \"vue\";\nimport { usePrefix as x, themeInjectionKey as B, addEventListenerToElementRef as m, syncProperties as p } from \"../../utils.mjs\";\nconst I = /* @__PURE__ */ c({\n  __name: \"FlyoutMultilevelWrapper\",\n  props: {\n    activeIdentifier: {},\n    aria: {},\n    open: { type: Boolean, default: !1 },\n    theme: {}\n  },\n  emits: [\"dismiss\", \"update\"],\n  setup(i, { emit: a }) {\n    const l = x(\"p-flyout-multilevel\"), t = i, e = f(), n = a, s = d(B), r = () => p(e, { ...t, theme: t.theme || s.value });\n    return u(() => {\n      r(), m(e, \"dismiss\", n), m(e, \"update\", n);\n    }), h(r), y(s, (o) => {\n      p(e, { theme: t.theme || o });\n    }), (o, P) => (_(), v(C(R(l)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: k(() => [\n        w(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  I as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlyoutMultilevelWrapper.vue2.mjs":"import f from \"./FlyoutMultilevelWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlyoutWrapper.vue.d.ts":"import type { SelectedAriaAttributes, FlyoutAriaAttribute, FlyoutPosition, Theme } from '../types';\ntype PFlyoutProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<FlyoutAriaAttribute>;\n    /**\n     * If true, the flyout will not be closable via backdrop click.\n     */\n    disableBackdropClick?: boolean;\n    /**\n     * If true, the flyout is open.\n     */\n    open: boolean;\n    /**\n     * The position of the flyout\n     */\n    position?: FlyoutPosition;\n    /**\n     * Adapts the flyout color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PFlyoutProps>, {\n    disableBackdropClick: boolean;\n    open: boolean;\n    position: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, any, string, import(\"vue\").PublicProps, any, {\n    open: boolean;\n    disableBackdropClick: boolean;\n    position: FlyoutPosition;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlyoutWrapper.vue.mjs":"import { defineComponent as l, ref as f, inject as c, onMounted as u, onUpdated as h, watch as y, openBlock as C, createBlock as _, resolveDynamicComponent as E, unref as k, withCtx as B, renderSlot as b } from \"vue\";\nimport { usePrefix as R, themeInjectionKey as v, addEventListenerToElementRef as s, syncProperties as d } from \"../../utils.mjs\";\nconst j = /* @__PURE__ */ l({\n  __name: \"FlyoutWrapper\",\n  props: {\n    aria: {},\n    disableBackdropClick: { type: Boolean, default: !1 },\n    open: { type: Boolean, default: !1 },\n    position: { default: \"end\" },\n    theme: {}\n  },\n  emits: [\"dismiss\", \"motionHiddenEnd\", \"motionVisibleEnd\"],\n  setup(r, { emit: p }) {\n    const a = R(\"p-flyout\"), t = r, e = f(), o = p, i = c(v), m = () => d(e, { ...t, theme: t.theme || i.value });\n    return u(() => {\n      m(), s(e, \"dismiss\", o), s(e, \"motionHiddenEnd\", o), s(e, \"motionVisibleEnd\", o);\n    }), h(m), y(i, (n) => {\n      d(e, { theme: t.theme || n });\n    }), (n, w) => (C(), _(E(k(a)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: B(() => [\n        b(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  j as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/FlyoutWrapper.vue2.mjs":"import f from \"./FlyoutWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/GridItemWrapper.vue.d.ts":"import type { BreakpointCustomizable, GridItemOffset, GridItemSize } from '../types';\ntype PGridItemProps = {\n    /**\n     * The offset of the column. Can be between 0 and 11. Also defines the offset of the column for specific breakpoints, like {base: 6, l: 3}. You always need to provide a base value when doing this.\n     */\n    offset?: BreakpointCustomizable<GridItemOffset>;\n    /**\n     * The size of the column. Can be between 1 and 12. Also defines the size of the column for specific breakpoints, like {base: 6, l: 3}. You always need to provide a base value when doing this.\n     */\n    size?: BreakpointCustomizable<GridItemSize>;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PGridItemProps>, {\n    offset: number;\n    size: number;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PGridItemProps>, {\n    offset: number;\n    size: number;\n}>>>, {\n    size: BreakpointCustomizable<GridItemSize>;\n    offset: BreakpointCustomizable<GridItemOffset>;\n}, {}>;\n/** @deprecated since v3.0.0, will be removed with next major release. Use native CSS Grid instead. */\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/GridItemWrapper.vue.mjs":"import { defineComponent as s, ref as f, onMounted as a, onUpdated as c, openBlock as d, createBlock as m, resolveDynamicComponent as i, unref as u, withCtx as l, renderSlot as _ } from \"vue\";\nimport { usePrefix as C, syncProperties as y } from \"../../utils.mjs\";\nconst g = /* @__PURE__ */ s({\n  __name: \"GridItemWrapper\",\n  props: {\n    offset: { default: 0 },\n    size: { default: 1 }\n  },\n  setup(t) {\n    const n = C(\"p-grid-item\"), r = t, e = f(), o = () => y(e, r);\n    return a(o), c(o), (p, k) => (d(), m(i(u(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: l(() => [\n        _(p.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  g as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/GridItemWrapper.vue2.mjs":"import f from \"./GridItemWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/GridWrapper.vue.d.ts":"import type { BreakpointCustomizable, GridDirection, GridGutter, GridWrap } from '../types';\ntype PGridProps = {\n    /**\n     * Defines the direction of the main and cross axis. The default \"row\" defines the main axis as horizontal left to right. Also defines the direction for specific breakpoints, like {base: \"column\", l: \"row\"}. You always need to provide a base value when doing this.\n     */\n    direction?: BreakpointCustomizable<GridDirection>;\n    /**\n     * Has no effect anymore\n     * @deprecated since v3.0.0, will be removed with next major release\n     */\n    gutter?: BreakpointCustomizable<GridGutter>;\n    /**\n     * Handles wrapping behaviour of elements.\n     */\n    wrap?: BreakpointCustomizable<GridWrap>;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PGridProps>, {\n    direction: string;\n    gutter: () => {\n        base: number;\n        s: number;\n        m: number;\n    };\n    wrap: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PGridProps>, {\n    direction: string;\n    gutter: () => {\n        base: number;\n        s: number;\n        m: number;\n    };\n    wrap: string;\n}>>>, {\n    wrap: BreakpointCustomizable<GridWrap>;\n    direction: BreakpointCustomizable<GridDirection>;\n    gutter: BreakpointCustomizable<GridGutter>;\n}, {}>;\n/** @deprecated since v3.0.0, will be removed with next major release. Use native CSS Grid instead. */\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/GridWrapper.vue.mjs":"import { defineComponent as s, ref as a, onMounted as f, onUpdated as d, openBlock as c, createBlock as m, resolveDynamicComponent as u, unref as i, withCtx as l, renderSlot as _ } from \"vue\";\nimport { usePrefix as C, syncProperties as w } from \"../../utils.mjs\";\nconst x = /* @__PURE__ */ s({\n  __name: \"GridWrapper\",\n  props: {\n    direction: { default: \"row\" },\n    gutter: { default: () => ({ base: 16, s: 24, m: 36 }) },\n    wrap: { default: \"wrap\" }\n  },\n  setup(t) {\n    const r = C(\"p-grid\"), n = t, e = a(), o = () => w(e, n);\n    return f(o), d(o), (p, y) => (c(), m(u(i(r)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: l(() => [\n        _(p.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  x as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/GridWrapper.vue2.mjs":"import f from \"./GridWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/HeadingWrapper.vue.d.ts":"import type { HeadingAlign, HeadingColor, BreakpointCustomizable, HeadingSize, HeadingTag, Theme } from '../types';\ntype PHeadingProps = {\n    /**\n     * Text alignment of the component.\n     */\n    align?: HeadingAlign;\n    /**\n     * Basic text color variations depending on theme property.\n     */\n    color?: HeadingColor;\n    /**\n     * Adds an ellipsis to a single line of text if it overflows.\n     */\n    ellipsis?: boolean;\n    /**\n     * Size of the component. Also defines the size for specific breakpoints, like {base: \"small\", l: \"medium\"}. You always need to provide a base value when doing this.\n     */\n    size?: BreakpointCustomizable<HeadingSize>;\n    /**\n     * Sets a heading tag, so it fits correctly within the outline of the page.\n     */\n    tag?: HeadingTag;\n    /**\n     * Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PHeadingProps>, {\n    align: string;\n    color: string;\n    ellipsis: boolean;\n    size: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PHeadingProps>, {\n    align: string;\n    color: string;\n    ellipsis: boolean;\n    size: string;\n}>>>, {\n    size: BreakpointCustomizable<HeadingSize>;\n    align: HeadingAlign;\n    color: HeadingColor;\n    ellipsis: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/HeadingWrapper.vue.mjs":"import { defineComponent as f, ref as l, inject as m, onMounted as c, onUpdated as i, watch as d, openBlock as u, createBlock as h, resolveDynamicComponent as y, unref as _, withCtx as g, renderSlot as C } from \"vue\";\nimport { usePrefix as x, themeInjectionKey as k, syncProperties as a } from \"../../utils.mjs\";\nconst R = /* @__PURE__ */ f({\n  __name: \"HeadingWrapper\",\n  props: {\n    align: { default: \"start\" },\n    color: { default: \"primary\" },\n    ellipsis: { type: Boolean, default: !1 },\n    size: { default: \"xx-large\" },\n    tag: {},\n    theme: {}\n  },\n  setup(s) {\n    const p = x(\"p-heading\"), e = s, t = l(), n = m(k), r = () => a(t, { ...e, theme: e.theme || n.value });\n    return c(r), i(r), d(n, (o) => {\n      a(t, { theme: e.theme || o });\n    }), (o, w) => (u(), h(y(_(p)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: g(() => [\n        C(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  R as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/HeadingWrapper.vue2.mjs":"import f from \"./HeadingWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/HeadlineWrapper.vue.d.ts":"import type { HeadlineAlign, HeadlineColor, HeadlineTag, Theme, HeadlineVariant } from '../types';\ntype PHeadlineProps = {\n    /**\n     * Text alignment of the component.\n     */\n    align?: HeadlineAlign;\n    /**\n     * Basic text color variations depending on theme property.\n     */\n    color?: HeadlineColor;\n    /**\n     * Adds an ellipsis to a single line of text if it overflows.\n     */\n    ellipsis?: boolean;\n    /**\n     * Sets a custom HTML tag depending on the usage of the headline component.\n     */\n    tag?: HeadlineTag;\n    /**\n     * Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop.\n     */\n    theme?: Theme;\n    /**\n     * Predefined style of the headline.\n     */\n    variant?: HeadlineVariant;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PHeadlineProps>, {\n    align: string;\n    color: string;\n    ellipsis: boolean;\n    variant: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PHeadlineProps>, {\n    align: string;\n    color: string;\n    ellipsis: boolean;\n    variant: string;\n}>>>, {\n    variant: HeadlineVariant;\n    align: HeadlineAlign;\n    color: HeadlineColor;\n    ellipsis: boolean;\n}, {}>;\n/** @deprecated since v3.0.0, will be removed with next major release. Please use \"p-heading\" instead. */\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/HeadlineWrapper.vue.mjs":"import { defineComponent as l, ref as f, inject as m, onMounted as c, onUpdated as i, watch as d, openBlock as u, createBlock as h, resolveDynamicComponent as y, unref as _, withCtx as C, renderSlot as g } from \"vue\";\nimport { usePrefix as k, themeInjectionKey as v, syncProperties as a } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ l({\n  __name: \"HeadlineWrapper\",\n  props: {\n    align: { default: \"start\" },\n    color: { default: \"primary\" },\n    ellipsis: { type: Boolean, default: !1 },\n    tag: {},\n    theme: {},\n    variant: { default: \"headline-1\" }\n  },\n  setup(p) {\n    const s = k(\"p-headline\"), e = p, t = f(), o = m(v), r = () => a(t, { ...e, theme: e.theme || o.value });\n    return c(r), i(r), d(o, (n) => {\n      a(t, { theme: e.theme || n });\n    }), (n, w) => (u(), h(y(_(s)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: C(() => [\n        g(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/HeadlineWrapper.vue2.mjs":"import f from \"./HeadlineWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/IconWrapper.vue.d.ts":"import type { SelectedAriaAttributes, IconAriaAttribute, IconColor, IconName, IconSize, Theme } from '../types';\ntype PIconProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<IconAriaAttribute>;\n    /**\n     * Basic color variations depending on theme property.\n     */\n    color?: IconColor;\n    /**\n     * Has no effect anymore (the component is now using the native `loading=\"lazy\"` attribute by default)\n     * @deprecated since v3.0.0, will be removed with next major release\n     */\n    lazy?: boolean;\n    /**\n     * Specifies which icon to use.\n     */\n    name?: IconName;\n    /**\n     * The size of the icon.\n     */\n    size?: IconSize;\n    /**\n     * Specifies a whole icon path which can be used for custom icons.\n     */\n    source?: string;\n    /**\n     * Adapts the color depending on the theme. Has no effect when \"inherit\" is set as color prop.\n     */\n    theme?: Theme;\n};\ndeclare const _default: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PIconProps>, {\n    color: string;\n    name: string;\n    size: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PIconProps>, {\n    color: string;\n    name: string;\n    size: string;\n}>>>, {\n    size: IconSize;\n    name: IconName;\n    color: IconColor;\n}, {}>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/IconWrapper.vue.mjs":"import { defineComponent as m, ref as s, inject as f, onMounted as l, onUpdated as i, watch as u, openBlock as d, createBlock as h, resolveDynamicComponent as y, unref as _ } from \"vue\";\nimport { usePrefix as C, themeInjectionKey as k, syncProperties as p } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ m({\n  __name: \"IconWrapper\",\n  props: {\n    aria: {},\n    color: { default: \"primary\" },\n    lazy: { type: Boolean },\n    name: { default: \"arrow-right\" },\n    size: { default: \"small\" },\n    source: {},\n    theme: {}\n  },\n  setup(a) {\n    const c = C(\"p-icon\"), e = a, o = s(), t = f(k), n = () => p(o, { ...e, theme: e.theme || t.value });\n    return l(n), i(n), u(t, (r) => {\n      p(o, { theme: e.theme || r });\n    }), (r, w) => (d(), h(y(_(c)), {\n      ref_key: \"pdsComponentRef\",\n      ref: o\n    }, null, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/IconWrapper.vue2.mjs":"import f from \"./IconWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/InlineNotificationWrapper.vue.d.ts":"import type { InlineNotificationActionIcon, InlineNotificationHeadingTag, InlineNotificationState, Theme } from '../types';\ntype PInlineNotificationProps = {\n    /**\n     * Action icon of the inline-notification.\n     */\n    actionIcon?: InlineNotificationActionIcon;\n    /**\n     * Action label of the inline-notification.\n     */\n    actionLabel?: string;\n    /**\n     * Disables the action button and shows a loading indicator. No events will be triggered while loading state is active.\n     */\n    actionLoading?: boolean;\n    /**\n     * Description of the inline-notification.\n     */\n    description?: string;\n    /**\n     * If false, the inline-notification will not have a dismiss button.\n     */\n    dismissButton?: boolean;\n    /**\n     * Heading of the inline-notification.\n     */\n    heading?: string;\n    /**\n     * Sets a heading tag, so it fits correctly within the outline of the page.\n     */\n    headingTag?: InlineNotificationHeadingTag;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `dismissButton` instead. Defines if the inline-notification can be closed/removed by the user.\n     */\n    persistent?: boolean;\n    /**\n     * State of the inline-notification.\n     */\n    state?: InlineNotificationState;\n    /**\n     * Adapts the inline-notification color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PInlineNotificationProps>, {\n    actionIcon: string;\n    actionLoading: boolean;\n    description: string;\n    dismissButton: boolean;\n    heading: string;\n    headingTag: string;\n    state: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, any, string, import(\"vue\").PublicProps, any, {\n    heading: string;\n    description: string;\n    headingTag: InlineNotificationHeadingTag;\n    dismissButton: boolean;\n    state: InlineNotificationState;\n    actionIcon: InlineNotificationActionIcon;\n    actionLoading: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/InlineNotificationWrapper.vue.mjs":"import { defineComponent as d, ref as m, inject as l, onMounted as u, onUpdated as h, watch as y, openBlock as _, createBlock as g, resolveDynamicComponent as B, unref as C, withCtx as w, renderSlot as R } from \"vue\";\nimport { usePrefix as k, themeInjectionKey as v, addEventListenerToElementRef as s, syncProperties as r } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ d({\n  __name: \"InlineNotificationWrapper\",\n  props: {\n    actionIcon: { default: \"arrow-right\" },\n    actionLabel: {},\n    actionLoading: { type: Boolean, default: !1 },\n    description: { default: \"\" },\n    dismissButton: { type: Boolean, default: !0 },\n    heading: { default: \"\" },\n    headingTag: { default: \"h5\" },\n    persistent: { type: Boolean },\n    state: { default: \"info\" },\n    theme: {}\n  },\n  emits: [\"action\", \"dismiss\"],\n  setup(c, { emit: f }) {\n    const p = k(\"p-inline-notification\"), t = c, e = m(), o = f, i = l(v), a = () => r(e, { ...t, theme: t.theme || i.value });\n    return u(() => {\n      a(), s(e, \"action\", o), s(e, \"dismiss\", o);\n    }), h(a), y(i, (n) => {\n      r(e, { theme: t.theme || n });\n    }), (n, x) => (_(), g(B(C(p)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: w(() => [\n        R(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/InlineNotificationWrapper.vue2.mjs":"import f from \"./InlineNotificationWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkPureWrapper.vue.d.ts":"import type { BreakpointCustomizable, LinkPureAlignLabel, SelectedAriaAttributes, LinkPureAriaAttribute, LinkPureIcon, LinkPureSize, LinkPureTarget, Theme, LinkPureWeight } from '../types';\ntype PLinkPureProps = {\n    /**\n     * Display link in active state.\n     */\n    active?: boolean;\n    /**\n     * Aligns the label.\n     */\n    alignLabel?: BreakpointCustomizable<LinkPureAlignLabel>;\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<LinkPureAriaAttribute>;\n    /**\n     * Special download attribute to open native browser download dialog if target url points to a downloadable file.\n     */\n    download?: string;\n    /**\n     * Show or hide label. For better accessibility it is recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * When providing an url then the component will be rendered as `<a>`.\n     */\n    href?: string;\n    /**\n     * The icon shown. By choosing 'none', no icon is displayed\n     */\n    icon?: LinkPureIcon;\n    /**\n     * A URL path to a custom icon.\n     */\n    iconSource?: string;\n    /**\n     * Specifies the relationship of the target object to the link object.\n     */\n    rel?: string;\n    /**\n     * Size of the link.\n     */\n    size?: BreakpointCustomizable<LinkPureSize>;\n    /**\n     * Stretches the area between icon and label to max available space.\n     */\n    stretch?: BreakpointCustomizable<boolean>;\n    /**\n     * Target attribute where the link should be opened.\n     */\n    target?: LinkPureTarget;\n    /**\n     * Adapts the button color depending on the theme.\n     */\n    theme?: Theme;\n    /**\n     * Shows an underline under the label.\n     */\n    underline?: boolean;\n    /**\n     * The weight of the text (only has effect with visible label).\n     * @deprecated since v3.0.0, will be removed with next major release\n     */\n    weight?: LinkPureWeight;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkPureProps>, {\n    active: boolean;\n    alignLabel: string;\n    hideLabel: boolean;\n    icon: string;\n    size: string;\n    stretch: boolean;\n    target: string;\n    underline: boolean;\n    weight: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkPureProps>, {\n    active: boolean;\n    alignLabel: string;\n    hideLabel: boolean;\n    icon: string;\n    size: string;\n    stretch: boolean;\n    target: string;\n    underline: boolean;\n    weight: string;\n}>>>, {\n    weight: LinkPureWeight;\n    stretch: BreakpointCustomizable<boolean>;\n    size: BreakpointCustomizable<LinkPureSize>;\n    hideLabel: BreakpointCustomizable<boolean>;\n    icon: LinkPureIcon;\n    active: boolean;\n    alignLabel: BreakpointCustomizable<LinkPureAlignLabel>;\n    underline: boolean;\n    target: LinkPureTarget;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkPureWrapper.vue.mjs":"import { defineComponent as s, ref as p, inject as d, onMounted as u, onUpdated as c, watch as i, openBlock as m, createBlock as h, resolveDynamicComponent as _, unref as y, withCtx as g, renderSlot as w } from \"vue\";\nimport { usePrefix as C, themeInjectionKey as k, syncProperties as r } from \"../../utils.mjs\";\nconst v = /* @__PURE__ */ s({\n  __name: \"LinkPureWrapper\",\n  props: {\n    active: { type: Boolean, default: !1 },\n    alignLabel: { default: \"end\" },\n    aria: {},\n    download: {},\n    hideLabel: { default: !1 },\n    href: {},\n    icon: { default: \"arrow-right\" },\n    iconSource: {},\n    rel: {},\n    size: { default: \"small\" },\n    stretch: { default: !1 },\n    target: { default: \"_self\" },\n    theme: {},\n    underline: { type: Boolean, default: !1 },\n    weight: { default: \"regular\" }\n  },\n  setup(l) {\n    const f = C(\"p-link-pure\"), e = l, t = p(), n = d(k), a = () => r(t, { ...e, theme: e.theme || n.value });\n    return u(a), c(a), i(n, (o) => {\n      r(t, { theme: e.theme || o });\n    }), (o, B) => (m(), h(_(y(f)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: g(() => [\n        w(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  v as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkPureWrapper.vue2.mjs":"import f from \"./LinkPureWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkSocialWrapper.vue.d.ts":"import type { BreakpointCustomizable, LinkSocialIcon, LinkSocialTarget, Theme } from '../types';\ntype PLinkSocialProps = {\n    /**\n     * Show or hide label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * When providing an url then the component will be rendered as `<a>`.\n     */\n    href?: string;\n    /**\n     * The icon shown.\n     */\n    icon?: LinkSocialIcon;\n    /**\n     * A URL path to a custom icon.\n     */\n    iconSource?: string;\n    /**\n     * Specifies the relationship of the target object to the link object.\n     */\n    rel?: string;\n    /**\n     * Target attribute where the link should be opened.\n     */\n    target?: LinkSocialTarget;\n    /**\n     * Adapts the link color when used on dark background.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkSocialProps>, {\n    hideLabel: boolean;\n    target: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkSocialProps>, {\n    hideLabel: boolean;\n    target: string;\n}>>>, {\n    hideLabel: BreakpointCustomizable<boolean>;\n    target: LinkSocialTarget;\n}, {}>;\n/** @deprecated since v3.0.0, will be removed with next major release. Use `p-link` with corresponding social icon instead. */\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkSocialWrapper.vue.mjs":"import { defineComponent as a, ref as f, inject as m, onMounted as l, onUpdated as i, watch as d, openBlock as u, createBlock as h, resolveDynamicComponent as _, unref as C, withCtx as k, renderSlot as y } from \"vue\";\nimport { usePrefix as w, themeInjectionKey as x, syncProperties as s } from \"../../utils.mjs\";\nconst b = /* @__PURE__ */ a({\n  __name: \"LinkSocialWrapper\",\n  props: {\n    hideLabel: { default: !1 },\n    href: {},\n    icon: {},\n    iconSource: {},\n    rel: {},\n    target: { default: \"_self\" },\n    theme: {}\n  },\n  setup(c) {\n    const p = w(\"p-link-social\"), e = c, t = f(), n = m(x), r = () => s(t, { ...e, theme: e.theme || n.value });\n    return l(r), i(r), d(n, (o) => {\n      s(t, { theme: e.theme || o });\n    }), (o, P) => (u(), h(_(C(p)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: k(() => [\n        y(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  b as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkSocialWrapper.vue2.mjs":"import f from \"./LinkSocialWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkTileModelSignatureWrapper.vue.d.ts":"import type { BreakpointCustomizable, LinkTileModelSignatureAspectRatio, LinkTileModelSignatureHeadingTag, LinkTileModelSignatureLinkDirection, LinkTileModelSignatureModel, LinkTileModelSignatureWeight } from '../types';\ntype PLinkTileModelSignatureProps = {\n    /**\n     * Aspect ratio of the link-tile-model-signature.\n     */\n    aspectRatio?: BreakpointCustomizable<LinkTileModelSignatureAspectRatio>;\n    /**\n     * Description text.\n     */\n    description?: string;\n    /**\n     * Heading text.\n     */\n    heading: string;\n    /**\n     * Sets a heading tag, so it fits correctly within the outline of the page.\n     */\n    headingTag?: LinkTileModelSignatureHeadingTag;\n    /**\n     * Defines the direction of the main and cross axis of the links. The default is '{base: ‘column’, xs: ‘row’}' showing buttons vertically stacked on mobile viewports and side-by-side in a horizontal row from breakpoint 'xs'.\n     */\n    linkDirection?: BreakpointCustomizable<LinkTileModelSignatureLinkDirection>;\n    /**\n     * Adapts the model of the component.\n     */\n    model?: LinkTileModelSignatureModel;\n    /**\n     * Adapts the font weight of the heading.\n     */\n    weight?: BreakpointCustomizable<LinkTileModelSignatureWeight>;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkTileModelSignatureProps>, {\n    aspectRatio: string;\n    headingTag: string;\n    linkDirection: () => {\n        base: string;\n        xs: string;\n    };\n    model: string;\n    weight: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkTileModelSignatureProps>, {\n    aspectRatio: string;\n    headingTag: string;\n    linkDirection: () => {\n        base: string;\n        xs: string;\n    };\n    model: string;\n    weight: string;\n}>>>, {\n    weight: BreakpointCustomizable<LinkTileModelSignatureWeight>;\n    headingTag: LinkTileModelSignatureHeadingTag;\n    aspectRatio: BreakpointCustomizable<LinkTileModelSignatureAspectRatio>;\n    linkDirection: BreakpointCustomizable<LinkTileModelSignatureLinkDirection>;\n    model: LinkTileModelSignatureModel;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkTileModelSignatureWrapper.vue.mjs":"import { defineComponent as a, ref as i, onMounted as p, onUpdated as d, openBlock as l, createBlock as f, resolveDynamicComponent as c, unref as u, withCtx as m, renderSlot as g } from \"vue\";\nimport { usePrefix as _, syncProperties as h } from \"../../utils.mjs\";\nconst x = /* @__PURE__ */ a({\n  __name: \"LinkTileModelSignatureWrapper\",\n  props: {\n    aspectRatio: { default: \"3/4\" },\n    description: {},\n    heading: {},\n    headingTag: { default: \"h2\" },\n    linkDirection: { default: () => ({ base: \"column\", xs: \"row\" }) },\n    model: { default: \"911\" },\n    weight: { default: \"semi-bold\" }\n  },\n  setup(t) {\n    const n = _(\"p-link-tile-model-signature\"), r = t, e = i(), o = () => h(e, r);\n    return p(o), d(o), (s, k) => (l(), f(c(u(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: m(() => [\n        g(s.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  x as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkTileModelSignatureWrapper.vue2.mjs":"import f from \"./LinkTileModelSignatureWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkTileProductWrapper.vue.d.ts":"import type { BreakpointCustomizable, LinkTileProductAspectRatio, LinkTileProductTarget, Theme } from '../types';\ntype PLinkTileProductProps = {\n    /**\n     * Aspect ratio of the link-tile-product.\n     */\n    aspectRatio?: BreakpointCustomizable<LinkTileProductAspectRatio>;\n    /**\n     * Additional product description.\n     */\n    description?: string;\n    /**\n     * Product heading.\n     */\n    heading: string;\n    /**\n     * href of the `<a>`.\n     */\n    href?: string;\n    /**\n     * A Boolean attribute indicating that a like button should be shown.\n     */\n    likeButton?: boolean;\n    /**\n     * A Boolean attribute indicating that a product is liked.\n     */\n    liked?: boolean;\n    /**\n     * Product retail price (with or without discount).\n     */\n    price: string;\n    /**\n     * Shows original price (recommended retail price) with line-through. Needs prop \"price\" to be defined, otherwise this prop has no effect.\n     */\n    priceOriginal?: string;\n    /**\n     * Specifies the relationship of the target object to the link object.\n     */\n    rel?: string;\n    /**\n     * Target attribute where the link should be opened.\n     */\n    target?: LinkTileProductTarget;\n    /**\n     * Adapts the link-tile-product color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkTileProductProps>, {\n    aspectRatio: string;\n    likeButton: boolean;\n    liked: boolean;\n    target: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    like: (value: import(\"../types\").LinkTileProductLikeEvent) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkTileProductProps>, {\n    aspectRatio: string;\n    likeButton: boolean;\n    liked: boolean;\n    target: string;\n}>>> & {\n    onLike?: ((value: import(\"../types\").LinkTileProductLikeEvent) => any) | undefined;\n}, {\n    aspectRatio: BreakpointCustomizable<LinkTileProductAspectRatio>;\n    target: LinkTileProductTarget;\n    likeButton: boolean;\n    liked: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkTileProductWrapper.vue.mjs":"import { defineComponent as c, ref as f, inject as m, onMounted as d, onUpdated as u, watch as h, openBlock as k, createBlock as _, resolveDynamicComponent as y, unref as C, withCtx as B, renderSlot as R } from \"vue\";\nimport { usePrefix as g, themeInjectionKey as P, addEventListenerToElementRef as v, syncProperties as i } from \"../../utils.mjs\";\nconst j = /* @__PURE__ */ c({\n  __name: \"LinkTileProductWrapper\",\n  props: {\n    aspectRatio: { default: \"3:4\" },\n    description: {},\n    heading: {},\n    href: {},\n    likeButton: { type: Boolean, default: !0 },\n    liked: { type: Boolean, default: !1 },\n    price: {},\n    priceOriginal: {},\n    rel: {},\n    target: { default: \"_self\" },\n    theme: {}\n  },\n  emits: [\"like\"],\n  setup(p, { emit: s }) {\n    const a = g(\"p-link-tile-product\"), t = p, e = f(), l = s, n = m(P), r = () => i(e, { ...t, theme: t.theme || n.value });\n    return d(() => {\n      r(), v(e, \"like\", l);\n    }), u(r), h(n, (o) => {\n      i(e, { theme: t.theme || o });\n    }), (o, w) => (k(), _(y(C(a)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: B(() => [\n        R(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  j as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkTileProductWrapper.vue2.mjs":"import f from \"./LinkTileProductWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkTileWrapper.vue.d.ts":"import type { LinkTileAlign, SelectedAriaAttributes, LinkTileAriaAttribute, BreakpointCustomizable, LinkTileAspectRatio, LinkTileBackground, LinkTileSize, LinkTileTarget, LinkTileWeight } from '../types';\ntype PLinkTileProps = {\n    /**\n     * Alignment of link and description.\n     */\n    align?: LinkTileAlign;\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<LinkTileAriaAttribute>;\n    /**\n     * Aspect ratio of the link-tile.\n     */\n    aspectRatio?: BreakpointCustomizable<LinkTileAspectRatio>;\n    /**\n     * Adapts the description and link theme when used on light background image.\n     */\n    background?: LinkTileBackground;\n    /**\n     * Displays the link-tile as compact version with description and link icon only.\n     */\n    compact?: BreakpointCustomizable<boolean>;\n    /**\n     * Description text.\n     */\n    description: string;\n    /**\n     * Special download attribute to open native browser download dialog if target url points to a downloadable file.\n     */\n    download?: string;\n    /**\n     * Show gradient.\n     */\n    gradient?: boolean;\n    /**\n     * href of the `<a>`.\n     */\n    href: string;\n    /**\n     * Label of the <a />.\n     */\n    label: string;\n    /**\n     * Specifies the relationship of the target object to the link object.\n     */\n    rel?: string;\n    /**\n     * Font size of the description.\n     */\n    size?: BreakpointCustomizable<LinkTileSize>;\n    /**\n     * Target attribute where the link should be opened.\n     */\n    target?: LinkTileTarget;\n    /**\n     * Font weight of the description.\n     */\n    weight?: BreakpointCustomizable<LinkTileWeight>;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkTileProps>, {\n    align: string;\n    aspectRatio: string;\n    background: string;\n    compact: boolean;\n    gradient: boolean;\n    size: string;\n    target: string;\n    weight: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkTileProps>, {\n    align: string;\n    aspectRatio: string;\n    background: string;\n    compact: boolean;\n    gradient: boolean;\n    size: string;\n    target: string;\n    weight: string;\n}>>>, {\n    weight: BreakpointCustomizable<LinkTileWeight>;\n    compact: BreakpointCustomizable<boolean>;\n    size: BreakpointCustomizable<LinkTileSize>;\n    align: LinkTileAlign;\n    aspectRatio: BreakpointCustomizable<LinkTileAspectRatio>;\n    background: LinkTileBackground;\n    gradient: boolean;\n    target: LinkTileTarget;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkTileWrapper.vue.mjs":"import { defineComponent as l, ref as d, onMounted as p, onUpdated as s, openBlock as f, createBlock as i, resolveDynamicComponent as u, unref as c, withCtx as m, renderSlot as _ } from \"vue\";\nimport { usePrefix as k, syncProperties as g } from \"../../utils.mjs\";\nconst h = /* @__PURE__ */ l({\n  __name: \"LinkTileWrapper\",\n  props: {\n    align: { default: \"bottom\" },\n    aria: {},\n    aspectRatio: { default: \"4/3\" },\n    background: { default: \"dark\" },\n    compact: { default: !1 },\n    description: {},\n    download: {},\n    gradient: { type: Boolean, default: !0 },\n    href: {},\n    label: {},\n    rel: {},\n    size: { default: \"medium\" },\n    target: { default: \"_self\" },\n    weight: { default: \"semi-bold\" }\n  },\n  setup(o) {\n    const n = k(\"p-link-tile\"), a = o, e = d(), t = () => g(e, a);\n    return p(t), s(t), (r, C) => (f(), i(u(c(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: m(() => [\n        _(r.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  h as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkTileWrapper.vue2.mjs":"import f from \"./LinkTileWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkWrapper.vue.d.ts":"import type { SelectedAriaAttributes, LinkAriaAttribute, BreakpointCustomizable, LinkIcon, LinkTarget, Theme, LinkVariant } from '../types';\ntype PLinkProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<LinkAriaAttribute>;\n    /**\n     * Special download attribute to open native browser download dialog if target url points to a downloadable file.\n     */\n    download?: string;\n    /**\n     * Show or hide label. For better accessibility it is recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * When providing an url then the component will be rendered as `<a>`.\n     */\n    href?: string;\n    /**\n     * The icon shown. By choosing 'none', no icon is displayed.\n     */\n    icon?: LinkIcon;\n    /**\n     * A URL path to a custom icon.\n     */\n    iconSource?: string;\n    /**\n     * Specifies the relationship of the target object to the link object.\n     */\n    rel?: string;\n    /**\n     * Target attribute where the link should be opened.\n     */\n    target?: LinkTarget;\n    /**\n     * Adapts the link color when used on dark background.\n     */\n    theme?: Theme;\n    /**\n     * The style variant of the link.\n     */\n    variant?: LinkVariant;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkProps>, {\n    hideLabel: boolean;\n    icon: string;\n    target: string;\n    variant: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PLinkProps>, {\n    hideLabel: boolean;\n    icon: string;\n    target: string;\n    variant: string;\n}>>>, {\n    hideLabel: BreakpointCustomizable<boolean>;\n    icon: LinkIcon;\n    variant: LinkVariant;\n    target: LinkTarget;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkWrapper.vue.mjs":"import { defineComponent as f, ref as c, inject as m, onMounted as l, onUpdated as i, watch as d, openBlock as u, createBlock as h, resolveDynamicComponent as _, unref as y, withCtx as C, renderSlot as k } from \"vue\";\nimport { usePrefix as w, themeInjectionKey as v, syncProperties as a } from \"../../utils.mjs\";\nconst b = /* @__PURE__ */ f({\n  __name: \"LinkWrapper\",\n  props: {\n    aria: {},\n    download: {},\n    hideLabel: { default: !1 },\n    href: {},\n    icon: { default: \"none\" },\n    iconSource: {},\n    rel: {},\n    target: { default: \"_self\" },\n    theme: {},\n    variant: { default: \"primary\" }\n  },\n  setup(p) {\n    const s = w(\"p-link\"), e = p, t = c(), o = m(v), r = () => a(t, { ...e, theme: e.theme || o.value });\n    return l(r), i(r), d(o, (n) => {\n      a(t, { theme: e.theme || n });\n    }), (n, x) => (u(), h(_(y(s)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: C(() => [\n        k(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  b as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/LinkWrapper.vue2.mjs":"import f from \"./LinkWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/MarqueWrapper.vue.d.ts":"import type { SelectedAriaAttributes, MarqueAriaAttribute, MarqueSize, MarqueTarget, MarqueVariant } from '../types';\ntype PMarqueProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<MarqueAriaAttribute>;\n    /**\n     * When providing an url then the component will be rendered as `<a>`.\n     */\n    href?: string;\n    /**\n     * Adapts sizing of marque.\n     */\n    size?: MarqueSize;\n    /**\n     * Target attribute where the link should be opened.\n     */\n    target?: MarqueTarget;\n    /**\n     * Show/hide trademark sign (only has effect when variant is set to default).\n     */\n    trademark?: boolean;\n    /**\n     * Shows marque in special editions\n     */\n    variant?: MarqueVariant;\n};\n/** @deprecated since v3.0.0, will be removed with next major release. Please use \"p-wordmark\" instead. */\ndeclare const _default: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PMarqueProps>, {\n    size: string;\n    target: string;\n    trademark: boolean;\n    variant: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PMarqueProps>, {\n    size: string;\n    target: string;\n    trademark: boolean;\n    variant: string;\n}>>>, {\n    size: MarqueSize;\n    variant: MarqueVariant;\n    target: MarqueTarget;\n    trademark: boolean;\n}, {}>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/MarqueWrapper.vue.mjs":"import { defineComponent as a, ref as p, onMounted as s, onUpdated as f, openBlock as u, createBlock as c, resolveDynamicComponent as m, unref as d } from \"vue\";\nimport { usePrefix as l, syncProperties as i } from \"../../utils.mjs\";\nconst v = /* @__PURE__ */ a({\n  __name: \"MarqueWrapper\",\n  props: {\n    aria: {},\n    href: {},\n    size: { default: \"responsive\" },\n    target: { default: \"_self\" },\n    trademark: { type: Boolean, default: !0 },\n    variant: { default: \"default\" }\n  },\n  setup(r) {\n    const t = l(\"p-marque\"), n = r, e = p(), o = () => i(e, n);\n    return s(o), f(o), (_, y) => (u(), c(m(d(t)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, null, 512));\n  }\n});\nexport {\n  v as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/MarqueWrapper.vue2.mjs":"import f from \"./MarqueWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ModalWrapper.vue.d.ts":"import type { SelectedAriaAttributes, ModalAriaAttribute, ModalBackdrop, BreakpointCustomizable, Theme } from '../types';\ntype PModalProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<ModalAriaAttribute>;\n    /**\n     * Defines the backdrop, 'blur' (should be used when Modal is opened by user interaction, e.g. after a click on a button) and 'shading' (should be used when Modal gets opened automatically, e.g. Cookie Consent).\n     */\n    backdrop?: ModalBackdrop;\n    /**\n     * If true, the modal will not be closable via backdrop click.\n     */\n    disableBackdropClick?: boolean;\n    /**\n     * If true, the modal will not have a dismiss button.\n     * @deprecated since v3.0.0, will be removed with next major release, use `dismissButton` instead.\n     */\n    disableCloseButton?: boolean;\n    /**\n     * If false, the modal will not have a dismiss button.\n     */\n    dismissButton?: boolean;\n    /**\n     * If true the modal uses max viewport height and width. Should only be used for mobile.\n     */\n    fullscreen?: BreakpointCustomizable<boolean>;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `header` slot instead The title of the modal\n     */\n    heading?: string;\n    /**\n     * If true, the modal is open.\n     */\n    open: boolean;\n    /**\n     * Adapts the modal color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PModalProps>, {\n    backdrop: string;\n    disableBackdropClick: boolean;\n    dismissButton: boolean;\n    fullscreen: boolean;\n    open: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, any, string, import(\"vue\").PublicProps, any, {\n    open: boolean;\n    dismissButton: boolean;\n    disableBackdropClick: boolean;\n    backdrop: ModalBackdrop;\n    fullscreen: BreakpointCustomizable<boolean>;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/ModalWrapper.vue.mjs":"import { defineComponent as p, ref as c, inject as f, onMounted as u, onUpdated as h, watch as y, openBlock as B, createBlock as C, resolveDynamicComponent as b, unref as _, withCtx as k, renderSlot as E } from \"vue\";\nimport { usePrefix as R, themeInjectionKey as v, addEventListenerToElementRef as t, syncProperties as i } from \"../../utils.mjs\";\nconst g = /* @__PURE__ */ p({\n  __name: \"ModalWrapper\",\n  props: {\n    aria: {},\n    backdrop: { default: \"blur\" },\n    disableBackdropClick: { type: Boolean, default: !1 },\n    disableCloseButton: { type: Boolean },\n    dismissButton: { type: Boolean, default: !0 },\n    fullscreen: { default: !1 },\n    heading: {},\n    open: { type: Boolean, default: !1 },\n    theme: {}\n  },\n  emits: [\"close\", \"dismiss\", \"motionHiddenEnd\", \"motionVisibleEnd\"],\n  setup(l, { emit: r }) {\n    const m = R(\"p-modal\"), n = l, e = c(), o = r, a = f(v), d = () => i(e, { ...n, theme: n.theme || a.value });\n    return u(() => {\n      d(), t(e, \"close\", o), t(e, \"dismiss\", o), t(e, \"motionHiddenEnd\", o), t(e, \"motionVisibleEnd\", o);\n    }), h(d), y(a, (s) => {\n      i(e, { theme: n.theme || s });\n    }), (s, w) => (B(), C(b(_(m)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: k(() => [\n        E(s.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  g as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ModalWrapper.vue2.mjs":"import f from \"./ModalWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ModelSignatureWrapper.vue.d.ts":"import type { ModelSignatureColor, ModelSignatureFetchPriority, ModelSignatureModel, ModelSignatureSize, Theme } from '../types';\ntype PModelSignatureProps = {\n    /**\n     * Adapts the color of the component.\n     */\n    color?: ModelSignatureColor;\n    /**\n     * Defines the fetch priority of the model signature. In the end it is just a recommendation to the browser, but it defines the priority on its own.\n     */\n    fetchPriority?: ModelSignatureFetchPriority;\n    /**\n     * Defines whether the model signature is always loaded or only loaded when it is in the viewport (this feature may not work reliably).\n     */\n    lazy?: boolean;\n    /**\n     * Adapts the model of the component.\n     */\n    model?: ModelSignatureModel;\n    /**\n     * When set to `true`, then all model signatures are visually aligned with each other. When set to `false` the model signature comes without any safe zone.\n     */\n    safeZone?: boolean;\n    /**\n     * Adapts the size of the component. When set to `inherit` a CSS `width` or `height` needs to be defined on the host but not both.\n     */\n    size?: ModelSignatureSize;\n    /**\n     * Adapts color depending on theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PModelSignatureProps>, {\n    color: string;\n    fetchPriority: string;\n    lazy: boolean;\n    model: string;\n    safeZone: boolean;\n    size: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PModelSignatureProps>, {\n    color: string;\n    fetchPriority: string;\n    lazy: boolean;\n    model: string;\n    safeZone: boolean;\n    size: string;\n}>>>, {\n    size: ModelSignatureSize;\n    color: ModelSignatureColor;\n    lazy: boolean;\n    model: ModelSignatureModel;\n    fetchPriority: ModelSignatureFetchPriority;\n    safeZone: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/ModelSignatureWrapper.vue.mjs":"import { defineComponent as p, ref as f, inject as m, onMounted as c, onUpdated as u, watch as d, openBlock as i, createBlock as h, resolveDynamicComponent as y, unref as _, withCtx as C, renderSlot as B } from \"vue\";\nimport { usePrefix as P, themeInjectionKey as g, syncProperties as a } from \"../../utils.mjs\";\nconst R = /* @__PURE__ */ p({\n  __name: \"ModelSignatureWrapper\",\n  props: {\n    color: { default: \"primary\" },\n    fetchPriority: { default: \"auto\" },\n    lazy: { type: Boolean, default: !1 },\n    model: { default: \"911\" },\n    safeZone: { type: Boolean, default: !0 },\n    size: { default: \"small\" },\n    theme: {}\n  },\n  setup(s) {\n    const l = P(\"p-model-signature\"), e = s, t = f(), n = m(g), r = () => a(t, { ...e, theme: e.theme || n.value });\n    return c(r), u(r), d(n, (o) => {\n      a(t, { theme: e.theme || o });\n    }), (o, k) => (i(), h(y(_(l)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: C(() => [\n        B(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  R as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ModelSignatureWrapper.vue2.mjs":"import f from \"./ModelSignatureWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/MultiSelectOptionWrapper.vue.d.ts":"type PMultiSelectOptionProps = {\n    /**\n     * Disables the option.\n     */\n    disabled?: boolean;\n    /**\n     * The option value.\n     */\n    value: string;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PMultiSelectOptionProps>, {\n    disabled: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PMultiSelectOptionProps>, {\n    disabled: boolean;\n}>>>, {\n    disabled: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/MultiSelectOptionWrapper.vue.mjs":"import { defineComponent as s, ref as a, onMounted as l, onUpdated as c, openBlock as f, createBlock as d, resolveDynamicComponent as i, unref as m, withCtx as u, renderSlot as _ } from \"vue\";\nimport { usePrefix as C, syncProperties as y } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ s({\n  __name: \"MultiSelectOptionWrapper\",\n  props: {\n    disabled: { type: Boolean, default: !1 },\n    value: {}\n  },\n  setup(t) {\n    const n = C(\"p-multi-select-option\"), p = t, e = a(), o = () => y(e, p);\n    return l(o), c(o), (r, k) => (f(), d(i(m(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: u(() => [\n        _(r.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/MultiSelectOptionWrapper.vue2.mjs":"import f from \"./MultiSelectOptionWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/MultiSelectWrapper.vue.d.ts":"import type { MultiSelectDropdownDirection, BreakpointCustomizable, MultiSelectState, Theme } from '../types';\ntype PMultiSelectProps = {\n    /**\n     * The description text.\n     */\n    description?: string;\n    /**\n     * Disables the multi-select\n     */\n    disabled?: boolean;\n    /**\n     * Changes the direction to which the dropdown list appears.\n     */\n    dropdownDirection?: MultiSelectDropdownDirection;\n    /**\n     * Show or hide label. For better accessibility it is recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * The message styled depending on validation state.\n     */\n    message?: string;\n    /**\n     * The name of the control.\n     */\n    name: string;\n    /**\n     * A Boolean attribute indicating that an option with a non-empty string value must be selected.\n     */\n    required?: boolean;\n    /**\n     * The validation state.\n     */\n    state?: MultiSelectState;\n    /**\n     * Adapts the select color depending on the theme.\n     */\n    theme?: Theme;\n    /**\n     * The selected values.\n     */\n    value?: string[];\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PMultiSelectProps>, {\n    description: string;\n    disabled: boolean;\n    dropdownDirection: string;\n    hideLabel: boolean;\n    label: string;\n    message: string;\n    required: boolean;\n    state: string;\n    value: () => never[];\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    update: (value: import(\"../types\").MultiSelectUpdateEvent) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PMultiSelectProps>, {\n    description: string;\n    disabled: boolean;\n    dropdownDirection: string;\n    hideLabel: boolean;\n    label: string;\n    message: string;\n    required: boolean;\n    state: string;\n    value: () => never[];\n}>>> & {\n    onUpdate?: ((value: import(\"../types\").MultiSelectUpdateEvent) => any) | undefined;\n}, {\n    label: string;\n    description: string;\n    state: MultiSelectState;\n    required: boolean;\n    disabled: boolean;\n    hideLabel: BreakpointCustomizable<boolean>;\n    value: string[];\n    message: string;\n    dropdownDirection: MultiSelectDropdownDirection;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/MultiSelectWrapper.vue.mjs":"import { defineComponent as p, ref as m, inject as u, onMounted as c, onUpdated as i, watch as h, openBlock as y, createBlock as _, resolveDynamicComponent as C, unref as b, withCtx as v, renderSlot as w } from \"vue\";\nimport { usePrefix as B, themeInjectionKey as R, addEventListenerToElementRef as k, syncProperties as l } from \"../../utils.mjs\";\nconst j = /* @__PURE__ */ p({\n  __name: \"MultiSelectWrapper\",\n  props: {\n    description: { default: \"\" },\n    disabled: { type: Boolean, default: !1 },\n    dropdownDirection: { default: \"auto\" },\n    hideLabel: { default: !1 },\n    label: { default: \"\" },\n    message: { default: \"\" },\n    name: {},\n    required: { type: Boolean, default: !1 },\n    state: { default: \"none\" },\n    theme: {},\n    value: { default: () => [] }\n  },\n  emits: [\"update\"],\n  setup(s, { emit: r }) {\n    const d = B(\"p-multi-select\"), t = s, e = m(), f = r, n = u(R), a = () => l(e, { ...t, theme: t.theme || n.value });\n    return c(() => {\n      a(), k(e, \"update\", f);\n    }), i(a), h(n, (o) => {\n      l(e, { theme: t.theme || o });\n    }), (o, x) => (y(), _(C(b(d)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: v(() => [\n        w(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  j as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/MultiSelectWrapper.vue2.mjs":"import f from \"./MultiSelectWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/OptgroupWrapper.vue.d.ts":"type POptgroupProps = {\n    /**\n     * Disables the optgroup.\n     */\n    disabled?: boolean;\n    /**\n     * The optgroup label.\n     */\n    label?: string;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<POptgroupProps>, {\n    disabled: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<POptgroupProps>, {\n    disabled: boolean;\n}>>>, {\n    disabled: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/OptgroupWrapper.vue.mjs":"import { defineComponent as s, ref as a, onMounted as f, onUpdated as c, openBlock as l, createBlock as d, resolveDynamicComponent as m, unref as u, withCtx as i, renderSlot as _ } from \"vue\";\nimport { usePrefix as C, syncProperties as y } from \"../../utils.mjs\";\nconst x = /* @__PURE__ */ s({\n  __name: \"OptgroupWrapper\",\n  props: {\n    disabled: { type: Boolean, default: !1 },\n    label: {}\n  },\n  setup(t) {\n    const n = C(\"p-optgroup\"), p = t, e = a(), o = () => y(e, p);\n    return f(o), c(o), (r, b) => (l(), d(m(u(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: i(() => [\n        _(r.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  x as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/OptgroupWrapper.vue2.mjs":"import f from \"./OptgroupWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/PaginationWrapper.vue.d.ts":"import type { PaginationInternationalization, BreakpointCustomizable, PaginationMaxNumberOfPageLinks, Theme } from '../types';\ntype PPaginationProps = {\n    /**\n     * Index of the currently active page.\n     */\n    activePage: number;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `intl.root` instead. Aria label what the pagination is used for.\n     */\n    allyLabel?: string;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `intl.next` instead. Aria label for next page icon.\n     */\n    allyLabelNext?: string;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `intl.page` instead. Aria label for page navigation.\n     */\n    allyLabelPage?: string;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `intl.prev` instead. Aria label for previous page icon.\n     */\n    allyLabelPrev?: string;\n    /**\n     * Override the default wordings that are used for aria-labels on the next/prev and page buttons.\n     */\n    intl?: PaginationInternationalization;\n    /**\n     * The total count of items which should be shown per page.\n     */\n    itemsPerPage?: number;\n    /**\n     * Has no effect anymore\n     * @deprecated since v3.10.0, will be removed with next major release\n     */\n    maxNumberOfPageLinks?: BreakpointCustomizable<PaginationMaxNumberOfPageLinks>;\n    /**\n     * Show or hide the button to jump to the last page.\n     */\n    showLastPage?: boolean;\n    /**\n     * Adapts the color when used on dark background.\n     */\n    theme?: Theme;\n    /**\n     * The total count of items.\n     */\n    totalItemsCount: number;\n};\ndeclare const _default: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PPaginationProps>, {\n    activePage: number;\n    intl: () => {\n        root: string;\n        prev: string;\n        next: string;\n        page: string;\n    };\n    itemsPerPage: number;\n    showLastPage: boolean;\n    totalItemsCount: number;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    pageChange: (value: import(\"../types\").PaginationUpdateEvent) => void;\n    update: (value: import(\"../types\").PaginationUpdateEvent) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PPaginationProps>, {\n    activePage: number;\n    intl: () => {\n        root: string;\n        prev: string;\n        next: string;\n        page: string;\n    };\n    itemsPerPage: number;\n    showLastPage: boolean;\n    totalItemsCount: number;\n}>>> & {\n    onUpdate?: ((value: import(\"../types\").PaginationUpdateEvent) => any) | undefined;\n    onPageChange?: ((value: import(\"../types\").PaginationUpdateEvent) => any) | undefined;\n}, {\n    intl: PaginationInternationalization;\n    activePage: number;\n    itemsPerPage: number;\n    showLastPage: boolean;\n    totalItemsCount: number;\n}, {}>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/PaginationWrapper.vue.mjs":"import { defineComponent as c, ref as f, inject as u, onMounted as g, onUpdated as d, watch as P, openBlock as h, createBlock as y, resolveDynamicComponent as C, unref as v } from \"vue\";\nimport { usePrefix as x, themeInjectionKey as L, addEventListenerToElementRef as r, syncProperties as l } from \"../../utils.mjs\";\nconst R = /* @__PURE__ */ c({\n  __name: \"PaginationWrapper\",\n  props: {\n    activePage: { default: 1 },\n    allyLabel: {},\n    allyLabelNext: {},\n    allyLabelPage: {},\n    allyLabelPrev: {},\n    intl: { default: () => ({ root: \"Pagination\", prev: \"Previous page\", next: \"Next page\", page: \"Page\" }) },\n    itemsPerPage: { default: 1 },\n    maxNumberOfPageLinks: {},\n    showLastPage: { type: Boolean, default: !0 },\n    theme: {},\n    totalItemsCount: { default: 1 }\n  },\n  emits: [\"pageChange\", \"update\"],\n  setup(s, { emit: m }) {\n    const i = x(\"p-pagination\"), t = s, e = f(), a = m, n = u(L), o = () => l(e, { ...t, theme: t.theme || n.value });\n    return g(() => {\n      o(), r(e, \"pageChange\", a), r(e, \"update\", a);\n    }), d(o), P(n, (p) => {\n      l(e, { theme: t.theme || p });\n    }), (p, _) => (h(), y(C(v(i)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, null, 512));\n  }\n});\nexport {\n  R as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/PaginationWrapper.vue2.mjs":"import f from \"./PaginationWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/PinCodeWrapper.vue.d.ts":"import type { BreakpointCustomizable, PinCodeLength, PinCodeState, Theme, PinCodeType } from '../types';\ntype PPinCodeProps = {\n    /**\n     * The description text.\n     */\n    description?: string;\n    /**\n     * Disables the Pin Code. No events will be triggered while disabled state is active.\n     */\n    disabled?: boolean;\n    /**\n     * Show or hide label and description text. For better accessibility it is recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * Number of characters of the Pin Code.\n     */\n    length?: PinCodeLength;\n    /**\n     * Disables the Pin Code and shows a loading indicator. No events will be triggered while loading state is active.\n     */\n    loading?: boolean;\n    /**\n     * The message styled depending on validation state.\n     */\n    message?: string;\n    /**\n     * Name of the control.\n     */\n    name?: string;\n    /**\n     * Marks the Pin Code as required.\n     */\n    required?: boolean;\n    /**\n     * The validation state.\n     */\n    state?: PinCodeState;\n    /**\n     * Adapts the color depending on the theme.\n     */\n    theme?: Theme;\n    /**\n     * Pin Code type.\n     */\n    type?: PinCodeType;\n    /**\n     * Sets the initial value of the Pin Code.\n     */\n    value?: string;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PPinCodeProps>, {\n    description: string;\n    disabled: boolean;\n    hideLabel: boolean;\n    label: string;\n    length: number;\n    loading: boolean;\n    message: string;\n    required: boolean;\n    state: string;\n    type: string;\n    value: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    update: (value: import(\"../types\").PinCodeUpdateEvent) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PPinCodeProps>, {\n    description: string;\n    disabled: boolean;\n    hideLabel: boolean;\n    label: string;\n    length: number;\n    loading: boolean;\n    message: string;\n    required: boolean;\n    state: string;\n    type: string;\n    value: string;\n}>>> & {\n    onUpdate?: ((value: import(\"../types\").PinCodeUpdateEvent) => any) | undefined;\n}, {\n    label: string;\n    length: PinCodeLength;\n    type: PinCodeType;\n    description: string;\n    state: PinCodeState;\n    required: boolean;\n    disabled: boolean;\n    hideLabel: BreakpointCustomizable<boolean>;\n    loading: boolean;\n    value: string;\n    message: string;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/PinCodeWrapper.vue.mjs":"import { defineComponent as r, ref as m, inject as u, onMounted as i, onUpdated as c, watch as h, openBlock as y, createBlock as C, resolveDynamicComponent as _, unref as b, withCtx as B, renderSlot as g } from \"vue\";\nimport { usePrefix as v, themeInjectionKey as P, addEventListenerToElementRef as R, syncProperties as l } from \"../../utils.mjs\";\nconst j = /* @__PURE__ */ r({\n  __name: \"PinCodeWrapper\",\n  props: {\n    description: { default: \"\" },\n    disabled: { type: Boolean, default: !1 },\n    hideLabel: { default: !1 },\n    label: { default: \"\" },\n    length: { default: 4 },\n    loading: { type: Boolean, default: !1 },\n    message: { default: \"\" },\n    name: {},\n    required: { type: Boolean, default: !1 },\n    state: { default: \"none\" },\n    theme: {},\n    type: { default: \"number\" },\n    value: { default: \"\" }\n  },\n  emits: [\"update\"],\n  setup(d, { emit: s }) {\n    const f = v(\"p-pin-code\"), t = d, e = m(), p = s, o = u(P), a = () => l(e, { ...t, theme: t.theme || o.value });\n    return i(() => {\n      a(), R(e, \"update\", p);\n    }), c(a), h(o, (n) => {\n      l(e, { theme: t.theme || n });\n    }), (n, k) => (y(), C(_(b(f)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: B(() => [\n        g(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  j as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/PinCodeWrapper.vue2.mjs":"import f from \"./PinCodeWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/PopoverWrapper.vue.d.ts":"import type { SelectedAriaAttributes, PopoverAriaAttribute, PopoverDirection, Theme } from '../types';\ntype PPopoverProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<PopoverAriaAttribute>;\n    /**\n     * Descriptive text to show additional information when popover is open\n     */\n    description?: string;\n    /**\n     * Preferred direction in which popover should open, given there is enough space in viewport. Otherwise, it will be opened in the direction with most available space.\n     */\n    direction?: PopoverDirection;\n    /**\n     * Adapts the popover color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PPopoverProps>, {\n    direction: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PPopoverProps>, {\n    direction: string;\n}>>>, {\n    direction: PopoverDirection;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/PopoverWrapper.vue.mjs":"import { defineComponent as m, ref as a, inject as f, onMounted as i, onUpdated as d, watch as u, openBlock as h, createBlock as l, resolveDynamicComponent as _, unref as C, withCtx as y, renderSlot as v } from \"vue\";\nimport { usePrefix as P, themeInjectionKey as k, syncProperties as p } from \"../../utils.mjs\";\nconst b = /* @__PURE__ */ m({\n  __name: \"PopoverWrapper\",\n  props: {\n    aria: {},\n    description: {},\n    direction: { default: \"bottom\" },\n    theme: {}\n  },\n  setup(s) {\n    const c = P(\"p-popover\"), e = s, o = a(), n = f(k), r = () => p(o, { ...e, theme: e.theme || n.value });\n    return i(r), d(r), u(n, (t) => {\n      p(o, { theme: e.theme || t });\n    }), (t, w) => (h(), l(_(C(c)), {\n      ref_key: \"pdsComponentRef\",\n      ref: o\n    }, {\n      default: y(() => [\n        v(t.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  b as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/PopoverWrapper.vue2.mjs":"import f from \"./PopoverWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/RadioButtonWrapperWrapper.vue.d.ts":"import type { BreakpointCustomizable, RadioButtonWrapperState, Theme } from '../types';\ntype PRadioButtonWrapperProps = {\n    /**\n     * Show or hide label. For better accessibility it's recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * @experimental Disables the radio button and shows a loading indicator.\n     */\n    loading?: boolean;\n    /**\n     * The message styled depending on validation state.\n     */\n    message?: string;\n    /**\n     * The validation state.\n     */\n    state?: RadioButtonWrapperState;\n    /**\n     * Adapts the color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PRadioButtonWrapperProps>, {\n    hideLabel: boolean;\n    label: string;\n    loading: boolean;\n    message: string;\n    state: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PRadioButtonWrapperProps>, {\n    hideLabel: boolean;\n    label: string;\n    loading: boolean;\n    message: string;\n    state: string;\n}>>>, {\n    label: string;\n    state: RadioButtonWrapperState;\n    hideLabel: BreakpointCustomizable<boolean>;\n    loading: boolean;\n    message: string;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/RadioButtonWrapperWrapper.vue.mjs":"import { defineComponent as f, ref as l, inject as m, onMounted as d, onUpdated as c, watch as u, openBlock as i, createBlock as h, resolveDynamicComponent as _, unref as y, withCtx as C, renderSlot as b } from \"vue\";\nimport { usePrefix as w, themeInjectionKey as B, syncProperties as r } from \"../../utils.mjs\";\nconst x = /* @__PURE__ */ f({\n  __name: \"RadioButtonWrapperWrapper\",\n  props: {\n    hideLabel: { default: !1 },\n    label: { default: \"\" },\n    loading: { type: Boolean, default: !1 },\n    message: { default: \"\" },\n    state: { default: \"none\" },\n    theme: {}\n  },\n  setup(p) {\n    const s = w(\"p-radio-button-wrapper\"), e = p, t = l(), n = m(B), a = () => r(t, { ...e, theme: e.theme || n.value });\n    return d(a), c(a), u(n, (o) => {\n      r(t, { theme: e.theme || o });\n    }), (o, R) => (i(), h(_(y(s)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: C(() => [\n        b(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  x as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/RadioButtonWrapperWrapper.vue2.mjs":"import f from \"./RadioButtonWrapperWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ScrollerWrapper.vue.d.ts":"import type { ScrollerAlignScrollIndicator, SelectedAriaAttributes, ScrollerAriaAttribute, ScrollerGradientColor, ScrollerGradientColorScheme, ScrollerScrollIndicatorPosition, ScrollerScrollToPosition, Theme } from '../types';\ntype PScrollerProps = {\n    /**\n     * Sets the vertical position of scroll indicator.\n     */\n    alignScrollIndicator?: ScrollerAlignScrollIndicator;\n    /**\n     * Add ARIA role.\n     */\n    aria?: SelectedAriaAttributes<ScrollerAriaAttribute>;\n    /**\n     * Adapts the background gradient color of prev and next button.\n     */\n    gradientColor?: ScrollerGradientColor;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `gradientColor` instead. Adapts the background gradient color of prev and next button.\n     */\n    gradientColorScheme?: ScrollerGradientColorScheme;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `alignScrollIndicator` instead. Sets the vertical position of scroll indicator\n     */\n    scrollIndicatorPosition?: ScrollerScrollIndicatorPosition;\n    /**\n     * Scrolls the scroll area to the left either smooth or immediately.\n     */\n    scrollToPosition?: ScrollerScrollToPosition;\n    /**\n     * Specifies if scrollbar should be shown.\n     */\n    scrollbar?: boolean;\n    /**\n     * Adapts the color when used on dark background.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PScrollerProps>, {\n    alignScrollIndicator: string;\n    gradientColor: string;\n    scrollbar: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PScrollerProps>, {\n    alignScrollIndicator: string;\n    gradientColor: string;\n    scrollbar: boolean;\n}>>>, {\n    scrollbar: boolean;\n    alignScrollIndicator: ScrollerAlignScrollIndicator;\n    gradientColor: ScrollerGradientColor;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/ScrollerWrapper.vue.mjs":"import { defineComponent as s, ref as p, inject as i, onMounted as m, onUpdated as f, watch as d, openBlock as u, createBlock as h, resolveDynamicComponent as C, unref as _, withCtx as y, renderSlot as g } from \"vue\";\nimport { usePrefix as P, themeInjectionKey as b, syncProperties as a } from \"../../utils.mjs\";\nconst x = /* @__PURE__ */ s({\n  __name: \"ScrollerWrapper\",\n  props: {\n    alignScrollIndicator: { default: \"center\" },\n    aria: {},\n    gradientColor: { default: \"background-base\" },\n    gradientColorScheme: {},\n    scrollIndicatorPosition: {},\n    scrollToPosition: {},\n    scrollbar: { type: Boolean, default: !1 },\n    theme: {}\n  },\n  setup(c) {\n    const l = P(\"p-scroller\"), e = c, o = p(), n = i(b), r = () => a(o, { ...e, theme: e.theme || n.value });\n    return m(r), f(r), d(n, (t) => {\n      a(o, { theme: e.theme || t });\n    }), (t, k) => (u(), h(C(_(l)), {\n      ref_key: \"pdsComponentRef\",\n      ref: o\n    }, {\n      default: y(() => [\n        g(t.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  x as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ScrollerWrapper.vue2.mjs":"import f from \"./ScrollerWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SegmentedControlItemWrapper.vue.d.ts":"import type { SelectedAriaAttributes, SegmentedControlItemAriaAttribute, SegmentedControlItemIcon } from '../types';\ntype PSegmentedControlItemProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<SegmentedControlItemAriaAttribute>;\n    /**\n     * Disables the button. No events will be triggered while disabled state is active.\n     */\n    disabled?: boolean;\n    /**\n     * The icon shown.\n     */\n    icon?: SegmentedControlItemIcon;\n    /**\n     * A URL path to a custom icon.\n     */\n    iconSource?: string;\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * The value of this item which is emitted by the parent element if it becomes selected. This property is **required**.\n     */\n    value: string | number;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PSegmentedControlItemProps>, {\n    disabled: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PSegmentedControlItemProps>, {\n    disabled: boolean;\n}>>>, {\n    disabled: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/SegmentedControlItemWrapper.vue.mjs":"import { defineComponent as s, ref as a, onMounted as c, onUpdated as l, openBlock as f, createBlock as m, resolveDynamicComponent as d, unref as i, withCtx as u, renderSlot as C } from \"vue\";\nimport { usePrefix as _, syncProperties as y } from \"../../utils.mjs\";\nconst x = /* @__PURE__ */ s({\n  __name: \"SegmentedControlItemWrapper\",\n  props: {\n    aria: {},\n    disabled: { type: Boolean, default: !1 },\n    icon: {},\n    iconSource: {},\n    label: {},\n    value: {}\n  },\n  setup(n) {\n    const t = _(\"p-segmented-control-item\"), r = n, e = a(), o = () => y(e, r);\n    return c(o), l(o), (p, b) => (f(), m(d(i(t)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: u(() => [\n        C(p.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  x as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SegmentedControlItemWrapper.vue2.mjs":"import f from \"./SegmentedControlItemWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SegmentedControlWrapper.vue.d.ts":"import type { SegmentedControlBackgroundColor, BreakpointCustomizable, SegmentedControlColumns, Theme } from '../types';\ntype PSegmentedControlProps = {\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release. Background color variations\n     */\n    backgroundColor?: SegmentedControlBackgroundColor;\n    /**\n     * Sets the amount of columns.\n     */\n    columns?: BreakpointCustomizable<SegmentedControlColumns>;\n    /**\n     * Adapts the segmented-control color depending on the theme.\n     */\n    theme?: Theme;\n    /**\n     * Sets the initial value of the segmented-control.\n     */\n    value?: string | number;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PSegmentedControlProps>, {\n    columns: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    segmentedControlChange: (value: import(\"../types\").SegmentedControlUpdateEvent) => void;\n    update: (value: import(\"../types\").SegmentedControlUpdateEvent) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PSegmentedControlProps>, {\n    columns: string;\n}>>> & {\n    onUpdate?: ((value: import(\"../types\").SegmentedControlUpdateEvent) => any) | undefined;\n    onSegmentedControlChange?: ((value: import(\"../types\").SegmentedControlUpdateEvent) => any) | undefined;\n}, {\n    columns: BreakpointCustomizable<SegmentedControlColumns>;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/SegmentedControlWrapper.vue.mjs":"import { defineComponent as l, ref as f, inject as u, onMounted as i, onUpdated as h, watch as C, openBlock as g, createBlock as _, resolveDynamicComponent as y, unref as k, withCtx as v, renderSlot as R } from \"vue\";\nimport { usePrefix as w, themeInjectionKey as x, addEventListenerToElementRef as s, syncProperties as p } from \"../../utils.mjs\";\nconst B = /* @__PURE__ */ l({\n  __name: \"SegmentedControlWrapper\",\n  props: {\n    backgroundColor: {},\n    columns: { default: \"auto\" },\n    theme: {},\n    value: {}\n  },\n  emits: [\"segmentedControlChange\", \"update\"],\n  setup(a, { emit: c }) {\n    const d = w(\"p-segmented-control\"), t = a, e = f(), n = c, r = u(x), m = () => p(e, { ...t, theme: t.theme || r.value });\n    return i(() => {\n      m(), s(e, \"segmentedControlChange\", n), s(e, \"update\", n);\n    }), h(m), C(r, (o) => {\n      p(e, { theme: t.theme || o });\n    }), (o, P) => (g(), _(y(k(d)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: v(() => [\n        R(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  B as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SegmentedControlWrapper.vue2.mjs":"import f from \"./SegmentedControlWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SelectOptionWrapper.vue.d.ts":"type PSelectOptionProps = {\n    /**\n     * Disables the option.\n     */\n    disabled?: boolean;\n    /**\n     * The option value.\n     */\n    value?: string;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PSelectOptionProps>, {\n    disabled: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PSelectOptionProps>, {\n    disabled: boolean;\n}>>>, {\n    disabled: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/SelectOptionWrapper.vue.mjs":"import { defineComponent as s, ref as a, onMounted as c, onUpdated as f, openBlock as l, createBlock as d, resolveDynamicComponent as m, unref as i, withCtx as u, renderSlot as _ } from \"vue\";\nimport { usePrefix as C, syncProperties as y } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ s({\n  __name: \"SelectOptionWrapper\",\n  props: {\n    disabled: { type: Boolean, default: !1 },\n    value: {}\n  },\n  setup(t) {\n    const n = C(\"p-select-option\"), p = t, e = a(), o = () => y(e, p);\n    return c(o), f(o), (r, k) => (l(), d(m(i(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: u(() => [\n        _(r.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SelectOptionWrapper.vue2.mjs":"import f from \"./SelectOptionWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SelectWrapper.vue.d.ts":"import type { SelectDropdownDirection, BreakpointCustomizable, SelectUpdateEventDetail, SelectState, Theme } from '../types';\ntype PSelectProps = {\n    /**\n     * The description text.\n     */\n    description?: string;\n    /**\n     * Disables the select\n     */\n    disabled?: boolean;\n    /**\n     * Changes the direction to which the dropdown list appears.\n     */\n    dropdownDirection?: SelectDropdownDirection;\n    /**\n     * Show or hide label. For better accessibility it is recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * The message styled depending on validation state.\n     */\n    message?: string;\n    /**\n     * The name of the control.\n     */\n    name: string;\n    /**\n     * A Boolean attribute indicating that an option with a non-empty string value must be selected.\n     */\n    required?: boolean;\n    /**\n     * The validation state.\n     */\n    state?: SelectState;\n    /**\n     * Adapts the select color depending on the theme.\n     */\n    theme?: Theme;\n    /**\n     * The selected value.\n     */\n    value?: string;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PSelectProps>, {\n    description: string;\n    disabled: boolean;\n    dropdownDirection: string;\n    hideLabel: boolean;\n    label: string;\n    message: string;\n    required: boolean;\n    state: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    update: (value: SelectUpdateEventDetail) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PSelectProps>, {\n    description: string;\n    disabled: boolean;\n    dropdownDirection: string;\n    hideLabel: boolean;\n    label: string;\n    message: string;\n    required: boolean;\n    state: string;\n}>>> & {\n    onUpdate?: ((value: SelectUpdateEventDetail) => any) | undefined;\n}, {\n    label: string;\n    description: string;\n    state: SelectState;\n    required: boolean;\n    disabled: boolean;\n    hideLabel: BreakpointCustomizable<boolean>;\n    message: string;\n    dropdownDirection: SelectDropdownDirection;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/SelectWrapper.vue.mjs":"import { defineComponent as f, ref as m, inject as c, onMounted as u, onUpdated as i, watch as h, openBlock as y, createBlock as _, resolveDynamicComponent as C, unref as b, withCtx as v, renderSlot as w } from \"vue\";\nimport { usePrefix as B, themeInjectionKey as R, addEventListenerToElementRef as k, syncProperties as s } from \"../../utils.mjs\";\nconst j = /* @__PURE__ */ f({\n  __name: \"SelectWrapper\",\n  props: {\n    description: { default: \"\" },\n    disabled: { type: Boolean, default: !1 },\n    dropdownDirection: { default: \"auto\" },\n    hideLabel: { default: !1 },\n    label: { default: \"\" },\n    message: { default: \"\" },\n    name: {},\n    required: { type: Boolean, default: !1 },\n    state: { default: \"none\" },\n    theme: {},\n    value: {}\n  },\n  emits: [\"update\"],\n  setup(r, { emit: l }) {\n    const d = B(\"p-select\"), t = r, e = m(), p = l, n = c(R), a = () => s(e, { ...t, theme: t.theme || n.value });\n    return u(() => {\n      a(), k(e, \"update\", p);\n    }), i(a), h(n, (o) => {\n      s(e, { theme: t.theme || o });\n    }), (o, x) => (y(), _(C(b(d)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: v(() => [\n        w(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  j as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SelectWrapper.vue2.mjs":"import f from \"./SelectWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SelectWrapperWrapper.vue.d.ts":"import type { SelectWrapperDropdownDirection, BreakpointCustomizable, SelectWrapperState, Theme } from '../types';\ntype PSelectWrapperProps = {\n    /**\n     * The description text.\n     */\n    description?: string;\n    /**\n     * Changes the direction to which the dropdown list appears.\n     */\n    dropdownDirection?: SelectWrapperDropdownDirection;\n    /**\n     * Filters select options by typing a character\n     */\n    filter?: boolean;\n    /**\n     * Show or hide label. For better accessibility it is recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * The message styled depending on validation state.\n     */\n    message?: string;\n    /**\n     * Forces rendering of native browser select dropdown\n     */\n    native?: boolean;\n    /**\n     * The validation state.\n     */\n    state?: SelectWrapperState;\n    /**\n     * Adapts the select color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PSelectWrapperProps>, {\n    description: string;\n    dropdownDirection: string;\n    filter: boolean;\n    hideLabel: boolean;\n    label: string;\n    message: string;\n    native: boolean;\n    state: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PSelectWrapperProps>, {\n    description: string;\n    dropdownDirection: string;\n    filter: boolean;\n    hideLabel: boolean;\n    label: string;\n    message: string;\n    native: boolean;\n    state: string;\n}>>>, {\n    filter: boolean;\n    label: string;\n    description: string;\n    state: SelectWrapperState;\n    hideLabel: BreakpointCustomizable<boolean>;\n    message: string;\n    dropdownDirection: SelectWrapperDropdownDirection;\n    native: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/SelectWrapperWrapper.vue.mjs":"import { defineComponent as l, ref as f, inject as c, onMounted as d, onUpdated as m, watch as u, openBlock as i, createBlock as h, resolveDynamicComponent as y, unref as _, withCtx as C, renderSlot as w } from \"vue\";\nimport { usePrefix as B, themeInjectionKey as b, syncProperties as r } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ l({\n  __name: \"SelectWrapperWrapper\",\n  props: {\n    description: { default: \"\" },\n    dropdownDirection: { default: \"auto\" },\n    filter: { type: Boolean, default: !1 },\n    hideLabel: { default: !1 },\n    label: { default: \"\" },\n    message: { default: \"\" },\n    native: { type: Boolean, default: !1 },\n    state: { default: \"none\" },\n    theme: {}\n  },\n  setup(p) {\n    const s = B(\"p-select-wrapper\"), e = p, t = f(), n = c(b), a = () => r(t, { ...e, theme: e.theme || n.value });\n    return d(a), m(a), u(n, (o) => {\n      r(t, { theme: e.theme || o });\n    }), (o, k) => (i(), h(y(_(s)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: C(() => [\n        w(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SelectWrapperWrapper.vue2.mjs":"import f from \"./SelectWrapperWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SpinnerWrapper.vue.d.ts":"import type { SelectedAriaAttributes, SpinnerAriaAttribute, BreakpointCustomizable, SpinnerSize, Theme } from '../types';\ntype PSpinnerProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<SpinnerAriaAttribute>;\n    /**\n     * Size of the spinner.\n     */\n    size?: BreakpointCustomizable<SpinnerSize>;\n    /**\n     * Adapts the spinner color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare const _default: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PSpinnerProps>, {\n    size: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PSpinnerProps>, {\n    size: string;\n}>>>, {\n    size: BreakpointCustomizable<SpinnerSize>;\n}, {}>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/SpinnerWrapper.vue.mjs":"import { defineComponent as c, ref as a, inject as f, onMounted as i, onUpdated as l, watch as u, openBlock as h, createBlock as d, resolveDynamicComponent as _, unref as y } from \"vue\";\nimport { usePrefix as C, themeInjectionKey as k, syncProperties as p } from \"../../utils.mjs\";\nconst j = /* @__PURE__ */ c({\n  __name: \"SpinnerWrapper\",\n  props: {\n    aria: {},\n    size: { default: \"small\" },\n    theme: {}\n  },\n  setup(s) {\n    const m = C(\"p-spinner\"), e = s, n = a(), t = f(k), o = () => p(n, { ...e, theme: e.theme || t.value });\n    return i(o), l(o), u(t, (r) => {\n      p(n, { theme: e.theme || r });\n    }), (r, x) => (h(), d(_(y(m)), {\n      ref_key: \"pdsComponentRef\",\n      ref: n\n    }, null, 512));\n  }\n});\nexport {\n  j as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SpinnerWrapper.vue2.mjs":"import f from \"./SpinnerWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/StepperHorizontalItemWrapper.vue.d.ts":"import type { StepperHorizontalItemState } from '../types';\ntype PStepperHorizontalItemProps = {\n    /**\n     * Disables the stepper-horizontal-item. No events will be triggered while disabled state is active.\n     */\n    disabled?: boolean;\n    /**\n     * The validation state.\n     */\n    state?: StepperHorizontalItemState;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PStepperHorizontalItemProps>, {\n    disabled: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PStepperHorizontalItemProps>, {\n    disabled: boolean;\n}>>>, {\n    disabled: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/StepperHorizontalItemWrapper.vue.mjs":"import { defineComponent as s, ref as a, onMounted as f, onUpdated as c, openBlock as l, createBlock as m, resolveDynamicComponent as d, unref as i, withCtx as u, renderSlot as _ } from \"vue\";\nimport { usePrefix as C, syncProperties as y } from \"../../utils.mjs\";\nconst B = /* @__PURE__ */ s({\n  __name: \"StepperHorizontalItemWrapper\",\n  props: {\n    disabled: { type: Boolean, default: !1 },\n    state: {}\n  },\n  setup(t) {\n    const n = C(\"p-stepper-horizontal-item\"), r = t, e = a(), o = () => y(e, r);\n    return f(o), c(o), (p, h) => (l(), m(d(i(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: u(() => [\n        _(p.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  B as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/StepperHorizontalItemWrapper.vue2.mjs":"import f from \"./StepperHorizontalItemWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/StepperHorizontalWrapper.vue.d.ts":"import type { BreakpointCustomizable, StepperHorizontalSize, Theme } from '../types';\ntype PStepperHorizontalProps = {\n    size?: BreakpointCustomizable<StepperHorizontalSize>;\n    /**\n     * Adapts the tag color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PStepperHorizontalProps>, {\n    size: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    stepChange: (value: import(\"../types\").StepperHorizontalUpdateEvent) => void;\n    update: (value: import(\"../types\").StepperHorizontalUpdateEvent) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PStepperHorizontalProps>, {\n    size: string;\n}>>> & {\n    onUpdate?: ((value: import(\"../types\").StepperHorizontalUpdateEvent) => any) | undefined;\n    onStepChange?: ((value: import(\"../types\").StepperHorizontalUpdateEvent) => any) | undefined;\n}, {\n    size: BreakpointCustomizable<StepperHorizontalSize>;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/StepperHorizontalWrapper.vue.mjs":"import { defineComponent as i, ref as d, inject as l, onMounted as h, onUpdated as u, watch as C, openBlock as _, createBlock as y, resolveDynamicComponent as R, unref as g, withCtx as k, renderSlot as v } from \"vue\";\nimport { usePrefix as w, themeInjectionKey as x, addEventListenerToElementRef as s, syncProperties as m } from \"../../utils.mjs\";\nconst B = /* @__PURE__ */ i({\n  __name: \"StepperHorizontalWrapper\",\n  props: {\n    size: { default: \"small\" },\n    theme: {}\n  },\n  emits: [\"stepChange\", \"update\"],\n  setup(a, { emit: c }) {\n    const f = w(\"p-stepper-horizontal\"), t = a, e = d(), o = c, p = l(x), r = () => m(e, { ...t, theme: t.theme || p.value });\n    return h(() => {\n      r(), s(e, \"stepChange\", o), s(e, \"update\", o);\n    }), u(r), C(p, (n) => {\n      m(e, { theme: t.theme || n });\n    }), (n, z) => (_(), y(R(g(f)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: k(() => [\n        v(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  B as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/StepperHorizontalWrapper.vue2.mjs":"import f from \"./StepperHorizontalWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SwitchWrapper.vue.d.ts":"import type { BreakpointCustomizable, SwitchAlignLabel, Theme } from '../types';\ntype PSwitchProps = {\n    /**\n     * Aligns the label.\n     */\n    alignLabel?: BreakpointCustomizable<SwitchAlignLabel>;\n    /**\n     * Visualize the switch with on/off status.\n     */\n    checked?: boolean;\n    /**\n     * Disables the switch. No events will be triggered while disabled state is active.\n     */\n    disabled?: boolean;\n    /**\n     * Show or hide label. For better accessibility it's recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * Disables the switch and shows a loading indicator. No events will be triggered while loading state is active.\n     */\n    loading?: boolean;\n    /**\n     * Stretches the contents to max available space.\n     */\n    stretch?: BreakpointCustomizable<boolean>;\n    /**\n     * Adapts the switch color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PSwitchProps>, {\n    alignLabel: string;\n    checked: boolean;\n    disabled: boolean;\n    hideLabel: boolean;\n    loading: boolean;\n    stretch: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    switchChange: (value: import(\"../types\").SwitchUpdateEvent) => void;\n    update: (value: import(\"../types\").SwitchUpdateEvent) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PSwitchProps>, {\n    alignLabel: string;\n    checked: boolean;\n    disabled: boolean;\n    hideLabel: boolean;\n    loading: boolean;\n    stretch: boolean;\n}>>> & {\n    onUpdate?: ((value: import(\"../types\").SwitchUpdateEvent) => any) | undefined;\n    onSwitchChange?: ((value: import(\"../types\").SwitchUpdateEvent) => any) | undefined;\n}, {\n    stretch: BreakpointCustomizable<boolean>;\n    disabled: boolean;\n    hideLabel: BreakpointCustomizable<boolean>;\n    loading: boolean;\n    alignLabel: BreakpointCustomizable<SwitchAlignLabel>;\n    checked: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/SwitchWrapper.vue.mjs":"import { defineComponent as d, ref as m, inject as i, onMounted as h, onUpdated as u, watch as y, openBlock as C, createBlock as w, resolveDynamicComponent as _, unref as g, withCtx as B, renderSlot as b } from \"vue\";\nimport { usePrefix as k, themeInjectionKey as R, addEventListenerToElementRef as l, syncProperties as f } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ d({\n  __name: \"SwitchWrapper\",\n  props: {\n    alignLabel: { default: \"end\" },\n    checked: { type: Boolean, default: !1 },\n    disabled: { type: Boolean, default: !1 },\n    hideLabel: { default: !1 },\n    loading: { type: Boolean, default: !1 },\n    stretch: { default: !1 },\n    theme: {}\n  },\n  emits: [\"switchChange\", \"update\"],\n  setup(p, { emit: r }) {\n    const c = k(\"p-switch\"), t = p, e = m(), o = r, a = i(R), s = () => f(e, { ...t, theme: t.theme || a.value });\n    return h(() => {\n      s(), l(e, \"switchChange\", o), l(e, \"update\", o);\n    }), u(s), y(a, (n) => {\n      f(e, { theme: t.theme || n });\n    }), (n, v) => (C(), w(_(g(c)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: B(() => [\n        b(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/SwitchWrapper.vue2.mjs":"import f from \"./SwitchWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableBodyWrapper.vue.d.ts":"declare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<{}, {}, {}, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<{}>>, {}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableBodyWrapper.vue.mjs":"import { defineComponent as t, openBlock as n, createBlock as r, resolveDynamicComponent as a, unref as p, withCtx as l, renderSlot as m } from \"vue\";\nimport { usePrefix as s } from \"../../utils.mjs\";\nconst d = /* @__PURE__ */ t({\n  __name: \"TableBodyWrapper\",\n  setup(c) {\n    const e = s(\"p-table-body\");\n    return (o, f) => (n(), r(a(p(e)), null, {\n      default: l(() => [\n        m(o.$slots, \"default\")\n      ]),\n      _: 3\n    }));\n  }\n});\nexport {\n  d as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableBodyWrapper.vue2.mjs":"import f from \"./TableBodyWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableCellWrapper.vue.d.ts":"type PTableCellProps = {\n    /**\n     * Displays slotted text multiline or forced into a single line.\n     */\n    multiline?: boolean;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PTableCellProps>, {\n    multiline: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PTableCellProps>, {\n    multiline: boolean;\n}>>>, {\n    multiline: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableCellWrapper.vue.mjs":"import { defineComponent as s, ref as l, onMounted as a, onUpdated as f, openBlock as c, createBlock as m, resolveDynamicComponent as d, unref as u, withCtx as i, renderSlot as C } from \"vue\";\nimport { usePrefix as _, syncProperties as y } from \"../../utils.mjs\";\nconst B = /* @__PURE__ */ s({\n  __name: \"TableCellWrapper\",\n  props: {\n    multiline: { type: Boolean, default: !1 }\n  },\n  setup(n) {\n    const t = _(\"p-table-cell\"), r = n, e = l(), o = () => y(e, r);\n    return a(o), f(o), (p, b) => (c(), m(d(u(t)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: i(() => [\n        C(p.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  B as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableCellWrapper.vue2.mjs":"import f from \"./TableCellWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableHeadCellWrapper.vue.d.ts":"import type { TableHeadCellSort } from '../types';\ntype PTableHeadCellProps = {\n    /**\n     * Hides the label but stays accessible for screen readers. This property only takes effect when sort property is not defined.\n     */\n    hideLabel?: boolean;\n    /**\n     * Displays slotted text multiline or forced into a single line.\n     */\n    multiline?: boolean;\n    /**\n     * Defines sortability properties.\n     */\n    sort?: TableHeadCellSort;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PTableHeadCellProps>, {\n    hideLabel: boolean;\n    multiline: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PTableHeadCellProps>, {\n    hideLabel: boolean;\n    multiline: boolean;\n}>>>, {\n    hideLabel: boolean;\n    multiline: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableHeadCellWrapper.vue.mjs":"import { defineComponent as a, ref as l, onMounted as s, onUpdated as f, openBlock as c, createBlock as d, resolveDynamicComponent as m, unref as u, withCtx as i, renderSlot as C } from \"vue\";\nimport { usePrefix as _, syncProperties as y } from \"../../utils.mjs\";\nconst k = /* @__PURE__ */ a({\n  __name: \"TableHeadCellWrapper\",\n  props: {\n    hideLabel: { type: Boolean, default: !1 },\n    multiline: { type: Boolean, default: !1 },\n    sort: {}\n  },\n  setup(t) {\n    const n = _(\"p-table-head-cell\"), r = t, e = l(), o = () => y(e, r);\n    return s(o), f(o), (p, b) => (c(), d(m(u(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: i(() => [\n        C(p.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  k as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableHeadCellWrapper.vue2.mjs":"import f from \"./TableHeadCellWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableHeadRowWrapper.vue.d.ts":"declare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<{}, {}, {}, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<{}>>, {}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableHeadRowWrapper.vue.mjs":"import { defineComponent as t, openBlock as r, createBlock as n, resolveDynamicComponent as a, unref as p, withCtx as l, renderSlot as m } from \"vue\";\nimport { usePrefix as s } from \"../../utils.mjs\";\nconst d = /* @__PURE__ */ t({\n  __name: \"TableHeadRowWrapper\",\n  setup(c) {\n    const e = s(\"p-table-head-row\");\n    return (o, f) => (r(), n(a(p(e)), null, {\n      default: l(() => [\n        m(o.$slots, \"default\")\n      ]),\n      _: 3\n    }));\n  }\n});\nexport {\n  d as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableHeadRowWrapper.vue2.mjs":"import f from \"./TableHeadRowWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableHeadWrapper.vue.d.ts":"declare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<{}, {}, {}, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<{}>>, {}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableHeadWrapper.vue.mjs":"import { defineComponent as t, openBlock as n, createBlock as r, resolveDynamicComponent as a, unref as p, withCtx as l, renderSlot as m } from \"vue\";\nimport { usePrefix as s } from \"../../utils.mjs\";\nconst d = /* @__PURE__ */ t({\n  __name: \"TableHeadWrapper\",\n  setup(c) {\n    const e = s(\"p-table-head\");\n    return (o, f) => (n(), r(a(p(e)), null, {\n      default: l(() => [\n        m(o.$slots, \"default\")\n      ]),\n      _: 3\n    }));\n  }\n});\nexport {\n  d as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableHeadWrapper.vue2.mjs":"import f from \"./TableHeadWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableRowWrapper.vue.d.ts":"declare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<{}, {}, {}, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<{}>>, {}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableRowWrapper.vue.mjs":"import { defineComponent as t, openBlock as r, createBlock as n, resolveDynamicComponent as a, unref as p, withCtx as l, renderSlot as m } from \"vue\";\nimport { usePrefix as s } from \"../../utils.mjs\";\nconst i = /* @__PURE__ */ t({\n  __name: \"TableRowWrapper\",\n  setup(c) {\n    const e = s(\"p-table-row\");\n    return (o, f) => (r(), n(a(p(e)), null, {\n      default: l(() => [\n        m(o.$slots, \"default\")\n      ]),\n      _: 3\n    }));\n  }\n});\nexport {\n  i as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableRowWrapper.vue2.mjs":"import f from \"./TableRowWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableWrapper.vue.d.ts":"import type { Theme } from '../types';\ntype PTableProps = {\n    /**\n     * A caption describing the contents of the table for accessibility only. This won't be visible in the browser. Use an element with an attribute of `slot=\"caption\"` for a visible caption.\n     */\n    caption?: string;\n    /**\n     * Adapts the color when used on dark background.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_TypePropsToOption<PTableProps>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    sortingChange: (value: import(\"../types\").TableHeadCellSort) => void;\n    update: (value: import(\"../types\").TableHeadCellSort) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_TypePropsToOption<PTableProps>>> & {\n    onUpdate?: ((value: import(\"../types\").TableHeadCellSort) => any) | undefined;\n    onSortingChange?: ((value: import(\"../types\").TableHeadCellSort) => any) | undefined;\n}, {}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableWrapper.vue.mjs":"import { defineComponent as f, ref as d, inject as h, onMounted as l, onUpdated as u, watch as C, openBlock as _, createBlock as g, resolveDynamicComponent as y, unref as R, withCtx as b, renderSlot as k } from \"vue\";\nimport { usePrefix as v, themeInjectionKey as w, addEventListenerToElementRef as p, syncProperties as m } from \"../../utils.mjs\";\nconst j = /* @__PURE__ */ f({\n  __name: \"TableWrapper\",\n  props: {\n    caption: {},\n    theme: {}\n  },\n  emits: [\"sortingChange\", \"update\"],\n  setup(a, { emit: c }) {\n    const i = v(\"p-table\"), t = a, e = d(), o = c, r = h(w), s = () => m(e, { ...t, theme: t.theme || r.value });\n    return l(() => {\n      s(), p(e, \"sortingChange\", o), p(e, \"update\", o);\n    }), u(s), C(r, (n) => {\n      m(e, { theme: t.theme || n });\n    }), (n, x) => (_(), g(y(R(i)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: b(() => [\n        k(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  j as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TableWrapper.vue2.mjs":"import f from \"./TableWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TabsBarWrapper.vue.d.ts":"import type { TabsBarGradientColor, TabsBarGradientColorScheme, BreakpointCustomizable, TabsBarSize, Theme, TabsBarWeight } from '../types';\ntype PTabsBarProps = {\n    /**\n     * Defines which tab to be visualized as selected (zero-based numbering), undefined if none should be selected.\n     */\n    activeTabIndex?: number | undefined;\n    /**\n     * Adapts the background gradient color of prev and next button.\n     */\n    gradientColor?: TabsBarGradientColor;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `gradientColor` instead. Adapts the background gradient color of prev and next button.\n     */\n    gradientColorScheme?: TabsBarGradientColorScheme;\n    /**\n     * The text size.\n     */\n    size?: BreakpointCustomizable<TabsBarSize>;\n    /**\n     * Adapts the color when used on dark background.\n     */\n    theme?: Theme;\n    /**\n     * The text weight.\n     */\n    weight?: TabsBarWeight;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PTabsBarProps>, {\n    gradientColor: string;\n    size: string;\n    weight: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    tabChange: (value: import(\"../types\").TabsBarUpdateEvent) => void;\n    update: (value: import(\"../types\").TabsBarUpdateEvent) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PTabsBarProps>, {\n    gradientColor: string;\n    size: string;\n    weight: string;\n}>>> & {\n    onUpdate?: ((value: import(\"../types\").TabsBarUpdateEvent) => any) | undefined;\n    onTabChange?: ((value: import(\"../types\").TabsBarUpdateEvent) => any) | undefined;\n}, {\n    weight: TabsBarWeight;\n    size: BreakpointCustomizable<TabsBarSize>;\n    gradientColor: TabsBarGradientColor;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TabsBarWrapper.vue.mjs":"import { defineComponent as f, ref as i, inject as l, onMounted as u, onUpdated as h, watch as C, openBlock as b, createBlock as g, resolveDynamicComponent as _, unref as y, withCtx as k, renderSlot as v } from \"vue\";\nimport { usePrefix as w, themeInjectionKey as x, addEventListenerToElementRef as s, syncProperties as m } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ f({\n  __name: \"TabsBarWrapper\",\n  props: {\n    activeTabIndex: {},\n    gradientColor: { default: \"background-base\" },\n    gradientColorScheme: {},\n    size: { default: \"small\" },\n    theme: {},\n    weight: { default: \"regular\" }\n  },\n  emits: [\"tabChange\", \"update\"],\n  setup(p, { emit: c }) {\n    const d = w(\"p-tabs-bar\"), t = p, e = i(), o = c, a = l(x), r = () => m(e, { ...t, theme: t.theme || a.value });\n    return u(() => {\n      r(), s(e, \"tabChange\", o), s(e, \"update\", o);\n    }), h(r), C(a, (n) => {\n      m(e, { theme: t.theme || n });\n    }), (n, R) => (b(), g(_(y(d)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: k(() => [\n        v(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TabsBarWrapper.vue2.mjs":"import f from \"./TabsBarWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TabsItemWrapper.vue.d.ts":"type PTabsItemProps = {\n    /**\n     * Defines the label used in tabs.\n     */\n    label: string;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_TypePropsToOption<PTabsItemProps>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_TypePropsToOption<PTabsItemProps>>>, {}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TabsItemWrapper.vue.mjs":"import { defineComponent as s, ref as a, onMounted as c, onUpdated as f, openBlock as m, createBlock as d, resolveDynamicComponent as l, unref as i, withCtx as u, renderSlot as _ } from \"vue\";\nimport { usePrefix as C, syncProperties as b } from \"../../utils.mjs\";\nconst P = /* @__PURE__ */ s({\n  __name: \"TabsItemWrapper\",\n  props: {\n    label: {}\n  },\n  setup(t) {\n    const n = C(\"p-tabs-item\"), r = t, e = a(), o = () => b(e, r);\n    return c(o), f(o), (p, y) => (m(), d(l(i(n)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: u(() => [\n        _(p.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  P as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TabsItemWrapper.vue2.mjs":"import f from \"./TabsItemWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TabsWrapper.vue.d.ts":"import type { TabsGradientColor, TabsGradientColorScheme, BreakpointCustomizable, TabsSize, Theme, TabsWeight } from '../types';\ntype PTabsProps = {\n    /**\n     * Defines which tab to be visualized as selected (zero-based numbering).\n     */\n    activeTabIndex?: number;\n    /**\n     * Adapts the background gradient color of prev and next button.\n     */\n    gradientColor?: TabsGradientColor;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `gradientColor` instead. Adapts the background gradient color of prev and next button.\n     */\n    gradientColorScheme?: TabsGradientColorScheme;\n    /**\n     * The text size.\n     */\n    size?: BreakpointCustomizable<TabsSize>;\n    /**\n     * Adapts the color when used on dark background.\n     */\n    theme?: Theme;\n    /**\n     * The text weight.\n     */\n    weight?: TabsWeight;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PTabsProps>, {\n    activeTabIndex: number;\n    gradientColor: string;\n    size: string;\n    weight: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {\n    tabChange: (value: import(\"../types\").TabsBarUpdateEvent) => void;\n    update: (value: import(\"../types\").TabsBarUpdateEvent) => void;\n}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PTabsProps>, {\n    activeTabIndex: number;\n    gradientColor: string;\n    size: string;\n    weight: string;\n}>>> & {\n    onUpdate?: ((value: import(\"../types\").TabsBarUpdateEvent) => any) | undefined;\n    onTabChange?: ((value: import(\"../types\").TabsBarUpdateEvent) => any) | undefined;\n}, {\n    weight: TabsWeight;\n    size: BreakpointCustomizable<TabsSize>;\n    gradientColor: TabsGradientColor;\n    activeTabIndex: number;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TabsWrapper.vue.mjs":"import { defineComponent as f, ref as i, inject as l, onMounted as u, onUpdated as h, watch as C, openBlock as b, createBlock as g, resolveDynamicComponent as _, unref as y, withCtx as k, renderSlot as v } from \"vue\";\nimport { usePrefix as w, themeInjectionKey as x, addEventListenerToElementRef as s, syncProperties as m } from \"../../utils.mjs\";\nconst j = /* @__PURE__ */ f({\n  __name: \"TabsWrapper\",\n  props: {\n    activeTabIndex: { default: 0 },\n    gradientColor: { default: \"background-base\" },\n    gradientColorScheme: {},\n    size: { default: \"small\" },\n    theme: {},\n    weight: { default: \"regular\" }\n  },\n  emits: [\"tabChange\", \"update\"],\n  setup(p, { emit: c }) {\n    const d = w(\"p-tabs\"), t = p, e = i(), o = c, a = l(x), r = () => m(e, { ...t, theme: t.theme || a.value });\n    return u(() => {\n      r(), s(e, \"tabChange\", o), s(e, \"update\", o);\n    }), h(r), C(a, (n) => {\n      m(e, { theme: t.theme || n });\n    }), (n, R) => (b(), g(_(y(d)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: k(() => [\n        v(n.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  j as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TabsWrapper.vue2.mjs":"import f from \"./TabsWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TagDismissibleWrapper.vue.d.ts":"import type { SelectedAriaAttributes, TagDismissibleAriaAttribute, TagDismissibleColor, Theme } from '../types';\ntype PTagDismissibleProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<TagDismissibleAriaAttribute>;\n    /**\n     * Background color variations\n     */\n    color?: TagDismissibleColor;\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * Adapts the color when used on dark background.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PTagDismissibleProps>, {\n    color: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PTagDismissibleProps>, {\n    color: string;\n}>>>, {\n    color: TagDismissibleColor;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TagDismissibleWrapper.vue.mjs":"import { defineComponent as c, ref as m, inject as f, onMounted as i, onUpdated as l, watch as d, openBlock as u, createBlock as h, resolveDynamicComponent as _, unref as C, withCtx as b, renderSlot as y } from \"vue\";\nimport { usePrefix as g, themeInjectionKey as k, syncProperties as s } from \"../../utils.mjs\";\nconst R = /* @__PURE__ */ c({\n  __name: \"TagDismissibleWrapper\",\n  props: {\n    aria: {},\n    color: { default: \"background-surface\" },\n    label: {},\n    theme: {}\n  },\n  setup(a) {\n    const p = g(\"p-tag-dismissible\"), e = a, t = m(), n = f(k), r = () => s(t, { ...e, theme: e.theme || n.value });\n    return i(r), l(r), d(n, (o) => {\n      s(t, { theme: e.theme || o });\n    }), (o, w) => (u(), h(_(C(p)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: b(() => [\n        y(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  R as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TagDismissibleWrapper.vue2.mjs":"import f from \"./TagDismissibleWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TagWrapper.vue.d.ts":"import type { TagColor, TagIcon, Theme } from '../types';\ntype PTagProps = {\n    /**\n     * Background color variations depending on theme property.\n     */\n    color?: TagColor;\n    /**\n     * Displays as compact version.\n     */\n    compact?: boolean;\n    /**\n     * The icon shown.\n     */\n    icon?: TagIcon;\n    /**\n     * A URL path to a custom icon.\n     */\n    iconSource?: string;\n    /**\n     * Adapts the tag color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PTagProps>, {\n    color: string;\n    compact: boolean;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PTagProps>, {\n    color: string;\n    compact: boolean;\n}>>>, {\n    compact: boolean;\n    color: TagColor;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TagWrapper.vue.mjs":"import { defineComponent as s, ref as m, inject as f, onMounted as u, onUpdated as l, watch as d, openBlock as i, createBlock as h, resolveDynamicComponent as _, unref as y, withCtx as C, renderSlot as g } from \"vue\";\nimport { usePrefix as k, themeInjectionKey as w, syncProperties as c } from \"../../utils.mjs\";\nconst R = /* @__PURE__ */ s({\n  __name: \"TagWrapper\",\n  props: {\n    color: { default: \"background-surface\" },\n    compact: { type: Boolean, default: !1 },\n    icon: {},\n    iconSource: {},\n    theme: {}\n  },\n  setup(p) {\n    const a = k(\"p-tag\"), e = p, o = m(), n = f(w), r = () => c(o, { ...e, theme: e.theme || n.value });\n    return u(r), l(r), d(n, (t) => {\n      c(o, { theme: e.theme || t });\n    }), (t, x) => (i(), h(_(y(a)), {\n      ref_key: \"pdsComponentRef\",\n      ref: o\n    }, {\n      default: C(() => [\n        g(t.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  R as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TagWrapper.vue2.mjs":"import f from \"./TagWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextFieldWrapperWrapper.vue.d.ts":"import type { TextFieldWrapperActionIcon, BreakpointCustomizable, TextFieldWrapperState, Theme, TextFieldWrapperUnitPosition } from '../types';\ntype PTextFieldWrapperProps = {\n    /**\n     * Action icon can be set to `locate` for `input type=\"search\"` in order to display an action button.\n     */\n    actionIcon?: TextFieldWrapperActionIcon;\n    /**\n     * Disables the action button and shows a loading indicator. No events will be triggered while loading state is active.\n     */\n    actionLoading?: boolean;\n    /**\n     * The description text.\n     */\n    description?: string;\n    /**\n     * Show or hide label and description text. For better accessibility it is recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * The message styled depending on validation state.\n     */\n    message?: string;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `showCounter` instead. Show or hide max character count.\n     */\n    showCharacterCount?: boolean;\n    /**\n     * Show or hide max character count.\n     */\n    showCounter?: boolean;\n    /**\n     * @experimental Show or hide password toggle for `input type=\"password\"`.\n     */\n    showPasswordToggle?: boolean;\n    /**\n     * The validation state.\n     */\n    state?: TextFieldWrapperState;\n    /**\n     * Show search button if wrapped inside a form.\n     */\n    submitButton?: boolean;\n    /**\n     * Adapts the color depending on the theme.\n     */\n    theme?: Theme;\n    /**\n     * The unit text.\n     */\n    unit?: string;\n    /**\n     * The unit position.\n     */\n    unitPosition?: TextFieldWrapperUnitPosition;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PTextFieldWrapperProps>, {\n    actionLoading: boolean;\n    description: string;\n    hideLabel: boolean;\n    label: string;\n    message: string;\n    showCounter: boolean;\n    showPasswordToggle: boolean;\n    state: string;\n    submitButton: boolean;\n    unit: string;\n    unitPosition: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, any, string, import(\"vue\").PublicProps, any, {\n    label: string;\n    description: string;\n    state: TextFieldWrapperState;\n    hideLabel: BreakpointCustomizable<boolean>;\n    message: string;\n    actionLoading: boolean;\n    showCounter: boolean;\n    showPasswordToggle: boolean;\n    submitButton: boolean;\n    unit: string;\n    unitPosition: TextFieldWrapperUnitPosition;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextFieldWrapperWrapper.vue.mjs":"import { defineComponent as i, ref as u, inject as d, onMounted as c, onUpdated as m, watch as h, openBlock as y, createBlock as C, resolveDynamicComponent as w, unref as B, withCtx as _, renderSlot as x } from \"vue\";\nimport { usePrefix as g, themeInjectionKey as P, addEventListenerToElementRef as b, syncProperties as r } from \"../../utils.mjs\";\nconst v = /* @__PURE__ */ i({\n  __name: \"TextFieldWrapperWrapper\",\n  props: {\n    actionIcon: {},\n    actionLoading: { type: Boolean, default: !1 },\n    description: { default: \"\" },\n    hideLabel: { default: !1 },\n    label: { default: \"\" },\n    message: { default: \"\" },\n    showCharacterCount: { type: Boolean },\n    showCounter: { type: Boolean, default: !0 },\n    showPasswordToggle: { type: Boolean, default: !0 },\n    state: { default: \"none\" },\n    submitButton: { type: Boolean, default: !0 },\n    theme: {},\n    unit: { default: \"\" },\n    unitPosition: { default: \"prefix\" }\n  },\n  emits: [\"action\"],\n  setup(s, { emit: l }) {\n    const p = g(\"p-text-field-wrapper\"), t = s, e = u(), f = l, n = d(P), a = () => r(e, { ...t, theme: t.theme || n.value });\n    return c(() => {\n      a(), b(e, \"action\", f);\n    }), m(a), h(n, (o) => {\n      r(e, { theme: t.theme || o });\n    }), (o, R) => (y(), C(w(B(p)), {\n      ref_key: \"pdsComponentRef\",\n      ref: e\n    }, {\n      default: _(() => [\n        x(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  v as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextFieldWrapperWrapper.vue2.mjs":"import f from \"./TextFieldWrapperWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextListItemWrapper.vue.d.ts":"declare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<{}, {}, {}, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<{}>>, {}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextListItemWrapper.vue.mjs":"import { defineComponent as o, openBlock as n, createBlock as r, resolveDynamicComponent as p, unref as m, withCtx as s, renderSlot as a } from \"vue\";\nimport { usePrefix as l } from \"../../utils.mjs\";\nconst _ = /* @__PURE__ */ o({\n  __name: \"TextListItemWrapper\",\n  setup(i) {\n    const e = l(\"p-text-list-item\");\n    return (t, c) => (n(), r(p(m(e)), null, {\n      default: s(() => [\n        a(t.$slots, \"default\")\n      ]),\n      _: 3\n    }));\n  }\n});\nexport {\n  _ as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextListItemWrapper.vue2.mjs":"import f from \"./TextListItemWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextListWrapper.vue.d.ts":"import type { TextListListType, TextListOrderType, Theme, TextListType } from '../types';\ntype PTextListProps = {\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `type` instead. The type of the list.\n     */\n    listType?: TextListListType;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `type` instead. The list style type of ordered list. Only has effect when list type is set to 'ordered'.\n     */\n    orderType?: TextListOrderType;\n    /**\n     * Adapts the text color depending on the theme.\n     */\n    theme?: Theme;\n    /**\n     * The list style type.\n     */\n    type?: TextListType;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PTextListProps>, {\n    type: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PTextListProps>, {\n    type: string;\n}>>>, {\n    type: TextListType;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextListWrapper.vue.mjs":"import { defineComponent as c, ref as f, inject as a, onMounted as d, onUpdated as i, watch as l, openBlock as u, createBlock as h, resolveDynamicComponent as y, unref as _, withCtx as C, renderSlot as x } from \"vue\";\nimport { usePrefix as T, themeInjectionKey as k, syncProperties as p } from \"../../utils.mjs\";\nconst j = /* @__PURE__ */ c({\n  __name: \"TextListWrapper\",\n  props: {\n    listType: {},\n    orderType: {},\n    theme: {},\n    type: { default: \"unordered\" }\n  },\n  setup(s) {\n    const m = T(\"p-text-list\"), e = s, t = f(), n = a(k), r = () => p(t, { ...e, theme: e.theme || n.value });\n    return d(r), i(r), l(n, (o) => {\n      p(t, { theme: e.theme || o });\n    }), (o, w) => (u(), h(y(_(m)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: C(() => [\n        x(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  j as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextListWrapper.vue2.mjs":"import f from \"./TextListWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextWrapper.vue.d.ts":"import type { TextAlign, TextColor, BreakpointCustomizable, TextSize, TextTag, Theme, TextWeight } from '../types';\ntype PTextProps = {\n    /**\n     * Text alignment of the component.\n     */\n    align?: TextAlign;\n    /**\n     * Basic text color variations depending on theme property.\n     */\n    color?: TextColor;\n    /**\n     * Adds an ellipsis to a single line of text if it overflows.\n     */\n    ellipsis?: boolean;\n    /**\n     * Size of the text. Also defines the size for specific breakpoints, like {base: \"small\", l: \"medium\"}. You always need to provide a base value when doing this.\n     */\n    size?: BreakpointCustomizable<TextSize>;\n    /**\n     * Sets a custom HTML tag depending on the usage of the text component.\n     */\n    tag?: TextTag;\n    /**\n     * Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop.\n     */\n    theme?: Theme;\n    /**\n     * The weight of the text.\n     */\n    weight?: TextWeight;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PTextProps>, {\n    align: string;\n    color: string;\n    ellipsis: boolean;\n    size: string;\n    tag: string;\n    weight: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PTextProps>, {\n    align: string;\n    color: string;\n    ellipsis: boolean;\n    size: string;\n    tag: string;\n    weight: string;\n}>>>, {\n    weight: TextWeight;\n    size: BreakpointCustomizable<TextSize>;\n    tag: TextTag;\n    align: TextAlign;\n    color: TextColor;\n    ellipsis: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextWrapper.vue.mjs":"import { defineComponent as l, ref as f, inject as m, onMounted as c, onUpdated as u, watch as d, openBlock as i, createBlock as h, resolveDynamicComponent as y, unref as _, withCtx as C, renderSlot as g } from \"vue\";\nimport { usePrefix as x, themeInjectionKey as w, syncProperties as a } from \"../../utils.mjs\";\nconst R = /* @__PURE__ */ l({\n  __name: \"TextWrapper\",\n  props: {\n    align: { default: \"start\" },\n    color: { default: \"primary\" },\n    ellipsis: { type: Boolean, default: !1 },\n    size: { default: \"small\" },\n    tag: { default: \"p\" },\n    theme: {},\n    weight: { default: \"regular\" }\n  },\n  setup(s) {\n    const p = x(\"p-text\"), e = s, t = f(), n = m(w), r = () => a(t, { ...e, theme: e.theme || n.value });\n    return c(r), u(r), d(n, (o) => {\n      a(t, { theme: e.theme || o });\n    }), (o, k) => (i(), h(y(_(p)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: C(() => [\n        g(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  R as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextWrapper.vue2.mjs":"import f from \"./TextWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextareaWrapperWrapper.vue.d.ts":"import type { BreakpointCustomizable, TextareaWrapperState, Theme } from '../types';\ntype PTextareaWrapperProps = {\n    /**\n     * The description text.\n     */\n    description?: string;\n    /**\n     * Show or hide label. For better accessibility it is recommended to show the label.\n     */\n    hideLabel?: BreakpointCustomizable<boolean>;\n    /**\n     * The label text.\n     */\n    label?: string;\n    /**\n     * The message styled depending on validation state.\n     */\n    message?: string;\n    /**\n     * @deprecated since v3.0.0, will be removed with next major release, use `showCounter` instead. Show or hide max character count.\n     */\n    showCharacterCount?: boolean;\n    /**\n     * Show or hide max character count.\n     */\n    showCounter?: boolean;\n    /**\n     * The validation state.\n     */\n    state?: TextareaWrapperState;\n    /**\n     * Adapts the color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare function __VLS_template(): {\n    default?(_: {}): any;\n};\ndeclare const __VLS_component: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PTextareaWrapperProps>, {\n    description: string;\n    hideLabel: boolean;\n    label: string;\n    message: string;\n    showCounter: boolean;\n    state: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PTextareaWrapperProps>, {\n    description: string;\n    hideLabel: boolean;\n    label: string;\n    message: string;\n    showCounter: boolean;\n    state: string;\n}>>>, {\n    label: string;\n    description: string;\n    state: TextareaWrapperState;\n    hideLabel: BreakpointCustomizable<boolean>;\n    message: string;\n    showCounter: boolean;\n}, {}>;\ndeclare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_WithTemplateSlots<T, S> = T & {\n    new (): {\n        $slots: S;\n    };\n};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextareaWrapperWrapper.vue.mjs":"import { defineComponent as f, ref as l, inject as c, onMounted as m, onUpdated as u, watch as d, openBlock as h, createBlock as i, resolveDynamicComponent as C, unref as y, withCtx as _, renderSlot as w } from \"vue\";\nimport { usePrefix as x, themeInjectionKey as B, syncProperties as a } from \"../../utils.mjs\";\nconst R = /* @__PURE__ */ f({\n  __name: \"TextareaWrapperWrapper\",\n  props: {\n    description: { default: \"\" },\n    hideLabel: { default: !1 },\n    label: { default: \"\" },\n    message: { default: \"\" },\n    showCharacterCount: { type: Boolean },\n    showCounter: { type: Boolean, default: !0 },\n    state: { default: \"none\" },\n    theme: {}\n  },\n  setup(p) {\n    const s = x(\"p-textarea-wrapper\"), e = p, t = l(), n = c(B), r = () => a(t, { ...e, theme: e.theme || n.value });\n    return m(r), u(r), d(n, (o) => {\n      a(t, { theme: e.theme || o });\n    }), (o, b) => (h(), i(C(y(s)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, {\n      default: _(() => [\n        w(o.$slots, \"default\")\n      ]),\n      _: 3\n    }, 512));\n  }\n});\nexport {\n  R as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/TextareaWrapperWrapper.vue2.mjs":"import f from \"./TextareaWrapperWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ToastWrapper.vue.d.ts":"import type { Theme } from '../types';\ntype PToastProps = {\n    /**\n     * Adapts the toast color depending on the theme.\n     */\n    theme?: Theme;\n};\ndeclare const _default: import(\"vue\").DefineComponent<__VLS_TypePropsToOption<PToastProps>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_TypePropsToOption<PToastProps>>>, {}, {}>;\nexport default _default;\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/ToastWrapper.vue.mjs":"import { defineComponent as m, ref as a, inject as f, onMounted as h, onUpdated as i, watch as u, openBlock as d, createBlock as l, resolveDynamicComponent as _, unref as y } from \"vue\";\nimport { usePrefix as C, themeInjectionKey as k, syncProperties as p } from \"../../utils.mjs\";\nconst j = /* @__PURE__ */ m({\n  __name: \"ToastWrapper\",\n  props: {\n    theme: {}\n  },\n  setup(s) {\n    const c = C(\"p-toast\"), e = s, t = a(), o = f(k), n = () => p(t, { ...e, theme: e.theme || o.value });\n    return h(n), i(n), u(o, (r) => {\n      p(t, { theme: e.theme || r });\n    }), (r, x) => (d(), l(_(y(c)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, null, 512));\n  }\n});\nexport {\n  j as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/ToastWrapper.vue2.mjs":"import f from \"./ToastWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/WordmarkWrapper.vue.d.ts":"import type { SelectedAriaAttributes, WordmarkAriaAttribute, WordmarkSize, WordmarkTarget, Theme } from '../types';\ntype PWordmarkProps = {\n    /**\n     * Add ARIA attributes.\n     */\n    aria?: SelectedAriaAttributes<WordmarkAriaAttribute>;\n    /**\n     * When providing an url then the component will be rendered as `<a>`.\n     */\n    href?: string;\n    /**\n     * Adapts sizing of wordmark.\n     */\n    size?: WordmarkSize;\n    /**\n     * Target attribute where the link should be opened.\n     */\n    target?: WordmarkTarget;\n    /**\n     * Adapts color depending on theme.\n     */\n    theme?: Theme;\n};\ndeclare const _default: import(\"vue\").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToOption<PWordmarkProps>, {\n    size: string;\n    target: string;\n}>, {}, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").PublicProps, Readonly<import(\"vue\").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToOption<PWordmarkProps>, {\n    size: string;\n    target: string;\n}>>>, {\n    size: WordmarkSize;\n    target: WordmarkTarget;\n}, {}>;\nexport default _default;\ntype __VLS_WithDefaults<P, D> = {\n    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {\n        default: D[K];\n    }> : P[K];\n};\ntype __VLS_Prettify<T> = {\n    [K in keyof T]: T[K];\n} & {};\ntype __VLS_NonUndefinedable<T> = T extends undefined ? never : T;\ntype __VLS_TypePropsToOption<T> = {\n    [K in keyof T]-?: {} extends Pick<T, K> ? {\n        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;\n    } : {\n        type: import('vue').PropType<T[K]>;\n        required: true;\n    };\n};\n","@porsche-design-system/components-vue/esm/lib/components/WordmarkWrapper.vue.mjs":"import { defineComponent as a, ref as c, inject as f, onMounted as l, onUpdated as d, watch as i, openBlock as u, createBlock as h, resolveDynamicComponent as _, unref as k } from \"vue\";\nimport { usePrefix as y, themeInjectionKey as C, syncProperties as m } from \"../../utils.mjs\";\nconst R = /* @__PURE__ */ a({\n  __name: \"WordmarkWrapper\",\n  props: {\n    aria: {},\n    href: {},\n    size: { default: \"small\" },\n    target: { default: \"_self\" },\n    theme: {}\n  },\n  setup(p) {\n    const s = y(\"p-wordmark\"), e = p, t = c(), o = f(C), n = () => m(t, { ...e, theme: e.theme || o.value });\n    return l(n), d(n), i(o, (r) => {\n      m(t, { theme: e.theme || r });\n    }), (r, w) => (u(), h(_(k(s)), {\n      ref_key: \"pdsComponentRef\",\n      ref: t\n    }, null, 512));\n  }\n});\nexport {\n  R as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/WordmarkWrapper.vue2.mjs":"import f from \"./WordmarkWrapper.vue.mjs\";\nexport {\n  f as default\n};\n","@porsche-design-system/components-vue/esm/lib/components/index.d.ts":"export { default as PAccordion } from './AccordionWrapper.vue';\nexport { default as PBanner } from './BannerWrapper.vue';\nexport { default as PButton } from './ButtonWrapper.vue';\nexport { default as PButtonGroup } from './ButtonGroupWrapper.vue';\nexport { default as PButtonPure } from './ButtonPureWrapper.vue';\nexport { default as PButtonTile } from './ButtonTileWrapper.vue';\nexport { default as PCanvas } from './CanvasWrapper.vue';\nexport { default as PCarousel } from './CarouselWrapper.vue';\nexport { default as PCheckboxWrapper } from './CheckboxWrapperWrapper.vue';\nexport { default as PContentWrapper } from './ContentWrapperWrapper.vue';\nexport { default as PCrest } from './CrestWrapper.vue';\nexport { default as PDisplay } from './DisplayWrapper.vue';\nexport { default as PDivider } from './DividerWrapper.vue';\nexport { default as PFieldset } from './FieldsetWrapper.vue';\nexport { default as PFieldsetWrapper } from './FieldsetWrapperWrapper.vue';\nexport { default as PFlex } from './FlexWrapper.vue';\nexport { default as PFlexItem } from './FlexItemWrapper.vue';\nexport { default as PFlyout } from './FlyoutWrapper.vue';\nexport { default as PFlyoutMultilevel } from './FlyoutMultilevelWrapper.vue';\nexport { default as PFlyoutMultilevelItem } from './FlyoutMultilevelItemWrapper.vue';\nexport { default as PGrid } from './GridWrapper.vue';\nexport { default as PGridItem } from './GridItemWrapper.vue';\nexport { default as PHeading } from './HeadingWrapper.vue';\nexport { default as PHeadline } from './HeadlineWrapper.vue';\nexport { default as PIcon } from './IconWrapper.vue';\nexport { default as PInlineNotification } from './InlineNotificationWrapper.vue';\nexport { default as PLink } from './LinkWrapper.vue';\nexport { default as PLinkPure } from './LinkPureWrapper.vue';\nexport { default as PLinkSocial } from './LinkSocialWrapper.vue';\nexport { default as PLinkTile } from './LinkTileWrapper.vue';\nexport { default as PLinkTileModelSignature } from './LinkTileModelSignatureWrapper.vue';\nexport { default as PLinkTileProduct } from './LinkTileProductWrapper.vue';\nexport { default as PMarque } from './MarqueWrapper.vue';\nexport { default as PModal } from './ModalWrapper.vue';\nexport { default as PModelSignature } from './ModelSignatureWrapper.vue';\nexport { default as PMultiSelect } from './MultiSelectWrapper.vue';\nexport { default as PMultiSelectOption } from './MultiSelectOptionWrapper.vue';\nexport { default as POptgroup } from './OptgroupWrapper.vue';\nexport { default as PPagination } from './PaginationWrapper.vue';\nexport { default as PPinCode } from './PinCodeWrapper.vue';\nexport { default as PPopover } from './PopoverWrapper.vue';\nexport { default as PRadioButtonWrapper } from './RadioButtonWrapperWrapper.vue';\nexport { default as PScroller } from './ScrollerWrapper.vue';\nexport { default as PSegmentedControl } from './SegmentedControlWrapper.vue';\nexport { default as PSegmentedControlItem } from './SegmentedControlItemWrapper.vue';\nexport { default as PSelect } from './SelectWrapper.vue';\nexport { default as PSelectOption } from './SelectOptionWrapper.vue';\nexport { default as PSelectWrapper } from './SelectWrapperWrapper.vue';\nexport { default as PSpinner } from './SpinnerWrapper.vue';\nexport { default as PStepperHorizontal } from './StepperHorizontalWrapper.vue';\nexport { default as PStepperHorizontalItem } from './StepperHorizontalItemWrapper.vue';\nexport { default as PSwitch } from './SwitchWrapper.vue';\nexport { default as PTable } from './TableWrapper.vue';\nexport { default as PTableBody } from './TableBodyWrapper.vue';\nexport { default as PTableCell } from './TableCellWrapper.vue';\nexport { default as PTableHead } from './TableHeadWrapper.vue';\nexport { default as PTableHeadCell } from './TableHeadCellWrapper.vue';\nexport { default as PTableHeadRow } from './TableHeadRowWrapper.vue';\nexport { default as PTableRow } from './TableRowWrapper.vue';\nexport { default as PTabs } from './TabsWrapper.vue';\nexport { default as PTabsBar } from './TabsBarWrapper.vue';\nexport { default as PTabsItem } from './TabsItemWrapper.vue';\nexport { default as PTag } from './TagWrapper.vue';\nexport { default as PTagDismissible } from './TagDismissibleWrapper.vue';\nexport { default as PText } from './TextWrapper.vue';\nexport { default as PTextFieldWrapper } from './TextFieldWrapperWrapper.vue';\nexport { default as PTextList } from './TextListWrapper.vue';\nexport { default as PTextListItem } from './TextListItemWrapper.vue';\nexport { default as PTextareaWrapper } from './TextareaWrapperWrapper.vue';\nexport { default as PToast } from './ToastWrapper.vue';\nexport { default as PWordmark } from './WordmarkWrapper.vue';\n"}