(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d208357"],{a48f:function(e,t,o){"use strict";o.r(t);var s=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},n=[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"vmark"},[o("h1",[e._v("Blur on Focus")]),o("p",[e._v("We don't want the user to get distracted by the focus indication of elements if they click onto it, but keep the focus indication for keyboard navigation.")]),o("p",[e._v("For this reason we add by default a script that blurs focusable elements after click. We keep the focus for "),o("code",[e._v("input")]),e._v(", "),o("code",[e._v("select")]),e._v(", "),o("code",[e._v("textarea")]),e._v(" that the user can still use form elements, after clicking into it.")]),o("p",[e._v("If that default behaviour doesn't work for you, it's possible to opt-out with the "),o("code",[e._v("p-re-enable-focus-on-click")]),e._v(" class. You can set it to the focusable element itself or one of its parents to prevent our script to blur it."),o("br"),e._v(" You can put the class to the "),o("code",[e._v("html")]),e._v(" or "),o("code",[e._v("body")]),e._v(" element to disable the behaviour completely and keep the native focus behaviour of the browser.")])])}],a=o("2877"),c={},i=Object(a["a"])(c,s,n,!1,null,null,null);t["default"]=i.exports}}]);
//# sourceMappingURL=chunk-2d208357.0d732853.js.map