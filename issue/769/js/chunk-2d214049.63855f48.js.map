{"version":3,"sources":["webpack:///./src/pages/general/testing.md?ce16","webpack:///./src/pages/general/testing.md"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","attrs","script","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,YAAY,SAAS,CAACH,EAAG,KAAK,CAACL,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mLAAmLJ,EAAG,MAAML,EAAIS,GAAG,qCAAqCJ,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,+BAA+B,CAACV,EAAIS,GAAG,8BAA8BT,EAAIS,GAAG,4CAA4CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wDAAwDJ,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,yBAAyB,CAACV,EAAIS,GAAG,WAAWT,EAAIS,GAAG,iEAAiEJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oDAAoDJ,EAAG,MAAM,CAACA,EAAG,OAAO,CAACG,YAAY,uBAAuB,CAACR,EAAIS,GAAG,mxCAAmxCJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uJAAuJJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2GAA2GJ,EAAG,MAAML,EAAIS,GAAG,+DAA+DJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,2IAA2IJ,EAAG,MAAML,EAAIS,GAAG,yCAAyCJ,EAAG,OAAO,CAACL,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,uGAAuGJ,EAAG,KAAK,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2K,YCA3/FE,EAAS,GAKTC,EAAY,eACdD,EACAZ,EACAQ,GACA,EACA,KACA,KACA,MAIa,aAAAK,E","file":"js/chunk-2d214049.63855f48.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vmark\"},[_c('h1',[_vm._v(\"Testing\")]),_c('p',[_vm._v(\"One problem you might encounter while testing is, that the components get lazily loaded. That means, that they might not be ready when your tests start to access the elements.\"),_c('br'),_vm._v(\" You can solve that by using the \"),_c('a',{attrs:{\"href\":\"#/helpers/components-ready\"}},[_vm._v(\"componentsReady-function\")]),_vm._v(\" to know when all loading is finished.\")]),_c('p',[_vm._v(\"Detailed information about tests in frameworks like \"),_c('a',{attrs:{\"href\":\"#/start-coding/react\"}},[_vm._v(\"React\")]),_vm._v(\", Angular etc. can be found in the respective test projects\")]),_c('h2',[_vm._v(\"Unit Tests\")]),_c('p',[_vm._v(\"A simple Jasmine example could look like this:\")]),_c('pre',[_c('code',{staticClass:\"language-javascript\"},[_vm._v(\"import { componentsReady } from '@porsche-design-system/components-js';\\n\\n/*\\n * the function to test which adds a porsche design system\\n * component to the document (usually this is done by a\\n * template engine of a framework)\\n */\\n\\nfunction addPText() {\\n  const element = document.createElement('p-text');\\n  element.innerText = 'Hello World';\\n  document.body.appendChild(element);\\n}\\n\\ndescribe(\\\"The p-text\\\", function() {\\n  /**\\n   * this test might fail, because the component is not\\n   * ready if it wasn't used before\\n   * in that case innerText would be empty string until\\n   * the component finished loading\\n   */\\n  it(\\\"should have content\\\", function() {\\n    addPText();\\n    const element = document.querySelector('p-text');\\n    expect(element.innerText).toBe('Hello World');\\n    element.remove();\\n  });\\n \\n  /**\\n   * this test should work, even if the component\\n   * still needs to be loaded, because the\\n   * componentsReady() function returns a promise\\n   * that resolves as soon as everything is ready\\n   */\\n  it(\\\"should have content\\\", async function() {\\n    addPText();\\n    await componentsReady();\\n    const element = document.querySelector('p-text');\\n    expect(element.innerText).toBe('Hello World');\\n    element.remove();\\n  });\\n\\n});\\n\")])]),_c('h2',[_vm._v(\"E2E Tests\")]),_c('p',[_vm._v(\"Usually E2E tests are robust enough that the lazy loading shouldn't cause any issues. However, there are a lot of different setups for E2E tests.\")]),_c('p',[_vm._v(\"If you face any problems, we would appreciate if you report them. We'll do our best to find a solution.\"),_c('br'),_vm._v(\" Also, it might be handy to know that all components get a \"),_c('code',[_vm._v(\"hydrated\")]),_vm._v(\" class, as soon as they are loaded and ready, that you can wait for. Waiting for the functionality is available in most E2E frameworks.\"),_c('br'),_vm._v(\" Another option would be to make the \"),_c('code',[_vm._v(\"componentsReady\")]),_vm._v(\" function available in the browser and call it from the E2E tests to know when the page is ready.\")]),_c('h2',[_vm._v(\"Visual Regression Testing\")]),_c('p',[_vm._v(\"For Visual Regression Testing we recommend waiting for all network traffic to be finished. This should be handled by the Visual Regression Testing tools you use.\")])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./testing.md?vue&type=template&id=93442adc&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}