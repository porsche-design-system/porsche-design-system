{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/slotted-styles-092484c4.js","webpack:///../components-js/dist/esm-es5/p-text-field-wrapper.entry.js"],"names":["elementStyles","Map","getElementMap","element","tagName","map","get","undefined","newMap","set","getNodeToPrependTo","rootNode","document","head","insertSlottedStyles","css","getRootNode","elementMap","style","createElement","appendChild","createTextNode","prependTo","childNodes","length","insertBefore","firstChild","TextFieldWrapper","hostRef","registerInstance","this","label","state","message","hideLabel","prototype","componentDidLoad","toLowerCase","render","labelClasses","cx","prefix","labelTextClasses","mapBreakpointPropToPrefixedClasses","messageClasses","h","Host","class","tag","name","showMessage","color","getStateColor","includes","Object","defineProperty","getElement","enumerable","configurable"],"mappings":"8LAAIA,EAAgB,IAAIC,IACxB,SAASC,EAAcC,GACnB,IAAIC,EAAUD,EAAQC,QAClBC,EAAML,EAAcM,IAAIF,GAC5B,QAAYG,IAARF,EACA,OAAOA,EAEX,IAAIG,EAAS,IAAIP,IAEjB,OADAD,EAAcS,IAAIL,EAASI,GACpBA,EAEX,SAASE,EAAmBC,GACxB,OAAIA,IAAaC,SACND,EAASE,KAEbF,EAUX,SAASG,EAAoBX,EAASY,GAClC,IAAIJ,EAAWR,EAAQa,cACnBC,EAAaf,EAAcC,GAC/B,QAAiCI,IAA7BU,EAAWX,IAAIK,GAAyB,CACxCM,EAAWR,IAAIE,GAAU,GACzB,IAAIO,EAAQN,SAASO,cAAc,SACnCD,EAAME,YAAYR,SAASS,eAAeN,IAC1C,IAAIO,EAAYZ,EAAmBC,GACnC,GAAIW,EAAUC,WAAWC,OAAS,EAE9B,YADAF,EAAUG,aAAaP,EAAOI,EAAUI,YAG5CJ,EAAUF,YAAYF,M,4JCjC1BS,EAAkC,WAClC,SAASA,EAAiBC,GACtBC,eAAiBC,KAAMF,GAEvBE,KAAKC,MAAQ,GAEbD,KAAKE,MAAQ,OAEbF,KAAKG,QAAU,GAEfH,KAAKI,WAAY,EAqCrB,OAnCAP,EAAiBQ,UAAUC,iBAAmB,WAC1C,IAAIhC,EAAU0B,KAAK3B,QAAQC,QAAQiC,cAC/BnB,EAAQd,EAAU,wPAA0PA,EAAU,uDAAyDA,EAAU,+FAAiGA,EAAU,2JAA6JA,EAAU,4KAA8KA,EAAU,0KAA4KA,EAAU,wJAA0JA,EAAU,kJACjoCU,eAAoBgB,KAAK3B,QAASe,IAEtCS,EAAiBQ,UAAUG,OAAS,WAChC,IAAIC,EAAeC,eAAGC,eAAO,8BACzBC,EAAmBF,eAAGC,eAAO,kCAAmCE,eAAmC,kCAAmCb,KAAKI,UAAW,CAAC,SAAU,aACjKU,EAAiBJ,eAAGC,eAAO,gCAC/B,OAAQI,eAAEC,OAAM,KAAMD,eAAE,QAAS,CAAEE,MAAOR,GAAgBM,eAAE,SAAU,CAAEE,MAAOL,EAAkBM,IAAK,QAAUlB,KAAKC,MAAQD,KAAKC,MAAQc,eAAE,OAAQ,CAAEI,KAAM,WAAaJ,eAAE,OAAQ,OAAQf,KAAKoB,YAAYpB,KAAKE,QAC7Ma,eAAE,SAAU,CAAEE,MAAOH,EAAgBO,MAAOrB,KAAKsB,cAActB,KAAKE,QAAUF,KAAKG,QAAUH,KAAKG,QAAUY,eAAE,OAAQ,CAAEI,KAAM,eAEtItB,EAAiBQ,UAAUe,YAAc,SAAUlB,GAC/C,MAAO,CAAC,UAAW,SAASqB,SAASrB,IAEzCL,EAAiBQ,UAAUiB,cAAgB,SAAUpB,GACjD,OAAQA,GACJ,IAAK,UACD,MAAO,uBACX,IAAK,QACD,MAAO,qBACX,QACI,MAAO,YAGnBsB,OAAOC,eAAe5B,EAAiBQ,UAAW,UAAW,CACzD7B,IAAK,WAAc,OAAOkD,eAAW1B,OACrC2B,YAAY,EACZC,cAAc,IAElBJ,OAAOC,eAAe5B,EAAkB,QAAS,CAC7CrB,IAAK,WAAc,MAAO,87HAC1BmD,YAAY,EACZC,cAAc,IAEX/B,EA/C2B","file":"js/chunk-6c2ac238.dd1d6d6c.js","sourcesContent":["var elementStyles = new Map();\nfunction getElementMap(element) {\n    var tagName = element.tagName;\n    var map = elementStyles.get(tagName);\n    if (map !== undefined) {\n        return map;\n    }\n    var newMap = new Map();\n    elementStyles.set(tagName, newMap);\n    return newMap;\n}\nfunction getNodeToPrependTo(rootNode) {\n    if (rootNode === document) {\n        return rootNode.head;\n    }\n    return rootNode;\n}\n/**\n * Adds an inheritable style for slotted content.\n * @param element\n * @param css - Make sure that css selectors are always in context of element (make sure that\n * it's created dynamically by e.g. `element.tagName.toLowerCase()`), e.g. `a:focus p-link-pure {…}`. Something like\n * providing only `a {…}` would cause unscoped global styling.\n * @returns void\n */\nfunction insertSlottedStyles(element, css) {\n    var rootNode = element.getRootNode();\n    var elementMap = getElementMap(element);\n    if (elementMap.get(rootNode) === undefined) {\n        elementMap.set(rootNode, true);\n        var style = document.createElement('style');\n        style.appendChild(document.createTextNode(css));\n        var prependTo = getNodeToPrependTo(rootNode);\n        if (prependTo.childNodes.length > 0) {\n            prependTo.insertBefore(style, prependTo.firstChild);\n            return;\n        }\n        prependTo.appendChild(style);\n    }\n}\nexport { insertSlottedStyles as i };\n","import { r as registerInstance, h, H as Host, g as getElement } from './index-8e7faabb.js';\nimport './core-d7f0c11d.js';\nimport { c as cx, p as prefix, m as mapBreakpointPropToPrefixedClasses } from './index-a903ac51.js';\nimport { i as insertSlottedStyles } from './slotted-styles-092484c4.js';\nvar TextFieldWrapper = /** @class */ (function () {\n    function TextFieldWrapper(hostRef) {\n        registerInstance(this, hostRef);\n        /** The label text. */\n        this.label = '';\n        /** The validation state. */\n        this.state = 'none';\n        /** The message styled depending on validation state. */\n        this.message = '';\n        /** Show or hide label. For better accessibility it is recommended to show the label. */\n        this.hideLabel = false;\n    }\n    TextFieldWrapper.prototype.componentDidLoad = function () {\n        var tagName = this.element.tagName.toLowerCase();\n        var style = tagName + \" a {\\n      outline: none transparent;\\n      color: inherit;\\n      text-decoration: underline;\\n      -webkit-transition: outline-color .24s ease, color .24s ease;\\n      transition: outline-color .24s ease, color .24s ease;\\n    }\\n    \\n    \" + tagName + \" a:hover {\\n      color: #d5001c;\\n    }\\n    \\n    \" + tagName + \" a:focus {\\n      outline: 2px solid #00d5b9;\\n      outline-offset: 1px;\\n    }\\n    \\n    \" + tagName + \" input {\\n      border-color: #626669 !important;\\n      border-width: 1px !important;\\n      padding: calc(.75rem - 1px) !important;\\n    }\\n    \\n    \" + tagName + \"[state='success'] input {\\n      border-color: #13d246 !important;\\n      border-width: 2px !important;\\n      padding: calc(.75rem - 2px) !important;\\n    }\\n    \\n    \" + tagName + \"[state='error'] input {\\n      border-color: #e00000 !important;\\n      border-width: 2px !important;\\n      padding: calc(.75rem - 2px) !important;\\n    }\\n    \\n    \" + tagName + \" input[type='number']::-webkit-outer-spin-button {\\n      appearance: none !important;\\n      -webkit-appearance: none !important;\\n    }\\n    \\n    \" + tagName + \" input[type='number']::-webkit-inner-spin-button {\\n      appearance: none !important;\\n      -webkit-appearance: none !important;\\n    }\\n    \";\n        insertSlottedStyles(this.element, style);\n    };\n    TextFieldWrapper.prototype.render = function () {\n        var labelClasses = cx(prefix('text-field-wrapper__label'));\n        var labelTextClasses = cx(prefix('text-field-wrapper__label-text'), mapBreakpointPropToPrefixedClasses('text-field-wrapper__label-text-', this.hideLabel, ['hidden', 'visible']));\n        var messageClasses = cx(prefix('text-field-wrapper__message'));\n        return (h(Host, null, h(\"label\", { class: labelClasses }, h(\"p-text\", { class: labelTextClasses, tag: 'span' }, this.label ? this.label : h(\"slot\", { name: 'label' })), h(\"slot\", null)), this.showMessage(this.state) &&\n            h(\"p-text\", { class: messageClasses, color: this.getStateColor(this.state) }, this.message ? this.message : h(\"slot\", { name: 'message' }))));\n    };\n    TextFieldWrapper.prototype.showMessage = function (state) {\n        return ['success', 'error'].includes(state);\n    };\n    TextFieldWrapper.prototype.getStateColor = function (state) {\n        switch (state) {\n            case 'success':\n                return 'notification-success';\n            case 'error':\n                return 'notification-error';\n            default:\n                return 'default';\n        }\n    };\n    Object.defineProperty(TextFieldWrapper.prototype, \"element\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextFieldWrapper, \"style\", {\n        get: function () { return \":host{display:block}::slotted(input){width:100%!important;display:block!important;outline:none transparent!important;-webkit-appearance:none!important;-moz-appearance:none!important;appearance:none!important;-webkit-box-sizing:border-box!important;box-sizing:border-box!important;border-style:solid!important;background-color:#fff!important;font-family:Porsche Next,Arial Narrow,Arial,sans-serif!important;font-weight:400!important;font-size:1rem!important;line-height:1.5!important;color:#000!important;-webkit-transition:outline-color .24s ease,border-color .24s ease,color .24s ease!important;transition:outline-color .24s ease,border-color .24s ease,color .24s ease!important}::slotted(input:focus){outline:2px solid #00d5b9!important;outline-offset:1px!important}::slotted(input:-moz-read-only:focus){outline:none!important}::slotted(input:read-only:focus){outline:none!important}::slotted(input:-moz-read-only){background-color:#fff!important;border:0!important;color:#626669!important;padding:.75rem 0!important}::slotted(input:read-only){background-color:#fff!important;border:0!important;color:#626669!important;padding:.75rem 0!important}::slotted(input:disabled){background-color:#f2f2f2!important;border-color:#f2f2f2!important;color:#96989a!important;cursor:not-allowed!important}.p-text-field-wrapper__label{position:relative;display:block}.p-text-field-wrapper__label-text--visible{position:static;width:100%;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}\\@media (min-width:480px){.p-text-field-wrapper__label-text--visible-xs{position:static;width:100%;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-xs{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width:760px){.p-text-field-wrapper__label-text--visible-s{position:static;width:100%;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-s{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width:1000px){.p-text-field-wrapper__label-text--visible-m{position:static;width:100%;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-m{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width:1300px){.p-text-field-wrapper__label-text--visible-l{position:static;width:100%;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-l{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width:1760px){.p-text-field-wrapper__label-text--visible-xl{position:static;width:100%;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-xl{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}.p-text-field-wrapper__message{margin-top:.25rem}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return TextFieldWrapper;\n}());\nexport { TextFieldWrapper as p_text_field_wrapper };\n"],"sourceRoot":""}