{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/slotted-styles-092484c4.js","webpack:///../components-js/dist/esm-es5/p-icon_2.entry.js"],"names":["elementStyles","Map","getElementMap","element","tagName","map","get","undefined","newMap","set","getNodeToPrependTo","rootNode","document","head","insertSlottedStyles","css","getRootNode","elementMap","style","createElement","appendChild","createTextNode","prependTo","childNodes","length","insertBefore","firstChild","isStr","val","validateContent","svgContent","div","innerHTML","i","nodeName","toLowerCase","removeChild","svgElm","firstElementChild","setAttribute","isValid","elm","nodeType","attributes","value","indexOf","iconContent","requests","getSvgContent","url","req","fetch","then","rsp","ok","text","Icon","hostRef","registerInstance","this","name","variant","color","size","lazy","theme","isVisible","prototype","connectedCallback","_this","waitUntilVisible","el","loadIcon","disconnectedCallback","io","disconnect","url_1","getSource","has","source","console","warn","render","iconClasses","cx","prefix","h","Host","role","class","rootMargin","cb","window","IntersectionObserver","io_1","data","isIntersecting","observe","Object","defineProperty","getElement","enumerable","configurable","Text","tag","weight","align","ellipsis","componentDidLoad","transitionListener","textTag","lineHeight","calcLineHeightForElement","TagType","textClasses","mapBreakpointPropToPrefixedClasses","ref"],"mappings":"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","file":"js/chunk-daf57e2e.26b4af1d.js","sourcesContent":["var elementStyles = new Map();\nfunction getElementMap(element) {\n    var tagName = element.tagName;\n    var map = elementStyles.get(tagName);\n    if (map !== undefined) {\n        return map;\n    }\n    var newMap = new Map();\n    elementStyles.set(tagName, newMap);\n    return newMap;\n}\nfunction getNodeToPrependTo(rootNode) {\n    if (rootNode === document) {\n        return rootNode.head;\n    }\n    return rootNode;\n}\n/**\n * Adds an inheritable style for slotted content.\n * @param element\n * @param css - Make sure that css selectors are always in context of element (make sure that\n * it's created dynamically by e.g. `element.tagName.toLowerCase()`), e.g. `a:focus p-link-pure {…}`. Something like\n * providing only `a {…}` would cause unscoped global styling.\n * @returns void\n */\nfunction insertSlottedStyles(element, css) {\n    var rootNode = element.getRootNode();\n    var elementMap = getElementMap(element);\n    if (elementMap.get(rootNode) === undefined) {\n        elementMap.set(rootNode, true);\n        var style = document.createElement('style');\n        style.appendChild(document.createTextNode(css));\n        var prependTo = getNodeToPrependTo(rootNode);\n        if (prependTo.childNodes.length > 0) {\n            prependTo.insertBefore(style, prependTo.firstChild);\n            return;\n        }\n        prependTo.appendChild(style);\n    }\n}\nexport { insertSlottedStyles as i };\n","import { r as registerInstance, h, H as Host, g as getElement } from './index-8e7faabb.js';\nimport './core-d7f0c11d.js';\nimport { c as cx, p as prefix, t as transitionListener, m as mapBreakpointPropToPrefixedClasses, a as calcLineHeightForElement } from './index-a903ac51.js';\nimport { i as insertSlottedStyles } from './slotted-styles-092484c4.js';\nvar isStr = function (val) { return typeof val === 'string'; };\nvar validateContent = function (svgContent) {\n    if (svgContent) {\n        var div = document.createElement('div');\n        div.innerHTML = svgContent;\n        // setup this way to ensure it works on our buddy IE\n        for (var i = div.childNodes.length - 1; i >= 0; i--) {\n            if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n                div.removeChild(div.childNodes[i]);\n            }\n        }\n        // must only have 1 root element\n        var svgElm = div.firstElementChild;\n        if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n            // fix IE11 focus SVG elements on tab\n            svgElm.setAttribute('focusable', 'false');\n            // Hide from Screen Readers\n            svgElm.setAttribute('aria-hidden', 'true');\n            // root element must be an svg\n            // lets double check we've got valid elements\n            // do not allow scripts\n            if (isValid(svgElm)) {\n                return div.innerHTML;\n            }\n        }\n    }\n    return '';\n};\nvar isValid = function (elm) {\n    if (elm.nodeType === 1) {\n        if (elm.nodeName.toLowerCase() === 'script') {\n            return false;\n        }\n        for (var i = 0; i < elm.attributes.length; i++) {\n            var val = elm.attributes[i].value;\n            if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\n                return false;\n            }\n        }\n        for (var i = 0; i < elm.childNodes.length; i++) {\n            if (!isValid(elm.childNodes[i])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nvar iconContent = new Map();\nvar requests = new Map();\nvar getSvgContent = function (url) {\n    // see if we already have a request for this url\n    var req = requests.get(url);\n    if (!req) {\n        // we don't already have a request\n        req = fetch(url).then(function (rsp) {\n            if (rsp.ok) {\n                return rsp.text().then(function (svgContent) {\n                    iconContent.set(url, validateContent(svgContent));\n                });\n            }\n            iconContent.set(url, '');\n        });\n        // cache for the same requests\n        requests.set(url, req);\n    }\n    return req;\n};\nvar Icon = /** @class */ (function () {\n    function Icon(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Specifies which icon to use.\n         */\n        this.name = 'arrow-head-right';\n        /**\n         * @internal\n         * Specifies which icon variant to use.\n         */\n        this.variant = 'outline';\n        /** Basic color variations depending on theme property. */\n        this.color = 'default';\n        /**\n         * The size of the icon.\n         */\n        this.size = 'small';\n        /**\n         * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n         * Default, `false`.\n         */\n        this.lazy = false;\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n        this.isVisible = false;\n    }\n    Icon.prototype.connectedCallback = function () {\n        var _this = this;\n        // purposely do not return the promise here because loading\n        // the svg file should not hold up loading the app\n        // only load the svg if it's visible\n        this.waitUntilVisible(this.el, '50px', function () {\n            _this.isVisible = true;\n            _this.loadIcon();\n        });\n    };\n    Icon.prototype.disconnectedCallback = function () {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    };\n    Icon.prototype.loadIcon = function () {\n        var _this = this;\n        if (this.isVisible) {\n            var url_1 = this.getSource();\n            if (iconContent.has(url_1)) {\n                // sync if it's already loaded\n                this.svgContent = iconContent.get(url_1);\n            }\n            else {\n                // async if it hasn't been loaded\n                getSvgContent(url_1).then(function () { return _this.svgContent = iconContent.get(url_1); });\n            }\n        }\n    };\n    Icon.prototype.getSource = function () {\n        if (this.name && !this.source) {\n            return \"https://cdn.ui.porsche.com/porsche-icons/v2/\" + this.variant + \"/\" + this.name + \".svg\";\n        }\n        if (this.source) {\n            return this.source;\n        }\n        console.warn('Please provide either an name property or a source property!');\n        return '';\n    };\n    Icon.prototype.render = function () {\n        var iconClasses = cx(prefix('icon'), prefix(\"icon--size-\" + this.size), prefix(\"icon--color-\" + this.color), this.color !== 'inherit' && prefix(\"icon--theme-\" + this.theme));\n        return (h(Host, { role: 'img' }, ((this.svgContent)\n            ? h(\"i\", { class: iconClasses, innerHTML: this.svgContent })\n            : h(\"i\", { class: iconClasses }))));\n    };\n    Icon.prototype.waitUntilVisible = function (el, rootMargin, cb) {\n        var _this = this;\n        if (this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n            var io_1 = this.io = new window.IntersectionObserver(function (data) {\n                if (data[0].isIntersecting) {\n                    io_1.disconnect();\n                    _this.io = undefined;\n                    cb();\n                }\n            }, { rootMargin: rootMargin });\n            io_1.observe(el);\n        }\n        else {\n            // browser doesn't support IntersectionObserver\n            // so just fallback to always show it\n            cb();\n        }\n    };\n    Object.defineProperty(Icon.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Icon, \"watchers\", {\n        get: function () {\n            return {\n                \"source\": [\"loadIcon\"],\n                \"name\": [\"loadIcon\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Icon, \"style\", {\n        get: function () { return \":host{display:-ms-inline-flexbox;display:inline-flex;vertical-align:top}.p-icon{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0;margin:0;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}.p-icon,.p-icon--size-small{width:1.5rem;height:1.5rem}.p-icon--size-medium{width:2.25rem;height:2.25rem}.p-icon--size-large{width:3rem;height:3rem}.p-icon--size-inherit{width:inherit;height:inherit}.p-icon--color-brand.p-icon--theme-dark,.p-icon--color-brand.p-icon--theme-light{fill:#d5001c}.p-icon--color-default.p-icon--theme-light{fill:#000}.p-icon--color-default.p-icon--theme-dark{fill:#fff}.p-icon--color-neutral-contrast-high.p-icon--theme-light{fill:#323639}.p-icon--color-neutral-contrast-high.p-icon--theme-dark{fill:#e3e4e5}.p-icon--color-neutral-contrast-medium.p-icon--theme-light{fill:#626669}.p-icon--color-neutral-contrast-medium.p-icon--theme-dark{fill:#b0b1b2}.p-icon--color-neutral-contrast-low.p-icon--theme-light{fill:#c9cacb}.p-icon--color-neutral-contrast-low.p-icon--theme-dark{fill:#4a4e51}.p-icon--color-notification-success.p-icon--theme-dark,.p-icon--color-notification-success.p-icon--theme-light{fill:#13d246}.p-icon--color-notification-warning.p-icon--theme-dark,.p-icon--color-notification-warning.p-icon--theme-light{fill:#e2b236}.p-icon--color-notification-error.p-icon--theme-dark,.p-icon--color-notification-error.p-icon--theme-light{fill:#e00000}.p-icon--color-inherit{fill:currentColor}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Icon;\n}());\nvar Text = /** @class */ (function () {\n    function Text(hostRef) {\n        registerInstance(this, hostRef);\n        /** Sets a custom HTML tag depending of the usage of the text component. */\n        this.tag = 'p';\n        /** Size of the text. Also defines the size for specific breakpoints, like {base: \"small\", l: \"medium\"}. You always need to provide a base value when doing this. */\n        this.size = 'small';\n        /** The weight of the text. */\n        this.weight = 'regular';\n        /** Text alignment of the component. */\n        this.align = 'left';\n        /** Basic text color variations depending on theme property. */\n        this.color = 'default';\n        /** Adds an ellipsis to a single line of text if it overflows. */\n        this.ellipsis = false;\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n    }\n    Text.prototype.componentDidLoad = function () {\n        var _this = this;\n        var tagName = this.element.tagName.toLowerCase();\n        var style = tagName + \" a {\\n      outline: none transparent;\\n      color: inherit;\\n      text-decoration: underline;\\n      -webkit-transition: outline-color .24s ease, color .24s ease;\\n      transition: outline-color .24s ease, color .24s ease;\\n    }\\n    \\n    \" + tagName + \" a:hover {\\n      color: #d5001c;\\n    }\\n    \\n    \" + tagName + \" a:focus {\\n      outline: 2px solid #00d5b9;\\n      outline-offset: 1px;\\n    }\";\n        insertSlottedStyles(this.element, style);\n        transitionListener(this.textTag, 'font-size', function () {\n            _this.textTag.style.lineHeight = \"\" + calcLineHeightForElement(_this.textTag);\n        });\n    };\n    Text.prototype.render = function () {\n        var _this = this;\n        var TagType = this.tag;\n        var textClasses = cx(prefix('text'), mapBreakpointPropToPrefixedClasses('text--size', this.size), prefix(\"text--weight-\" + this.weight), prefix(\"text--align-\" + this.align), prefix(\"text--color-\" + this.color), this.ellipsis && prefix('text--ellipsis'), this.color !== 'inherit' && prefix(\"text--theme-\" + this.theme));\n        return (h(TagType, { class: textClasses, ref: function (el) { return _this.textTag = el; } }, h(\"slot\", null)));\n    };\n    Object.defineProperty(Text.prototype, \"element\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Text, \"style\", {\n        get: function () { return \":host{display:block}.p-text{font-size:1rem;line-height:1.5;font-family:Porsche Next,Arial Narrow,Arial,sans-serif;font-weight:400;padding:0;margin:0;list-style-type:none;display:inherit;-webkit-transition:color .24s ease,font-size 1e-8s linear;transition:color .24s ease,font-size 1e-8s linear}.p-text--size-x-small{font-size:.75rem;line-height:1.6666666667}.p-text--size-small{font-size:1rem;line-height:1.5}.p-text--size-medium{font-size:1.5rem;line-height:1.5}.p-text--size-large{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit{font-size:inherit;line-height:inherit}\\@media (min-width:480px){.p-text--size-x-small-xs{font-size:.75rem;line-height:1.6666666667}.p-text--size-small-xs{font-size:1rem;line-height:1.5}.p-text--size-medium-xs{font-size:1.5rem;line-height:1.5}.p-text--size-large-xs{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large-xs{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit-xs{font-size:inherit;line-height:inherit}}\\@media (min-width:760px){.p-text--size-x-small-s{font-size:.75rem;line-height:1.6666666667}.p-text--size-small-s{font-size:1rem;line-height:1.5}.p-text--size-medium-s{font-size:1.5rem;line-height:1.5}.p-text--size-large-s{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large-s{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit-s{font-size:inherit;line-height:inherit}}\\@media (min-width:1000px){.p-text--size-x-small-m{font-size:.75rem;line-height:1.6666666667}.p-text--size-small-m{font-size:1rem;line-height:1.5}.p-text--size-medium-m{font-size:1.5rem;line-height:1.5}.p-text--size-large-m{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large-m{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit-m{font-size:inherit;line-height:inherit}}\\@media (min-width:1300px){.p-text--size-x-small-l{font-size:.75rem;line-height:1.6666666667}.p-text--size-small-l{font-size:1rem;line-height:1.5}.p-text--size-medium-l{font-size:1.5rem;line-height:1.5}.p-text--size-large-l{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large-l{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit-l{font-size:inherit;line-height:inherit}}\\@media (min-width:1760px){.p-text--size-x-small-xl{font-size:.75rem;line-height:1.6666666667}.p-text--size-small-xl{font-size:1rem;line-height:1.5}.p-text--size-medium-xl{font-size:1.5rem;line-height:1.5}.p-text--size-large-xl{font-size:2.25rem;line-height:1.3333333333}.p-text--size-x-large-xl{font-size:3.25rem;line-height:1.2307692308}.p-text--size-inherit-xl{font-size:inherit;line-height:inherit}}.p-text--weight-thin{font-weight:100}.p-text--weight-regular{font-weight:400}.p-text--weight-bold{font-weight:700}.p-text--align-left{text-align:left}.p-text--align-center{text-align:center}.p-text--align-right{text-align:right}.p-text--color-brand.p-text--theme-dark,.p-text--color-brand.p-text--theme-light{color:#d5001c}.p-text--color-default.p-text--theme-light{color:#000}.p-text--color-default.p-text--theme-dark{color:#fff}.p-text--color-neutral-contrast-high.p-text--theme-light{color:#323639}.p-text--color-neutral-contrast-high.p-text--theme-dark{color:#e3e4e5}.p-text--color-neutral-contrast-medium.p-text--theme-light{color:#626669}.p-text--color-neutral-contrast-medium.p-text--theme-dark{color:#b0b1b2}.p-text--color-neutral-contrast-low.p-text--theme-light{color:#c9cacb}.p-text--color-neutral-contrast-low.p-text--theme-dark{color:#4a4e51}.p-text--color-notification-success.p-text--theme-dark,.p-text--color-notification-success.p-text--theme-light{color:#13d246}.p-text--color-notification-warning.p-text--theme-dark,.p-text--color-notification-warning.p-text--theme-light{color:#e2b236}.p-text--color-notification-error.p-text--theme-dark,.p-text--color-notification-error.p-text--theme-light{color:#e00000}.p-text--color-inherit{color:inherit}.p-text--ellipsis{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Text;\n}());\nexport { Icon as p_icon, Text as p_text };\n"],"sourceRoot":""}