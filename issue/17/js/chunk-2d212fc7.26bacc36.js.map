{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/p-text-field-wrapper.entry.js"],"names":["TextFieldWrapper","hostRef","registerInstance","this","label","state","message","hideLabel","isPasswordToggleable","showPassword","prototype","componentDidLoad","setInput","setState","bindStateListener","tagName","element","toLowerCase","style","insertSlottedStyles","updatePasswordToggleable","render","_this","wrapperClasses","cx","prefix","labelClasses","labelTextClasses","mapBreakpointPropToPrefixedClasses","inputContainerClasses","disabled","readonly","buttonClasses","messageClasses","h","Host","class","tag","onClick","focusOnInput","name","type","togglePassword","color","isMessageVisible","Object","defineProperty","get","querySelector","enumerable","configurable","includes","isMessageSlotDefined","input","readOnly","focus","transitionListener","cssText","getElement"],"mappings":"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","file":"js/chunk-2d212fc7.26bacc36.js","sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-ce7d6a41.js';\nimport './core-6e33369f.js';\nimport { i as insertSlottedStyles, c as cx, p as prefix, m as mapBreakpointPropToPrefixedClasses, t as transitionListener } from './index-ace62996.js';\nvar TextFieldWrapper = /** @class */ (function () {\n    function TextFieldWrapper(hostRef) {\n        registerInstance(this, hostRef);\n        /** The label text. */\n        this.label = '';\n        /** The validation state. */\n        this.state = 'none';\n        /** The message styled depending on validation state. */\n        this.message = '';\n        /** Show or hide label. For better accessibility it is recommended to show the label. */\n        this.hideLabel = false;\n        this.isPasswordToggleable = false;\n        this.showPassword = false;\n    }\n    TextFieldWrapper.prototype.componentDidLoad = function () {\n        this.setInput();\n        this.setState();\n        this.bindStateListener();\n        var tagName = this.element.tagName.toLowerCase();\n        var style = tagName + \" a {\\n      outline: none transparent;\\n      color: inherit;\\n      text-decoration: underline;\\n      -webkit-transition: outline-color .24s ease, color .24s ease;\\n      transition: outline-color .24s ease, color .24s ease;\\n    }\\n\\n    \" + tagName + \" a:hover {\\n      color: #d5001c;\\n    }\\n\\n    \" + tagName + \" a:focus {\\n      outline: 2px solid #00d5b9;\\n      outline-offset: 1px;\\n    }\\n\\n    \" + tagName + \" input[type='number']::-webkit-outer-spin-button {\\n      appearance: none !important;\\n      -webkit-appearance: none !important;\\n    }\\n\\n    \" + tagName + \" input[type='number']::-webkit-inner-spin-button {\\n      appearance: none !important;\\n      -webkit-appearance: none !important;\\n    }\\n    \";\n        insertSlottedStyles(this.element, style);\n        this.updatePasswordToggleable();\n    };\n    TextFieldWrapper.prototype.render = function () {\n        var _this = this;\n        var wrapperClasses = cx(prefix('text-field-wrapper__wrapper'));\n        var labelClasses = cx(prefix('text-field-wrapper__label'));\n        var labelTextClasses = cx(prefix('text-field-wrapper__label-text'), mapBreakpointPropToPrefixedClasses('text-field-wrapper__label-text-', this.hideLabel, ['hidden', 'visible']));\n        var inputContainerClasses = cx(prefix('text-field-wrapper__container'), prefix(\"text-field-wrapper__container--\" + this.state), this.disabled && prefix('text-field-wrapper__container--disabled'), this.readonly && prefix('text-field-wrapper__container--readonly'));\n        var buttonClasses = cx(prefix('text-field-wrapper__button'));\n        var messageClasses = cx(prefix('text-field-wrapper__message'), prefix(\"text-field-wrapper__message--\" + this.state));\n        return (h(Host, null, h(\"span\", { class: wrapperClasses }, h(\"label\", { class: labelClasses }, h(\"p-text\", { class: labelTextClasses, tag: 'span', onClick: function () { return _this.focusOnInput(); } }, this.label ? this.label : h(\"span\", null, h(\"slot\", { name: 'label' }))), h(\"span\", { class: inputContainerClasses }, h(\"slot\", null))), this.isPasswordToggleable &&\n            h(\"button\", { type: 'button', class: buttonClasses, onClick: function () { return _this.togglePassword(); } }, h(\"p-icon\", { name: this.showPassword ? 'view-off' : 'view', color: 'inherit' }))), this.isMessageVisible &&\n            h(\"p-text\", { class: messageClasses, color: 'inherit' }, this.message ? this.message : h(\"span\", null, h(\"slot\", { name: 'message' })))));\n    };\n    Object.defineProperty(TextFieldWrapper.prototype, \"isMessageSlotDefined\", {\n        get: function () {\n            return !!this.element.querySelector('span[slot=\"message\"]');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextFieldWrapper.prototype, \"isMessageVisible\", {\n        get: function () {\n            return ['success', 'error'].includes(this.state) && (!!this.message || this.isMessageSlotDefined);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextFieldWrapper.prototype.setInput = function () {\n        this.input = this.element.querySelector('input');\n    };\n    TextFieldWrapper.prototype.setState = function () {\n        this.disabled = this.input.disabled;\n        this.readonly = this.input.readOnly;\n    };\n    TextFieldWrapper.prototype.focusOnInput = function () {\n        this.input.focus();\n    };\n    TextFieldWrapper.prototype.bindStateListener = function () {\n        var _this = this;\n        transitionListener(this.input, 'border-top-color', function () {\n            _this.setState();\n        });\n    };\n    TextFieldWrapper.prototype.updatePasswordToggleable = function () {\n        var input = this.element.querySelector('input');\n        this.isPasswordToggleable = input.type === 'password';\n        if (this.isPasswordToggleable) {\n            input.style.cssText = 'padding-right: 3rem !important';\n        }\n    };\n    TextFieldWrapper.prototype.togglePassword = function () {\n        var input = this.element.querySelector('input');\n        input.type === 'password' ? input.type = 'text' : input.type = 'password';\n        this.showPassword = !this.showPassword;\n        this.focusOnInput();\n    };\n    Object.defineProperty(TextFieldWrapper.prototype, \"element\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextFieldWrapper, \"style\", {\n        get: function () { return \":host{display:block}::slotted(input){width:100%!important;height:2.75rem!important;display:block!important;padding:10px!important;margin:0!important;outline:none transparent!important;-webkit-appearance:none!important;-moz-appearance:none!important;appearance:none!important;-webkit-box-sizing:border-box!important;box-sizing:border-box!important;border-width:0!important;border-top-color:transparent!important;background-color:transparent!important;opacity:1!important;font-family:Porsche Next,Arial Narrow,Arial,sans-serif!important;font-weight:400!important;font-size:1rem!important;line-height:1.5!important;text-indent:0!important;color:#000!important;-webkit-transition:outline-color .24s ease,color .24s ease,border-top-color 1e-8s linear!important;transition:outline-color .24s ease,color .24s ease,border-top-color 1e-8s linear!important}::slotted(input:focus){outline:2px solid #00d5b9!important;outline-offset:3px!important}::slotted(input:-moz-read-only:focus){outline:none!important}::slotted(input:read-only:focus){outline:none!important}::slotted(input:not(:disabled):-moz-read-only){border-top-color:#f2f2f2!important;color:#626669!important}::slotted(input:not(:disabled):read-only){border-top-color:#f2f2f2!important;color:#626669!important}::slotted(input:disabled){border-top-color:#96989a!important;color:#96989a!important;cursor:not-allowed!important}.p-text-field-wrapper__wrapper{position:relative;display:block}.p-text-field-wrapper__label{display:block}.p-text-field-wrapper__label-text{display:inline-block}.p-text-field-wrapper__label-text--visible{position:static;width:auto;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}\\@media (min-width:480px){.p-text-field-wrapper__label-text--visible-xs{position:static;width:auto;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-xs{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width:760px){.p-text-field-wrapper__label-text--visible-s{position:static;width:auto;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-s{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width:1000px){.p-text-field-wrapper__label-text--visible-m{position:static;width:auto;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-m{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width:1300px){.p-text-field-wrapper__label-text--visible-l{position:static;width:auto;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-l{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}\\@media (min-width:1760px){.p-text-field-wrapper__label-text--visible-xl{position:static;width:auto;height:auto;margin:0 0 .25rem 0;padding:0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-xl{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}.p-text-field-wrapper__container{display:block;background-color:#fff;border:1px solid #000;padding:1px;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-transition:border-color .24s ease,background-color .24s ease;transition:border-color .24s ease,background-color .24s ease}.p-text-field-wrapper__container--disabled{border-color:#96989a;background-color:#fff}.p-text-field-wrapper__container--readonly{border-color:#f2f2f2;background-color:#f2f2f2}.p-text-field-wrapper__container--success{border-color:#13d246;border-width:2px;padding:0}.p-text-field-wrapper__container--error{border-color:#e00000;border-width:2px;padding:0}.p-text-field-wrapper__message{margin-top:.25rem;color:#000;-webkit-transition:color .24s ease;transition:color .24s ease}.p-text-field-wrapper__message--success{color:#13d246}.p-text-field-wrapper__message--error{color:#e00000}.p-text-field-wrapper__message--none{color:#000}.p-text-field-wrapper__button{position:absolute;bottom:0;right:0;margin:0;width:3rem;height:3rem;padding:.75rem;-webkit-box-sizing:border-box;box-sizing:border-box;outline:none transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;text-decoration:none;background:transparent;cursor:pointer;color:#000;-webkit-transition:color .24s ease;transition:color .24s ease}.p-text-field-wrapper__button::-moz-focus-inner{border:0}.p-text-field-wrapper__button:active,.p-text-field-wrapper__button:hover{color:#d5001c}.p-text-field-wrapper__button:focus{color:#00d5b9}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return TextFieldWrapper;\n}());\nexport { TextFieldWrapper as p_text_field_wrapper };\n"],"sourceRoot":""}