{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/index-45be8764.js","webpack:///../components-js/dist/esm-es5/p-text-list.entry.js"],"names":["classnames","createCommonjsModule","module","hasOwn","classes","i","arguments","arg","argType","Array","inner","classNames","window","textListCss","TextList","registerInstance","this","TagType","listType","textListClasses","prefix","isNestedList","h","nested","role","class","Object","get","host","closest","enumerable","configurable","getElement"],"mappings":"wLACIA,EAAaC,gBAAqB,SAAUC;;;;;;CAO3C,WACG,IAAIC,EAAS,GAAb,eACA,aAEI,IADA,IAAIC,EAAJ,GACSC,EAAT,EAAgBA,EAAIC,UAApB,OAAsCD,IAAK,CACvC,IAAIE,EAAMD,UAAV,GACA,MAEA,IAAIE,EAAU,OAAH,OAAG,CAAd,GACA,GAAIA,cAAJ,WAA4BA,EACxBJ,eAEC,GAAIK,kBAAsBF,EAA1B,OAAsC,CACvC,IAAIG,EAAQC,aAAZ,GACA,GACIP,eAGH,cAAII,EACL,IAAK,IAAL,OACQL,aAAyBI,EAA7B,IACIH,WAKhB,OAAOA,OAAP,KAEAF,EAAJ,SACIS,YACAT,aAGAU,qBAjCP,O,kCCRL,+EAEIC,EAAJ,4RACIC,EAA0B,WAC1B,cACIC,eAAiBC,KAAjBD,GAEAC,KAAA,qBAEAA,KAAA,qBAEAA,KAAA,cAmBJ,OAjBAF,mBAA4B,WACxB,IAAIG,EAA4B,cAAlBD,KAAKE,SAA2B,KAA9C,KACIC,EAAkBnB,eAAWoB,eAAD,aAAsBA,eAAO,cAAgBJ,KAA7C,UAA6DI,eAAO,oBAAsBJ,KAA1F,OAAuGA,KAAKK,cAAgBD,eAA5J,sBACA,OAAQE,eAAE,EAAD,KAAO,CAAEC,OAAQP,KAAKK,cAAgBC,eAAEL,EAAS,CAAEO,KAAF,OAAgBC,MAAON,GAAmBG,eAAE,OAAtG,SAEJI,sBAAsBZ,EAAtBY,yBAA0D,CACtDC,IAAK,WACD,QAASX,KAAKY,KAAKC,QAAQT,eAA3B,oBAEJU,YAJsD,EAKtDC,cAAc,IAElBL,sBAAsBZ,EAAtBY,iBAAkD,CAC9CC,IAAK,WAAc,OAAOK,eAAP,OACnBF,YAF8C,EAG9CC,cAAc,IAElB,EA3B0B,GA6B9BjB","file":"js/chunk-2c476dc6.eedb6ace.js","sourcesContent":["import { d as createCommonjsModule } from './breakpointCustomizable-063d6106.js';\nvar classnames = createCommonjsModule(function (module) {\n    /*!\n      Copyright (c) 2017 Jed Watson.\n      Licensed under the MIT License (MIT), see\n      http://jedwatson.github.io/classnames\n    */\n    /* global define */\n    (function () {\n        var hasOwn = {}.hasOwnProperty;\n        function classNames() {\n            var classes = [];\n            for (var i = 0; i < arguments.length; i++) {\n                var arg = arguments[i];\n                if (!arg)\n                    continue;\n                var argType = typeof arg;\n                if (argType === 'string' || argType === 'number') {\n                    classes.push(arg);\n                }\n                else if (Array.isArray(arg) && arg.length) {\n                    var inner = classNames.apply(null, arg);\n                    if (inner) {\n                        classes.push(inner);\n                    }\n                }\n                else if (argType === 'object') {\n                    for (var key in arg) {\n                        if (hasOwn.call(arg, key) && arg[key]) {\n                            classes.push(key);\n                        }\n                    }\n                }\n            }\n            return classes.join(' ');\n        }\n        if (module.exports) {\n            classNames.default = classNames;\n            module.exports = classNames;\n        }\n        else {\n            window.classNames = classNames;\n        }\n    }());\n});\nexport { classnames as c };\n","import { r as registerInstance, c as prefix, h, H as Host, g as getElement } from './breakpointCustomizable-063d6106.js';\nimport { c as classnames } from './index-45be8764.js';\nvar textListCss = \":host{display:block;counter-reset:section !important}.p-text-list{font-size:1rem;line-height:1.5;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;font-weight:400;display:block;padding:0;margin:0}.p-text-list--theme-light{color:#000}.p-text-list--theme-dark{color:#fff}\";\nvar TextList = /** @class */ (function () {\n    function TextList(hostRef) {\n        registerInstance(this, hostRef);\n        /** The type of the text list. */\n        this.listType = 'unordered';\n        /** The list style type of an ordered list. */\n        this.orderType = 'numbered';\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n    }\n    TextList.prototype.render = function () {\n        var TagType = this.listType === 'unordered' ? 'ul' : 'ol';\n        var textListClasses = classnames(prefix('text-list'), prefix(\"text-list--\" + this.listType), prefix(\"text-list--theme-\" + this.theme), this.isNestedList && prefix('text-list--nested'));\n        return (h(Host, { nested: this.isNestedList }, h(TagType, { role: 'list', class: textListClasses }, h(\"slot\", null))));\n    };\n    Object.defineProperty(TextList.prototype, \"isNestedList\", {\n        get: function () {\n            return !!this.host.closest(prefix('text-list-item'));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextList.prototype, \"host\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    return TextList;\n}());\nTextList.style = textListCss;\nexport { TextList as p_text_list };\n"],"sourceRoot":""}