"use strict"
function _classCallCheck(e, n) {
    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
}
for (
    var _createClass = (function() {
            function e(e, n) {
                for (var t = 0; t < n.length; t++) {
                    var l = n[t]
                    ;(l.enumerable = l.enumerable || !1),
                        (l.configurable = !0),
                        ("value" in l) && (l.writable = !0),
                        Object.defineProperty(e, l.key, l)
                }
            }
            return function(n, t, l) {
                return t && e(n.prototype, t), l && e(n, l), n
            }
        })(),
        PolyfillPlaceholderShown = (function() {
            function e(n) {
                _classCallCheck(this, e),
                    this.isPlaceholderShownSupported() || ((this.element = n), this.init(), this.events())
            }
            return (
                _createClass(e, [
                    {
                        key: "init",
                        value: function() {
                            var e = this
                            setTimeout(function() {
                                e.addRemovePlaceholderShownClass()
                            })
                        }
                    },
                    {
                        key: "events",
                        value: function() {
                            var e = this
                            this.element.addEventListener("change", function(n) {
                                return e.addRemovePlaceholderShownClass(n)
                            }),
                                this.element.addEventListener("keyup", function(n) {
                                    return e.addRemovePlaceholderShownClass(n)
                                }),
                                this.element.addEventListener("focus", function(n) {
                                    return e.addRemovePlaceholderShownClass(n)
                                })
                        }
                    },
                    {
                        key: "addRemovePlaceholderShownClass",
                        value: function() {
                            this.element.classList[this.element.value ? "add" : "remove"]("placeholder-not-shown")
                        }
                    },
                    {
                        key: "isPlaceholderShownSupported",
                        value: function() {
                            try {
                                return document.querySelector("div:placeholder-shown"), !0
                            } catch (e) {
                                return !1
                            }
                        }
                    }
                ]),
                e
            )
        })(),
        elements = document.querySelectorAll("[placeholder]"),
        i = 0;
    i < elements.length;
    i++
)
    new PolyfillPlaceholderShown(elements[i])
