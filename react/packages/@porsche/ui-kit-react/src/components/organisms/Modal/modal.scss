@import "../../../common";

$modal-max-width: 460px;
$modal-max-width-full: 1264px;

.#{$global-class-prefix}modal {
    $bem-block: &;

    position: relative;
    display: flex;
    flex-direction: column;

    max-width: calc(100% - 2 * 24px);
    max-height: calc(100% - 2 * 48px);

    @media screen and (min-width: rem($modal-max-width) + 2 * $spacing-24) {
        max-width: $modal-max-width;
    }

    background: $white;
    outline: none;
    overflow-y: scroll;

    &__body {
        &--open {
            overflow: hidden;
        }
    }

    &__overlay {
        position: fixed;
        // overflow: auto;
        // -webkit-overflow-scrolling: touch;
        z-index: 10000;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba($black, 0.8);
    }

    &__content {
        padding: $spacing-42;
    }

    &__close-container {
        padding-top: $spacing-18;
        padding-right: $spacing-18;
        position: fixed;
        align-self: flex-end;
    }

    &__close {
        color: $grey;
        cursor: pointer;
        font-size: 18px;
    }

    &--full-width {
        max-width: calc(100% - 2 * 24px);
        max-height: calc(100% - 2 * 48px);

        @include breakpoint("s") {
            max-height: calc(100% - 2 * 24px);
        }

        @media screen and (min-width: rem($modal-max-width-full) + 2 * $spacing-24) {
            max-width: $modal-max-width-full;
        }

        & #{$bem-block}__content {
            @include breakpoint("s") {
                padding: $spacing-60;
            }
        }

        & #{$bem-block}__close-container {
            @include breakpoint("s") {
                padding-top: $spacing-30;
                padding-right: $spacing-30;
            }
        }
    }
}

.#{$global-class-prefix}modal__portal > div {
    opacity: 0;
}

.#{$global-class-prefix}modal__portal .ReactModal__Overlay {
    transition: opacity 100ms ease-in-out;
    &--after-open {
        opacity: 1;
    }
    &--before-close {
        opacity: 0;
    }
}
