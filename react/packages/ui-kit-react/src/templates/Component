import * as React from "react"
import cx from "classnames"

import { MetaCategorizable, ComponentMeta } from "../../../types/MetaCategorizable"
import { META, getElementType } from "../../../lib"

export interface <Component>Props {
    /** The html element type to render as. */
    as?: string

    /** Additional CSS classes. */
    className?: string

    /** Custom dom attributes. */
    customAttributes?: {[key: string]: any}
}

const defaultProps: Partial<<Component>Props> = {
}

const _meta: ComponentMeta = {
    name: "<Component>",
    type: META.TYPES.ORGANISM
}

/**
* A <Component>.
*/
export class <Component> extends React.PureComponent<<Component>Props> {
    static defaultProps: Partial<<Component>Props> = defaultProps
    static _meta: ComponentMeta = _meta

    render(): JSX.Element {
        const {
            as,
            className,
            children,
            customAttributes,
            ...rest
        } = this.props

        const ElementType = getElementType(as, "div")

        const classes = cx(
            className
        )

        return (
            <ElementType className={classes} {...customAttributes} {...rest}>
                {children}
            </ElementType>
        )
    }
}
