{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/p-text-list.entry.js"],"names":["textListCss","TextList","hostRef","registerInstance","this","listType","orderType","theme","prototype","render","TagType","textListClasses","cx","prefix","isNestedList","h","Host","nested","role","class","Object","defineProperty","get","host","closest","enumerable","configurable","getElement","style"],"mappings":"gHAAA,+EAEIA,EAAc,4RACdC,EAA0B,WAC1B,SAASA,EAASC,GACdC,eAAiBC,KAAMF,GAEvBE,KAAKC,SAAW,YAEhBD,KAAKE,UAAY,WAEjBF,KAAKG,MAAQ,QAmBjB,OAjBAN,EAASO,UAAUC,OAAS,WACxB,IAAIC,EAA4B,cAAlBN,KAAKC,SAA2B,KAAO,KACjDM,EAAkBC,eAAGC,eAAO,aAAcA,eAAO,cAAgBT,KAAKC,UAAWQ,eAAO,oBAAsBT,KAAKG,OAAQH,KAAKU,cAAgBD,eAAO,sBAC3J,OAAQE,eAAEC,OAAM,CAAEC,OAAQb,KAAKU,cAAgBC,eAAEL,EAAS,CAAEQ,KAAM,OAAQC,MAAOR,GAAmBI,eAAE,OAAQ,SAElHK,OAAOC,eAAepB,EAASO,UAAW,eAAgB,CACtDc,IAAK,WACD,QAASlB,KAAKmB,KAAKC,QAAQX,eAAO,oBAEtCY,YAAY,EACZC,cAAc,IAElBN,OAAOC,eAAepB,EAASO,UAAW,OAAQ,CAC9Cc,IAAK,WAAc,OAAOK,eAAWvB,OACrCqB,YAAY,EACZC,cAAc,IAEXzB,EA3BmB,GA6B9BA,EAAS2B,MAAQ5B","file":"js/chunk-2d2214ee.22718336.js","sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-23bc8a16.js';\nimport { c as cx, p as prefix } from './index-0a27866a.js';\nvar textListCss = \":host{display:block;counter-reset:section !important}.p-text-list{font-size:1rem;line-height:1.5;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;font-weight:400;display:block;padding:0;margin:0}.p-text-list--theme-light{color:#000}.p-text-list--theme-dark{color:#fff}\";\nvar TextList = /** @class */ (function () {\n    function TextList(hostRef) {\n        registerInstance(this, hostRef);\n        /** The type of the text list. */\n        this.listType = 'unordered';\n        /** The list style type of an ordered list. */\n        this.orderType = 'numbered';\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n    }\n    TextList.prototype.render = function () {\n        var TagType = this.listType === 'unordered' ? 'ul' : 'ol';\n        var textListClasses = cx(prefix('text-list'), prefix(\"text-list--\" + this.listType), prefix(\"text-list--theme-\" + this.theme), this.isNestedList && prefix('text-list--nested'));\n        return (h(Host, { nested: this.isNestedList }, h(TagType, { role: 'list', class: textListClasses }, h(\"slot\", null))));\n    };\n    Object.defineProperty(TextList.prototype, \"isNestedList\", {\n        get: function () {\n            return !!this.host.closest(prefix('text-list-item'));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextList.prototype, \"host\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    return TextList;\n}());\nTextList.style = textListCss;\nexport { TextList as p_text_list };\n"],"sourceRoot":""}