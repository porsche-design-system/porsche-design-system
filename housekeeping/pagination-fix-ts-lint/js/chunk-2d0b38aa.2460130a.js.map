{"version":3,"sources":["webpack:///../ui-kit-js/dist/esm-es5/p-icon_2.entry.js"],"names":["isStr","val","validateContent","svgContent","div","document","createElement","innerHTML","i","childNodes","length","nodeName","toLowerCase","removeChild","svgElm","firstElementChild","setAttribute","isValid","elm","nodeType","attributes","value","indexOf","iconContent","Map","requests","getSvgContent","url","req","get","fetch","then","rsp","ok","text","set","Icon","hostRef","registerInstance","this","name","variant","color","size","lazy","theme","isVisible","prototype","connectedCallback","_this","waitUntilVisible","el","loadIcon","disconnectedCallback","io","disconnect","undefined","url_1","getSource","has","source","console","warn","render","iconClasses","cx","prefix","h","Host","role","class","rootMargin","cb","window","IntersectionObserver","io_1","data","isIntersecting","observe","Object","defineProperty","getElement","enumerable","configurable","Text","tag","weight","align","ellipsis","TagType","textClasses","mapBreakpointPropToPrefixedClasses"],"mappings":"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","file":"js/chunk-2d0b38aa.2460130a.js","sourcesContent":["import { r as registerInstance, h, H as Host, c as getElement } from './core-b0410672.js';\nimport { c as cx, p as prefix, m as mapBreakpointPropToPrefixedClasses } from './index-6cd272d8.js';\nvar isStr = function (val) { return typeof val === 'string'; };\nvar validateContent = function (svgContent) {\n    if (svgContent) {\n        var div = document.createElement('div');\n        div.innerHTML = svgContent;\n        // setup this way to ensure it works on our buddy IE\n        for (var i = div.childNodes.length - 1; i >= 0; i--) {\n            if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n                div.removeChild(div.childNodes[i]);\n            }\n        }\n        // must only have 1 root element\n        var svgElm = div.firstElementChild;\n        if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n            // fix IE11 focus SVG elements on tab\n            svgElm.setAttribute('focusable', 'false');\n            // root element must be an svg\n            // lets double check we've got valid elements\n            // do not allow scripts\n            if (isValid(svgElm)) {\n                return div.innerHTML;\n            }\n        }\n    }\n    return '';\n};\nvar isValid = function (elm) {\n    if (elm.nodeType === 1) {\n        if (elm.nodeName.toLowerCase() === 'script') {\n            return false;\n        }\n        for (var i = 0; i < elm.attributes.length; i++) {\n            var val = elm.attributes[i].value;\n            if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\n                return false;\n            }\n        }\n        for (var i = 0; i < elm.childNodes.length; i++) {\n            if (!isValid(elm.childNodes[i])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nvar iconContent = new Map();\nvar requests = new Map();\nvar getSvgContent = function (url) {\n    // see if we already have a request for this url\n    var req = requests.get(url);\n    if (!req) {\n        // we don't already have a request\n        req = fetch(url).then(function (rsp) {\n            if (rsp.ok) {\n                return rsp.text().then(function (svgContent) {\n                    iconContent.set(url, validateContent(svgContent));\n                });\n            }\n            iconContent.set(url, '');\n        });\n        // cache for the same requests\n        requests.set(url, req);\n    }\n    return req;\n};\nvar Icon = /** @class */ (function () {\n    function Icon(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Specifies which icon to use.\n         */\n        this.name = 'arrow-head-right';\n        /**\n         * @internal\n         * Specifies which icon variant to use.\n         */\n        this.variant = 'outline';\n        /** Basic color variations depending on theme property. */\n        this.color = 'default';\n        /**\n         * The size of the icon.\n         */\n        this.size = 'small';\n        /**\n         * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n         * Default, `false`.\n         */\n        this.lazy = false;\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n        this.isVisible = false;\n    }\n    Icon.prototype.connectedCallback = function () {\n        var _this = this;\n        // purposely do not return the promise here because loading\n        // the svg file should not hold up loading the app\n        // only load the svg if it's visible\n        this.waitUntilVisible(this.el, '50px', function () {\n            _this.isVisible = true;\n            _this.loadIcon();\n        });\n    };\n    Icon.prototype.disconnectedCallback = function () {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    };\n    Icon.prototype.loadIcon = function () {\n        var _this = this;\n        if (this.isVisible) {\n            var url_1 = this.getSource();\n            if (iconContent.has(url_1)) {\n                // sync if it's already loaded\n                this.svgContent = iconContent.get(url_1);\n            }\n            else {\n                // async if it hasn't been loaded\n                getSvgContent(url_1).then(function () { return _this.svgContent = iconContent.get(url_1); });\n            }\n        }\n    };\n    Icon.prototype.getSource = function () {\n        if (this.name && !this.source) {\n            return \"https://cdn.ui.porsche.com/porsche-icons/icons/\" + this.variant + \"/\" + this.name + \".svg\";\n        }\n        if (this.source) {\n            return this.source;\n        }\n        console.warn('Please provide either an name property or a source property!');\n        return '';\n    };\n    Icon.prototype.render = function () {\n        var iconClasses = cx(prefix('icon'), prefix(\"icon--size-\" + this.size), prefix(\"icon--color-\" + this.color), this.color !== 'inherit' && prefix(\"icon--theme-\" + this.theme));\n        return (h(Host, { role: 'img' }, ((this.svgContent)\n            ? h(\"i\", { class: iconClasses, innerHTML: this.svgContent })\n            : h(\"i\", { class: iconClasses }))));\n    };\n    Icon.prototype.waitUntilVisible = function (el, rootMargin, cb) {\n        var _this = this;\n        if (this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n            var io_1 = this.io = new window.IntersectionObserver(function (data) {\n                if (data[0].isIntersecting) {\n                    io_1.disconnect();\n                    _this.io = undefined;\n                    cb();\n                }\n            }, { rootMargin: rootMargin });\n            io_1.observe(el);\n        }\n        else {\n            // browser doesn't support IntersectionObserver\n            // so just fallback to always show it\n            cb();\n        }\n    };\n    Object.defineProperty(Icon.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Icon, \"watchers\", {\n        get: function () {\n            return {\n                \"source\": [\"loadIcon\"],\n                \"name\": [\"loadIcon\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Icon, \"style\", {\n        get: function () { return \":host{display:-ms-inline-flexbox;display:inline-flex;vertical-align:top}.p-icon{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0;margin:0;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}.p-icon,.p-icon--size-small{width:1.5rem;height:1.5rem}.p-icon--size-medium{width:2.25rem;height:2.25rem}.p-icon--size-large{width:3rem;height:3rem}.p-icon--size-inherit{width:inherit;height:inherit}.p-icon--color-brand.p-icon--theme-dark,.p-icon--color-brand.p-icon--theme-light{fill:#d5001c}.p-icon--color-default.p-icon--theme-light{fill:#000}.p-icon--color-default.p-icon--theme-dark{fill:#fff}.p-icon--color-neutral-1.p-icon--theme-light{fill:#323639}.p-icon--color-neutral-1.p-icon--theme-dark{fill:#e3e4e5}.p-icon--color-neutral-2.p-icon--theme-light{fill:#4a4e51}.p-icon--color-neutral-2.p-icon--theme-dark{fill:#c9cacb}.p-icon--color-neutral-3.p-icon--theme-light{fill:#626669}.p-icon--color-neutral-3.p-icon--theme-dark{fill:#b0b1b2}.p-icon--color-notification-success.p-icon--theme-dark,.p-icon--color-notification-success.p-icon--theme-light{fill:#13d246}.p-icon--color-notification-warning.p-icon--theme-dark,.p-icon--color-notification-warning.p-icon--theme-light{fill:#e2b236}.p-icon--color-notification-error.p-icon--theme-dark,.p-icon--color-notification-error.p-icon--theme-light{fill:#e00000}.p-icon--color-inherit{fill:currentColor}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Icon;\n}());\nvar Text = /** @class */ (function () {\n    function Text(hostRef) {\n        registerInstance(this, hostRef);\n        /** Sets a custom HTML tag depending of the usage of the text component. */\n        this.tag = 'p';\n        /** Size of the text. Also defines the size for specific breakpoints, like {base: \"small\", l: \"medium\"}. You always need to provide a base value when doing this. */\n        this.size = 'small';\n        /** The weight of the text. */\n        this.weight = 'regular';\n        /** Text alignment of the component. */\n        this.align = 'left';\n        /** Basic text color variations depending on theme property. */\n        this.color = 'default';\n        /** Adds an ellipsis to a single line of text if it overflows. */\n        this.ellipsis = false;\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n    }\n    Text.prototype.render = function () {\n        var TagType = this.tag;\n        var textClasses = cx(prefix('text'), mapBreakpointPropToPrefixedClasses('text--size', this.size), prefix(\"text--weight-\" + this.weight), prefix(\"text--align-\" + this.align), prefix(\"text--color-\" + this.color), this.ellipsis && prefix('text--ellipsis'), this.color !== 'inherit' && prefix(\"text--theme-\" + this.theme));\n        return (h(TagType, { class: textClasses }, h(\"slot\", null)));\n    };\n    Object.defineProperty(Text, \"style\", {\n        get: function () { return \":host{display:block}:host ::slotted(a){outline:none transparent;color:inherit;text-decoration:underline;-webkit-transition:outline-color .24s ease,color .24s ease;transition:outline-color .24s ease,color .24s ease}:host ::slotted(a:hover){color:#d5001c}:host ::slotted(a:focus){outline:2px solid #00d5b9;outline-offset:1px}:host ::slotted(b,strong){font-weight:600}:host ::slotted(span,cite,time){display:inline-block;vertical-align:top}.p-text{font-family:Porsche Next,Arial Narrow,Arial,sans-serif;font-weight:400;font-size:1rem;line-height:1.5;padding:0;margin:0;list-style-type:none}.p-text>b,.p-text>strong{font-weight:600}.p-text--size-x-small{font-size:.75rem}.p-text--size-small{font-size:1rem}.p-text--size-medium{font-size:1.5rem}.p-text--size-large{font-size:2.25rem}.p-text--size-x-large{font-size:3.25rem}.p-text--size-inherit{font-size:inherit}\\@media (min-width:480px){.p-text--size-x-small-xs{font-size:.75rem}.p-text--size-small-xs{font-size:1rem}.p-text--size-medium-xs{font-size:1.5rem}.p-text--size-large-xs{font-size:2.25rem}.p-text--size-x-large-xs{font-size:3.25rem}.p-text--size-inherit-xs{font-size:inherit}}\\@media (min-width:760px){.p-text--size-x-small-s{font-size:.75rem}.p-text--size-small-s{font-size:1rem}.p-text--size-medium-s{font-size:1.5rem}.p-text--size-large-s{font-size:2.25rem}.p-text--size-x-large-s{font-size:3.25rem}.p-text--size-inherit-s{font-size:inherit}}\\@media (min-width:1000px){.p-text--size-x-small-m{font-size:.75rem}.p-text--size-small-m{font-size:1rem}.p-text--size-medium-m{font-size:1.5rem}.p-text--size-large-m{font-size:2.25rem}.p-text--size-x-large-m{font-size:3.25rem}.p-text--size-inherit-m{font-size:inherit}}\\@media (min-width:1300px){.p-text--size-x-small-l{font-size:.75rem}.p-text--size-small-l{font-size:1rem}.p-text--size-medium-l{font-size:1.5rem}.p-text--size-large-l{font-size:2.25rem}.p-text--size-x-large-l{font-size:3.25rem}.p-text--size-inherit-l{font-size:inherit}}\\@media (min-width:1760px){.p-text--size-x-small-xl{font-size:.75rem}.p-text--size-small-xl{font-size:1rem}.p-text--size-medium-xl{font-size:1.5rem}.p-text--size-large-xl{font-size:2.25rem}.p-text--size-x-large-xl{font-size:3.25rem}.p-text--size-inherit-xl{font-size:inherit}}.p-text--weight-thin{font-weight:200}.p-text--weight-regular{font-weight:400}.p-text--weight-bold{font-weight:600}.p-text--align-left{text-align:left}.p-text--align-center{text-align:center}.p-text--align-right{text-align:right}.p-text--color-brand.p-text--theme-dark,.p-text--color-brand.p-text--theme-light{color:#d5001c}.p-text--color-default.p-text--theme-light{color:#000}.p-text--color-default.p-text--theme-dark{color:#fff}.p-text--color-neutral-1.p-text--theme-light{color:#323639}.p-text--color-neutral-1.p-text--theme-dark{color:#e3e4e5}.p-text--color-neutral-2.p-text--theme-light{color:#4a4e51}.p-text--color-neutral-2.p-text--theme-dark{color:#c9cacb}.p-text--color-neutral-3.p-text--theme-light{color:#626669}.p-text--color-neutral-3.p-text--theme-dark{color:#b0b1b2}.p-text--color-notification-success.p-text--theme-dark,.p-text--color-notification-success.p-text--theme-light{color:#13d246}.p-text--color-notification-warning.p-text--theme-dark,.p-text--color-notification-warning.p-text--theme-light{color:#e2b236}.p-text--color-notification-error.p-text--theme-dark,.p-text--color-notification-error.p-text--theme-light{color:#e00000}.p-text--color-inherit{color:inherit}.p-text--ellipsis{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Text;\n}());\nexport { Icon as p_icon, Text as p_text };\n"],"sourceRoot":""}