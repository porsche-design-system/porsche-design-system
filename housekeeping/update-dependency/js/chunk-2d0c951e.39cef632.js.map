{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/p-checkbox-wrapper.entry.js"],"names":["checkboxWrapperCss","CheckboxWrapper","hostRef","registerInstance","this","label","state","message","hideLabel","labelId","randomString","prototype","componentWillLoad","setInput","setState","bindStateListener","addSlottedStyles","render","_this","labelClasses","cx","prefix","fakeCheckboxClasses","checked","indeterminate","disabled","iconClasses","labelTextClasses","mapBreakpointPropToPrefixedClasses","messageClasses","h","Host","class","id","isLabelVisible","tag","color","onClick","e","labelClick","name","theme","size","isMessageVisible","role","Object","defineProperty","get","host","querySelector","enumerable","configurable","includes","isMessageDefined","input","setAttribute","event","shadowRoot","target","closest","click","transitionListener","tagName","toLowerCase","style","insertSlottedStyles","getElement"],"mappings":"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","file":"js/chunk-2d0c951e.39cef632.js","sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-b5ea9709.js';\nimport { r as randomString, c as cx, p as prefix, m as mapBreakpointPropToPrefixedClasses, t as transitionListener, b as insertSlottedStyles } from './index-81dc5499.js';\nvar checkboxWrapperCss = \":host{display:block}::slotted(input){position:absolute !important;top:0 !important;left:0 !important;width:100% !important;height:100% !important;display:block !important;margin:0 !important;padding:0 !important;-webkit-appearance:none !important;-moz-appearance:none !important;appearance:none !important;border:0 !important;border-top-color:rgba(255, 255, 255, 0) !important;background-color:transparent !important;opacity:1 !important;outline:transparent solid 2px !important;outline-offset:1px !important;cursor:pointer !important;-webkit-transition:outline-color 0.24s ease, border-top-color 1ms linear !important;transition:outline-color 0.24s ease, border-top-color 1ms linear !important}::slotted(input::-ms-check){display:none !important}::slotted(input:focus){outline-color:#00d5b9 !important}::slotted(input:checked){border-top-color:rgba(255, 255, 255, 0.01) !important}::slotted(input:disabled){cursor:not-allowed !important;border-top-color:rgba(255, 255, 255, 0.02) !important}::slotted(input:indeterminate){border-top-color:rgba(255, 255, 255, 0.03) !important}::slotted(input:disabled:checked){border-top-color:rgba(255, 255, 255, 0.04) !important}::slotted(input:disabled:indeterminate){border-top-color:rgba(255, 255, 255, 0.05) !important}::slotted(input:checked:indeterminate){border-top-color:rgba(255, 255, 255, 0.06) !important}::slotted(input:disabled:checked:indeterminate){border-top-color:rgba(255, 255, 255, 0.07) !important}.p-checkbox-wrapper__label{position:relative;display:-ms-flexbox;display:flex}.p-checkbox-wrapper__label-text{-ms-flex-order:1;order:1;display:inline-block;cursor:pointer;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-checkbox-wrapper__label-text--disabled{color:#96989a;cursor:default}.p-checkbox-wrapper__label-text--visible{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}@media (min-width: 480px){.p-checkbox-wrapper__label-text--visible-xs{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden-xs{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 760px){.p-checkbox-wrapper__label-text--visible-s{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden-s{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1000px){.p-checkbox-wrapper__label-text--visible-m{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden-m{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1300px){.p-checkbox-wrapper__label-text--visible-l{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden-l{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1760px){.p-checkbox-wrapper__label-text--visible-xl{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden-xl{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}.p-checkbox-wrapper__fake-checkbox{position:relative;width:1.5rem;height:1.5rem;display:block;-ms-flex-negative:0;flex-shrink:0;background-color:#fff;-webkit-box-shadow:inset 0 0 0 1px #626669;box-shadow:inset 0 0 0 1px #626669;-webkit-transition:background-color 0.24s ease, -webkit-box-shadow 0.24s ease;transition:background-color 0.24s ease, -webkit-box-shadow 0.24s ease;transition:box-shadow 0.24s ease, background-color 0.24s ease;transition:box-shadow 0.24s ease, background-color 0.24s ease, -webkit-box-shadow 0.24s ease}.p-checkbox-wrapper__fake-checkbox:hover:not(.p-checkbox-wrapper__fake-checkbox--disabled):not(.p-checkbox-wrapper__fake-checkbox--success):not(.p-checkbox-wrapper__fake-checkbox--error),.p-checkbox-wrapper__label-text:hover~.p-checkbox-wrapper__fake-checkbox:not(.p-checkbox-wrapper__fake-checkbox--disabled):not(.p-checkbox-wrapper__fake-checkbox--success):not(.p-checkbox-wrapper__fake-checkbox--error){-webkit-box-shadow:inset 0 0 0 1px #000;box-shadow:inset 0 0 0 1px #000}.p-checkbox-wrapper__fake-checkbox--checked{-webkit-box-shadow:inset 0 0 0 1px #323639;box-shadow:inset 0 0 0 1px #323639;background-color:#323639}.p-checkbox-wrapper__fake-checkbox--checked.p-checkbox-wrapper__fake-checkbox--disabled{background-color:#96989a}.p-checkbox-wrapper__fake-checkbox--checked.p-checkbox-wrapper__fake-checkbox--error{background-color:#e00000}.p-checkbox-wrapper__fake-checkbox--checked.p-checkbox-wrapper__fake-checkbox--success{background-color:#018a16}.p-checkbox-wrapper__fake-checkbox--disabled{-webkit-box-shadow:inset 0 0 0 1px #96989a;box-shadow:inset 0 0 0 1px #96989a}.p-checkbox-wrapper__fake-checkbox--error{-webkit-box-shadow:inset 0 0 0 2px #e00000;box-shadow:inset 0 0 0 2px #e00000}.p-checkbox-wrapper__fake-checkbox--error:hover,.p-checkbox-wrapper__label-text:hover~.p-checkbox-wrapper__fake-checkbox--error{-webkit-box-shadow:inset 0 0 0 2px #a30000;box-shadow:inset 0 0 0 2px #a30000}.p-checkbox-wrapper__fake-checkbox--success{-webkit-box-shadow:inset 0 0 0 2px #018a16;box-shadow:inset 0 0 0 2px #018a16}.p-checkbox-wrapper__fake-checkbox--success:hover,.p-checkbox-wrapper__label-text:hover~.p-checkbox-wrapper__fake-checkbox--success{-webkit-box-shadow:inset 0 0 0 2px #014d0c;box-shadow:inset 0 0 0 2px #014d0c}.p-checkbox-wrapper__icon{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;-webkit-transition:opacity 0.24s ease;transition:opacity 0.24s ease}.p-checkbox-wrapper__icon--checked{opacity:1}.p-checkbox-wrapper__message{margin-top:0.25rem;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-checkbox-wrapper__message--success{color:#018a16}.p-checkbox-wrapper__message--error{color:#e00000}\";\nvar CheckboxWrapper = /** @class */ (function () {\n    function CheckboxWrapper(hostRef) {\n        registerInstance(this, hostRef);\n        /** The label text. */\n        this.label = '';\n        /** The validation state. */\n        this.state = 'none';\n        /** The message styled depending on validation state. */\n        this.message = '';\n        /** Show or hide label. For better accessibility it's recommended to show the label. */\n        this.hideLabel = false;\n        this.labelId = randomString();\n    }\n    CheckboxWrapper.prototype.componentWillLoad = function () {\n        this.setInput();\n        this.setState();\n        this.bindStateListener();\n        this.addSlottedStyles();\n    };\n    CheckboxWrapper.prototype.render = function () {\n        var _this = this;\n        var labelClasses = cx(prefix('checkbox-wrapper__label'));\n        var fakeCheckboxClasses = cx(prefix('checkbox-wrapper__fake-checkbox'), (this.checked || this.indeterminate) && prefix('checkbox-wrapper__fake-checkbox--checked'), this.disabled && prefix('checkbox-wrapper__fake-checkbox--disabled'), this.state !== 'none' && prefix(\"checkbox-wrapper__fake-checkbox--\" + this.state));\n        var iconClasses = cx(prefix('checkbox-wrapper__icon'), (this.checked || this.indeterminate) && prefix('checkbox-wrapper__icon--checked'));\n        var labelTextClasses = cx(prefix('checkbox-wrapper__label-text'), mapBreakpointPropToPrefixedClasses('checkbox-wrapper__label-text-', this.hideLabel, ['hidden', 'visible']), this.disabled && prefix('checkbox-wrapper__label-text--disabled'));\n        var messageClasses = cx(prefix('checkbox-wrapper__message'), this.state !== 'none' && prefix(\"checkbox-wrapper__message--\" + this.state));\n        return (h(Host, null, h(\"label\", { class: labelClasses, id: this.state === 'error' && this.labelId }, this.isLabelVisible &&\n            h(\"p-text\", { class: labelTextClasses, tag: 'span', color: 'inherit', onClick: function (e) { return _this.labelClick(e); } }, this.label ? this.label : h(\"span\", null, h(\"slot\", { name: 'label' }))), h(\"span\", { class: fakeCheckboxClasses }, h(\"p-icon\", { class: iconClasses, name: this.indeterminate ? 'minus' : 'check', theme: 'dark', size: 'inherit' }), h(\"slot\", null))), this.isMessageVisible &&\n            h(\"p-text\", { class: messageClasses, color: 'inherit', role: this.state === 'error' && 'alert', \"aria-describedby\": this.state === 'error' && this.labelId }, this.message ? this.message : h(\"span\", null, h(\"slot\", { name: 'message' })))));\n    };\n    Object.defineProperty(CheckboxWrapper.prototype, \"isLabelVisible\", {\n        get: function () {\n            return !!this.label || !!this.host.querySelector('[slot=\"label\"]');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CheckboxWrapper.prototype, \"isMessageDefined\", {\n        get: function () {\n            return !!this.message || !!this.host.querySelector('[slot=\"message\"]');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CheckboxWrapper.prototype, \"isMessageVisible\", {\n        get: function () {\n            return ['success', 'error'].includes(this.state) && this.isMessageDefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CheckboxWrapper.prototype.setInput = function () {\n        this.input = this.host.querySelector('input[type=\"checkbox\"]');\n        this.input.setAttribute('aria-label', this.label);\n    };\n    CheckboxWrapper.prototype.labelClick = function (event) {\n        /**\n         * we only want to simulate the checkbox click by label click\n         * for real shadow dom, else the native behaviour works out\n         * of the box.\n         * also we don't want to click to the input, if a link is\n         * clicked.\n         */\n        if (this.host.shadowRoot && this.host.shadowRoot.host\n            && event.target.closest('a') === null) {\n            this.input.click();\n        }\n    };\n    CheckboxWrapper.prototype.setState = function () {\n        this.checked = this.input.checked;\n        this.disabled = this.input.disabled;\n        this.indeterminate = this.input.indeterminate;\n    };\n    CheckboxWrapper.prototype.bindStateListener = function () {\n        var _this = this;\n        transitionListener(this.input, 'border-top-color', function () {\n            _this.setState();\n        });\n    };\n    CheckboxWrapper.prototype.addSlottedStyles = function () {\n        var tagName = this.host.tagName.toLowerCase();\n        var style = tagName + \" a {\\n      outline: none transparent;\\n      color: inherit;\\n      text-decoration: underline;\\n      -webkit-transition: outline-color .24s ease, color .24s ease;\\n      transition: outline-color .24s ease, color .24s ease;\\n    }\\n\\n    \" + tagName + \" a:hover {\\n      color: #d5001c;\\n    }\\n\\n    \" + tagName + \" a:focus {\\n      outline: 2px solid #00d5b9;\\n      outline-offset: 1px;\\n    }\";\n        insertSlottedStyles(this.host, style);\n    };\n    Object.defineProperty(CheckboxWrapper.prototype, \"host\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    return CheckboxWrapper;\n}());\nCheckboxWrapper.style = checkboxWrapperCss;\nexport { CheckboxWrapper as p_checkbox_wrapper };\n"],"sourceRoot":""}