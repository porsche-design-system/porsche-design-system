{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.reduce.js","webpack:///./node_modules/core-js/modules/es.string.match.js","webpack:///../components-js/dist/esm-es5/shadow-css-8d00f379.js","webpack:///./node_modules/core-js/modules/es.array.index-of.js","webpack:///./node_modules/core-js/internals/array-reduce.js"],"names":["$","$reduce","left","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","1","target","proto","forced","reduce","callbackfn","this","arguments","length","undefined","fixRegExpWellKnownSymbolLogic","anObject","toLength","requireObjectCoercible","advanceStringIndex","regExpExec","MATCH","nativeMatch","maybeCallNative","regexp","O","matcher","call","RegExp","String","res","done","value","rx","S","global","fullUnicode","unicode","lastIndex","result","A","n","matchStr","__spreadArrays","s","i","il","r","Array","k","a","j","jl","safeSelector","selector","content","placeholders","index","replace","_","keep","replaceBy","push","pseudo","exp","ss","restoreSafeSelector","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_selectorReSuffix","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","stripComments","input","_commentWithHashRe","extractCommentsWithHash","match","_ruleRe","_curlyRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","m","_i","suffix","contentPrefix","startsWith","blocks","substring","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","join","strEscapedBlocks","insertPolyfillHostInCssText","convertColonRule","cssText","regExp","partReplacer","parts","p","trim","colonHostPartReplacer","host","convertColonHost","colonHostContextPartReplacer","indexOf","convertColonSlotted","slotAttr","compound","sel","convertColonHostContext","convertShadowDOMSelectors","pattern","makeScopeMatcher","scopeSelector","lre","rre","selectorNeedsScoping","re","test","applySimpleSelectorScope","hostSelector","replaceBy_1","before","colon","after","applyStrictSelectorScope","isRe","className","_scopeSelectorPart","scopedP","t","matches","safeContent","scopedSelector","startIndex","sep","hasHost","shouldScope","exec","separator","part_1","slice","scopedPart","scopeSelectorText","slotSelector","map","shallowPart","scopeSelectors","commentOriginalSelector","scopeCssText","scopeId","hostScopeId","slotScopeId","scopeCss","commentsWithHash","orgSelectors","processCommentedSelector_1","placeholder","comment","scopedCssText","forEach","_a","$indexOf","nativeIndexOf","NEGATIVE_ZERO","ACCESSORS","searchElement","apply","aFunction","toObject","IndexedObject","createMethod","IS_RIGHT","that","argumentsLength","memo","self","TypeError","module","exports","right"],"mappings":"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","file":"js/chunk-ccb47798.79926366.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduce');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('reduce', { 1: 0 });\n\n// `Array.prototype.reduce` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : regexp[MATCH];\n      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative(nativeMatch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n/*\n Stencil Runtime v1.9.0-11 | MIT Licensed | https://stenciljs.com\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function (selector) {\n    var placeholders = [];\n    var index = 0;\n    var content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    var ss = {\n        content: content,\n        placeholders: placeholders,\n    };\n    return ss;\n};\nvar restoreSafeSelector = function (placeholders, content) {\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g\n];\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n    return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n    return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var cssRule = {\n            selector: selector,\n            content: content\n        };\n        var rule = ruleCallback(cssRule);\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n};\nvar escapeBlocks = function (input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    var strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks\n    };\n    return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function (selector) {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var parts = m[2].split(',');\n            var r = [];\n            for (var i = 0; i < parts.length; i++) {\n                var p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar colonHostPartReplacer = function (host, part, suffix) {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nvar convertColonSlotted = function (cssText, slotAttr) {\n    var regExp = _cssColonSlottedRe;\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var compound = m[2].trim();\n            var suffix = m[3];\n            var sel = '.' + slotAttr + ' > ' + compound + suffix;\n            return sel;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar convertColonHostContext = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function (cssText) {\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n};\nvar makeScopeMatcher = function (scopeSelector) {\n    var lre = /\\[/g;\n    var rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n    var re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        var replaceBy_1 = \".\" + hostSelector;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                return before + replaceBy_1 + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n    var isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\n        var parts = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parts[_i - 1] = arguments[_i];\n        }\n        return parts[0];\n    });\n    var className = '.' + scopeSelector;\n    var _scopeSelectorPart = function (p) {\n        var scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            var t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                var matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    var safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    var scopedSelector = '';\n    var startIndex = 0;\n    var res;\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    var shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        var separator = res[1];\n        var part_1 = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n        scopedSelector += scopedPart + \" \" + separator + \" \";\n        startIndex = sep.lastIndex;\n    }\n    var part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n    return selector.split(',')\n        .map(function (shallowPart) {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n    return processRules(cssText, function (rule) {\n        var selector = rule.selector;\n        var content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n            rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        var cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content: content\n        };\n        return cssRule;\n    });\n};\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    cssText = convertColonSlotted(cssText, slotScopeId);\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return cssText.trim();\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n    var hostScopeId = scopeId + '-h';\n    var slotScopeId = scopeId + '-s';\n    var commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    var orgSelectors = [];\n    if (commentOriginalSelector) {\n        var processCommentedSelector_1 = function (rule) {\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n            var comment = \"/*!@\" + rule.selector + \"*/\";\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, function (rule) {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector_1(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector_1);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    var scopedCssText = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = __spreadArrays([scopedCssText], commentsWithHash).join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(function (_a) {\n            var placeholder = _a.placeholder, comment = _a.comment;\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    return cssText;\n};\nexport { scopeCss };\n","'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('indexOf');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.indexOf` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aFunction(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = toLength(O.length);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n"],"sourceRoot":""}