{"version":3,"sources":["webpack:///../components-js/dist/esm-es5/p-icon_2.entry.js"],"names":["isStr","val","validateContent","svgContent","div","document","createElement","innerHTML","i","childNodes","length","nodeName","toLowerCase","removeChild","svgElm","firstElementChild","setAttribute","isValid","elm","nodeType","attributes","value","indexOf","iconContent","Map","requests","getSvgContent","url","req","get","fetch","then","rsp","ok","text","set","IconCss","Icon","hostRef","registerInstance","this","name","variant","color","size","lazy","theme","isVisible","prototype","connectedCallback","_this","waitUntilVisible","el","loadIcon","disconnectedCallback","io","disconnect","undefined","url_1","getSource","has","source","console","warn","render","iconClasses","cx","prefix","h","Host","role","class","rootMargin","cb","window","IntersectionObserver","io_1","data","isIntersecting","observe","Object","defineProperty","getElement","enumerable","configurable","TextCss","Text","tag","weight","align","ellipsis","TagType","textClasses","mapBreakpointPropToPrefixedClasses"],"mappings":"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","file":"js/chunk-2d0c8676.4eb0427d.js","sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-66d6cbfe.js';\nimport { c as cx, p as prefix, m as mapBreakpointPropToPrefixedClasses } from './index-8ee54cab.js';\nvar isStr = function (val) { return typeof val === 'string'; };\nvar validateContent = function (svgContent) {\n    if (svgContent) {\n        var div = document.createElement('div');\n        div.innerHTML = svgContent;\n        // setup this way to ensure it works on our buddy IE\n        for (var i = div.childNodes.length - 1; i >= 0; i--) {\n            if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n                div.removeChild(div.childNodes[i]);\n            }\n        }\n        // must only have 1 root element\n        var svgElm = div.firstElementChild;\n        if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n            // fix IE11 focus SVG elements on tab\n            svgElm.setAttribute('focusable', 'false');\n            // root element must be an svg\n            // lets double check we've got valid elements\n            // do not allow scripts\n            if (isValid(svgElm)) {\n                return div.innerHTML;\n            }\n        }\n    }\n    return '';\n};\nvar isValid = function (elm) {\n    if (elm.nodeType === 1) {\n        if (elm.nodeName.toLowerCase() === 'script') {\n            return false;\n        }\n        for (var i = 0; i < elm.attributes.length; i++) {\n            var val = elm.attributes[i].value;\n            if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\n                return false;\n            }\n        }\n        for (var i = 0; i < elm.childNodes.length; i++) {\n            if (!isValid(elm.childNodes[i])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nvar iconContent = new Map();\nvar requests = new Map();\nvar getSvgContent = function (url) {\n    // see if we already have a request for this url\n    var req = requests.get(url);\n    if (!req) {\n        // we don't already have a request\n        req = fetch(url).then(function (rsp) {\n            if (rsp.ok) {\n                return rsp.text().then(function (svgContent) {\n                    iconContent.set(url, validateContent(svgContent));\n                });\n            }\n            iconContent.set(url, '');\n        });\n        // cache for the same requests\n        requests.set(url, req);\n    }\n    return req;\n};\nvar IconCss = \"/**\\n * Theme light\\n */\\n/**\\n * Theme dark\\n */\\n/**\\n * External brand colors\\n */\\n/**\\n * Theme light\\n */\\n/**\\n * Theme dark\\n */\\n/**\\n * External brand colors\\n */\\n/**\\n * Theme light\\n */\\n/**\\n * Theme dark\\n */\\n/**\\n * External brand colors\\n */\\n:host {\\n  display: inline-flex;\\n  vertical-align: top;\\n}\\n\\n.p-icon {\\n  display: flex;\\n  flex-shrink: 0;\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n  width: 1.5rem;\\n  height: 1.5rem;\\n}\\n.p-icon--size-small {\\n  width: 1.5rem;\\n  height: 1.5rem;\\n}\\n.p-icon--size-medium {\\n  width: 2.25rem;\\n  height: 2.25rem;\\n}\\n.p-icon--size-large {\\n  width: 3rem;\\n  height: 3rem;\\n}\\n.p-icon--size-inherit {\\n  width: inherit;\\n  height: inherit;\\n}\\n.p-icon--color-brand.p-icon--theme-light {\\n  fill: #d5001c;\\n}\\n.p-icon--color-brand.p-icon--theme-dark {\\n  fill: #d5001c;\\n}\\n.p-icon--color-default.p-icon--theme-light {\\n  fill: #000;\\n}\\n.p-icon--color-default.p-icon--theme-dark {\\n  fill: #fff;\\n}\\n.p-icon--color-neutral-1.p-icon--theme-light {\\n  fill: #323639;\\n}\\n.p-icon--color-neutral-1.p-icon--theme-dark {\\n  fill: #e3e4e5;\\n}\\n.p-icon--color-neutral-2.p-icon--theme-light {\\n  fill: #4a4e51;\\n}\\n.p-icon--color-neutral-2.p-icon--theme-dark {\\n  fill: #c9cacb;\\n}\\n.p-icon--color-neutral-3.p-icon--theme-light {\\n  fill: #626669;\\n}\\n.p-icon--color-neutral-3.p-icon--theme-dark {\\n  fill: #b0b1b2;\\n}\\n.p-icon--color-notification-success.p-icon--theme-light {\\n  fill: #13d246;\\n}\\n.p-icon--color-notification-success.p-icon--theme-dark {\\n  fill: #13d246;\\n}\\n.p-icon--color-notification-warning.p-icon--theme-light {\\n  fill: #e2b236;\\n}\\n.p-icon--color-notification-warning.p-icon--theme-dark {\\n  fill: #e2b236;\\n}\\n.p-icon--color-notification-error.p-icon--theme-light {\\n  fill: #e00000;\\n}\\n.p-icon--color-notification-error.p-icon--theme-dark {\\n  fill: #e00000;\\n}\\n.p-icon--color-inherit {\\n  fill: currentColor;\\n}\";\nvar Icon = /** @class */ (function () {\n    function Icon(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Specifies which icon to use.\n         */\n        this.name = 'arrow-head-right';\n        /**\n         * @internal\n         * Specifies which icon variant to use.\n         */\n        this.variant = 'outline';\n        /** Basic color variations depending on theme property. */\n        this.color = 'default';\n        /**\n         * The size of the icon.\n         */\n        this.size = 'small';\n        /**\n         * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n         * Default, `false`.\n         */\n        this.lazy = false;\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n        this.isVisible = false;\n    }\n    Icon.prototype.connectedCallback = function () {\n        var _this = this;\n        // purposely do not return the promise here because loading\n        // the svg file should not hold up loading the app\n        // only load the svg if it's visible\n        this.waitUntilVisible(this.el, '50px', function () {\n            _this.isVisible = true;\n            _this.loadIcon();\n        });\n    };\n    Icon.prototype.disconnectedCallback = function () {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    };\n    Icon.prototype.loadIcon = function () {\n        var _this = this;\n        if (this.isVisible) {\n            var url_1 = this.getSource();\n            if (iconContent.has(url_1)) {\n                // sync if it's already loaded\n                this.svgContent = iconContent.get(url_1);\n            }\n            else {\n                // async if it hasn't been loaded\n                getSvgContent(url_1).then(function () { return _this.svgContent = iconContent.get(url_1); });\n            }\n        }\n    };\n    Icon.prototype.getSource = function () {\n        if (this.name && !this.source) {\n            return \"https://cdn.ui.porsche.com/porsche-icons/icons/\" + this.variant + \"/\" + this.name + \".svg\";\n        }\n        if (this.source) {\n            return this.source;\n        }\n        console.warn('Please provide either an name property or a source property!');\n        return '';\n    };\n    Icon.prototype.render = function () {\n        var iconClasses = cx(prefix('icon'), prefix(\"icon--size-\" + this.size), prefix(\"icon--color-\" + this.color), this.color !== 'inherit' && prefix(\"icon--theme-\" + this.theme));\n        return (h(Host, { role: 'img' }, ((this.svgContent)\n            ? h(\"i\", { class: iconClasses, innerHTML: this.svgContent })\n            : h(\"i\", { class: iconClasses }))));\n    };\n    Icon.prototype.waitUntilVisible = function (el, rootMargin, cb) {\n        var _this = this;\n        if (this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n            var io_1 = this.io = new window.IntersectionObserver(function (data) {\n                if (data[0].isIntersecting) {\n                    io_1.disconnect();\n                    _this.io = undefined;\n                    cb();\n                }\n            }, { rootMargin: rootMargin });\n            io_1.observe(el);\n        }\n        else {\n            // browser doesn't support IntersectionObserver\n            // so just fallback to always show it\n            cb();\n        }\n    };\n    Object.defineProperty(Icon.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Icon, \"watchers\", {\n        get: function () {\n            return {\n                \"source\": [\"loadIcon\"],\n                \"name\": [\"loadIcon\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Icon, \"style\", {\n        get: function () { return IconCss; },\n        enumerable: true,\n        configurable: true\n    });\n    return Icon;\n}());\nvar TextCss = \"/**\\n * Theme light\\n */\\n/**\\n * Theme dark\\n */\\n/**\\n * External brand colors\\n */\\n/**\\n * Theme light\\n */\\n/**\\n * Theme dark\\n */\\n/**\\n * External brand colors\\n */\\n/**\\n * Theme light\\n */\\n/**\\n * Theme dark\\n */\\n/**\\n * External brand colors\\n */\\n:host {\\n  display: block;\\n}\\n:host ::slotted(a) {\\n  outline: transparent none;\\n  color: inherit;\\n  text-decoration: underline;\\n  transition: outline-color 0.24s ease, color 0.24s ease;\\n}\\n:host ::slotted(a:hover) {\\n  color: #d5001c;\\n}\\n:host ::slotted(a:focus) {\\n  outline: #00d5b9 solid 2px;\\n  outline-offset: 1px;\\n}\\n:host ::slotted(b, strong) {\\n  font-weight: 700;\\n}\\n:host ::slotted(span, cite, time) {\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n\\n.p-text {\\n  font-family: \\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;\\n  font-weight: 400;\\n  font-size: 1rem;\\n  line-height: 1.5;\\n  padding: 0;\\n  margin: 0;\\n  list-style-type: none;\\n}\\n.p-text > strong,\\n.p-text > b {\\n  font-weight: 700;\\n}\\n.p-text--size-x-small {\\n  font-size: 0.75rem;\\n}\\n.p-text--size-small {\\n  font-size: 1rem;\\n}\\n.p-text--size-medium {\\n  font-size: 1.5rem;\\n}\\n.p-text--size-large {\\n  font-size: 2.25rem;\\n}\\n.p-text--size-x-large {\\n  font-size: 3.25rem;\\n}\\n.p-text--size-inherit {\\n  font-size: inherit;\\n}\\n@media (min-width: 480px) {\\n  .p-text--size-x-small-xs {\\n    font-size: 0.75rem;\\n  }\\n  .p-text--size-small-xs {\\n    font-size: 1rem;\\n  }\\n  .p-text--size-medium-xs {\\n    font-size: 1.5rem;\\n  }\\n  .p-text--size-large-xs {\\n    font-size: 2.25rem;\\n  }\\n  .p-text--size-x-large-xs {\\n    font-size: 3.25rem;\\n  }\\n  .p-text--size-inherit-xs {\\n    font-size: inherit;\\n  }\\n}\\n@media (min-width: 760px) {\\n  .p-text--size-x-small-s {\\n    font-size: 0.75rem;\\n  }\\n  .p-text--size-small-s {\\n    font-size: 1rem;\\n  }\\n  .p-text--size-medium-s {\\n    font-size: 1.5rem;\\n  }\\n  .p-text--size-large-s {\\n    font-size: 2.25rem;\\n  }\\n  .p-text--size-x-large-s {\\n    font-size: 3.25rem;\\n  }\\n  .p-text--size-inherit-s {\\n    font-size: inherit;\\n  }\\n}\\n@media (min-width: 1000px) {\\n  .p-text--size-x-small-m {\\n    font-size: 0.75rem;\\n  }\\n  .p-text--size-small-m {\\n    font-size: 1rem;\\n  }\\n  .p-text--size-medium-m {\\n    font-size: 1.5rem;\\n  }\\n  .p-text--size-large-m {\\n    font-size: 2.25rem;\\n  }\\n  .p-text--size-x-large-m {\\n    font-size: 3.25rem;\\n  }\\n  .p-text--size-inherit-m {\\n    font-size: inherit;\\n  }\\n}\\n@media (min-width: 1300px) {\\n  .p-text--size-x-small-l {\\n    font-size: 0.75rem;\\n  }\\n  .p-text--size-small-l {\\n    font-size: 1rem;\\n  }\\n  .p-text--size-medium-l {\\n    font-size: 1.5rem;\\n  }\\n  .p-text--size-large-l {\\n    font-size: 2.25rem;\\n  }\\n  .p-text--size-x-large-l {\\n    font-size: 3.25rem;\\n  }\\n  .p-text--size-inherit-l {\\n    font-size: inherit;\\n  }\\n}\\n@media (min-width: 1760px) {\\n  .p-text--size-x-small-xl {\\n    font-size: 0.75rem;\\n  }\\n  .p-text--size-small-xl {\\n    font-size: 1rem;\\n  }\\n  .p-text--size-medium-xl {\\n    font-size: 1.5rem;\\n  }\\n  .p-text--size-large-xl {\\n    font-size: 2.25rem;\\n  }\\n  .p-text--size-x-large-xl {\\n    font-size: 3.25rem;\\n  }\\n  .p-text--size-inherit-xl {\\n    font-size: inherit;\\n  }\\n}\\n.p-text--weight-thin {\\n  font-weight: 100;\\n}\\n.p-text--weight-regular {\\n  font-weight: 400;\\n}\\n.p-text--weight-bold {\\n  font-weight: 700;\\n}\\n.p-text--align-left {\\n  text-align: left;\\n}\\n.p-text--align-center {\\n  text-align: center;\\n}\\n.p-text--align-right {\\n  text-align: right;\\n}\\n.p-text--color-brand.p-text--theme-light {\\n  color: #d5001c;\\n}\\n.p-text--color-brand.p-text--theme-dark {\\n  color: #d5001c;\\n}\\n.p-text--color-default.p-text--theme-light {\\n  color: #000;\\n}\\n.p-text--color-default.p-text--theme-dark {\\n  color: #fff;\\n}\\n.p-text--color-neutral-1.p-text--theme-light {\\n  color: #323639;\\n}\\n.p-text--color-neutral-1.p-text--theme-dark {\\n  color: #e3e4e5;\\n}\\n.p-text--color-neutral-2.p-text--theme-light {\\n  color: #4a4e51;\\n}\\n.p-text--color-neutral-2.p-text--theme-dark {\\n  color: #c9cacb;\\n}\\n.p-text--color-neutral-3.p-text--theme-light {\\n  color: #626669;\\n}\\n.p-text--color-neutral-3.p-text--theme-dark {\\n  color: #b0b1b2;\\n}\\n.p-text--color-notification-success.p-text--theme-light {\\n  color: #13d246;\\n}\\n.p-text--color-notification-success.p-text--theme-dark {\\n  color: #13d246;\\n}\\n.p-text--color-notification-warning.p-text--theme-light {\\n  color: #e2b236;\\n}\\n.p-text--color-notification-warning.p-text--theme-dark {\\n  color: #e2b236;\\n}\\n.p-text--color-notification-error.p-text--theme-light {\\n  color: #e00000;\\n}\\n.p-text--color-notification-error.p-text--theme-dark {\\n  color: #e00000;\\n}\\n.p-text--color-inherit {\\n  color: inherit;\\n}\\n.p-text--ellipsis {\\n  max-width: 100%;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\";\nvar Text = /** @class */ (function () {\n    function Text(hostRef) {\n        registerInstance(this, hostRef);\n        /** Sets a custom HTML tag depending of the usage of the text component. */\n        this.tag = 'p';\n        /** Size of the text. Also defines the size for specific breakpoints, like {base: \"small\", l: \"medium\"}. You always need to provide a base value when doing this. */\n        this.size = 'small';\n        /** The weight of the text. */\n        this.weight = 'regular';\n        /** Text alignment of the component. */\n        this.align = 'left';\n        /** Basic text color variations depending on theme property. */\n        this.color = 'default';\n        /** Adds an ellipsis to a single line of text if it overflows. */\n        this.ellipsis = false;\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n    }\n    Text.prototype.render = function () {\n        var TagType = this.tag;\n        var textClasses = cx(prefix('text'), mapBreakpointPropToPrefixedClasses('text--size', this.size), prefix(\"text--weight-\" + this.weight), prefix(\"text--align-\" + this.align), prefix(\"text--color-\" + this.color), this.ellipsis && prefix('text--ellipsis'), this.color !== 'inherit' && prefix(\"text--theme-\" + this.theme));\n        return (h(TagType, { class: textClasses }, h(\"slot\", null)));\n    };\n    Object.defineProperty(Text, \"style\", {\n        get: function () { return TextCss; },\n        enumerable: true,\n        configurable: true\n    });\n    return Text;\n}());\nexport { Icon as p_icon, Text as p_text };\n"],"sourceRoot":""}