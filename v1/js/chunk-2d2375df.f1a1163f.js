(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2375df"],{fb8e:function(e,t,o){"use strict";o.r(t);var r=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},a=[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"vmark"},[o("h1",[e._v("Flex-item")]),o("h2",[e._v("Properties")]),o("table",[o("thead",[o("tr",[o("th",[e._v("Property")]),o("th",[e._v("Attribute")]),o("th",[e._v("Description")]),o("th",[e._v("Type")]),o("th",[e._v("Default")])])]),o("tbody",[o("tr",[o("td",[o("code",[e._v("alignSelf")])]),o("td",[o("code",[e._v("align-self")])]),o("td",[e._v('Defines how this flex item is aligned along the cross axis. This overwrites the cross axis alignment set by the container. Corresponds to the "alignSelf" css property.')]),o("td",[o("code",[e._v('"auto" \\| "baseline" \\| "center" \\| "end" \\| "start" \\| "stretch" \\| BreakpointValues<"center" \\| "auto" \\| "start" \\| "end" \\| "baseline" \\| "stretch">')])]),o("td",[o("code",[e._v("'auto'")])])]),o("tr",[o("td",[o("code",[e._v("flex")])]),o("td",[o("code",[e._v("flex")])]),o("td",[e._v('The shorthand property for the combined definition of "shrink", "grow" and "basis"')]),o("td",[o("code",[e._v('"auto" \\| "equal" \\| "initial" \\| "none" \\| BreakpointValues<"auto" \\| "none" \\| "initial" \\| "equal">')])]),o("td",[o("code",[e._v("'initial'")])])]),o("tr",[o("td",[o("code",[e._v("grow")])]),o("td",[o("code",[e._v("grow")])]),o("td",[e._v("The ability to allow/disallow the flex child to grow.")]),o("td",[o("code",[e._v("0 \\| 1 \\| BreakpointValues<0 \\| 1>")])]),o("td",[o("code",[e._v("0")])])]),o("tr",[o("td",[o("code",[e._v("offset")])]),o("td",[o("code",[e._v("offset")])]),o("td",[e._v('The offset of the column. You can also supply values for specific breakpoints, like {base: "none", l: "one-quarter"}. You always need to provide a base value when doing this.')]),o("td",[o("code",[e._v('"half" \\| "none" \\| "one-quarter" \\| "one-third" \\| "three-quarters" \\| "two-thirds" \\| BreakpointValues<"one-quarter" \\| "one-third" \\| "half" \\| "two-thirds" \\| "three-quarters" \\| "none">')])]),o("td",[o("code",[e._v("'none'")])])]),o("tr",[o("td",[o("code",[e._v("shrink")])]),o("td",[o("code",[e._v("shrink")])]),o("td",[e._v("The ability to allow/disallow the flex child to shrink.")]),o("td",[o("code",[e._v("0 \\| 1 \\| BreakpointValues<0 \\| 1>")])]),o("td",[o("code",[e._v("1")])])]),o("tr",[o("td",[o("code",[e._v("width")])]),o("td",[o("code",[e._v("width")])]),o("td",[e._v('The width of the flex item. You can also supply values for specific breakpoints, like {base: "full", l: "one-quarter"}. You always need to provide a base value when doing this.')]),o("td",[o("code",[e._v('"auto" \\| "full" \\| "half" \\| "one-quarter" \\| "one-third" \\| "three-quarters" \\| "two-thirds" \\| BreakpointValues<"auto" \\| "one-quarter" \\| "one-third" \\| "half" \\| "two-thirds" \\| "three-quarters" \\| "full">')])]),o("td",[o("code",[e._v("'auto'")])])])])])])}],d=o("2be6"),i={},n=Object(d["a"])(i,r,a,!1,null,null,null);t["default"]=n.exports}}]);
//# sourceMappingURL=chunk-2d2375df.f1a1163f.js.map