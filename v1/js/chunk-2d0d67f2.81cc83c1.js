(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d67f2"],{7399:function(e,n,i){"use strict";i.r(n);var t=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},a=[function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("div",{staticClass:"vmark"},[i("h1",[e._v("Versioning")]),i("h2",[e._v("General information")]),i("p",[e._v("For updating and releasing new versions of code or design changes, the "),i("a",{attrs:{href:"http://semver.org/"}},[e._v("SemanticVersioning")]),e._v(" format is used:")]),i("p",[e._v("MAJOR.MINOR.PATCH e.g. 1.0.1")]),i("ul",[i("li",[i("strong",[e._v("Major")]),e._v(" (X.y.z) contain breaking changes (defined below).")]),i("li",[i("strong",[e._v("Minor")]),e._v(" (x.Y.z) add new features or deprecate existing features without breaking changes.")]),i("li",[i("strong",[e._v("Patch")]),e._v(" (x.y.Z) fix defects or optimise existing features and file structure without breaking changes.")])]),i("p",[e._v("Teams should avoid mixing different versions of code and design library. Both parties should drive updating in collaboration with the related counterpart.")]),i("h2",[e._v("Release rules")]),i("ul",[i("li",[i("strong",[e._v("Once a versioned package has been released, the contents of that version must not be modified. Any modifications must be released as a new version.")])]),i("li",[i("strong",[e._v("We align design and code versioning in major and minor")])]),i("li",[i("strong",[e._v("Version changes are part of every pull request following the SamVer rules")])]),i("li",[i("strong",[e._v("We only allow one breaking change per major release.")])]),i("li",[i("strong",[e._v("Every version change must be documented clearly in the change log.")])]),i("li",[i("strong",[e._v("In design, the version must be contained in the library file name.")])])]),i("h2",[e._v("Versioning examples")]),i("p",[e._v("Some examples for SemVer within the Porsche UI Kit:")]),i("h3",[e._v("MAJOR version when")]),i("ul",[i("li",[e._v("Change to style that triggers a layout change or different wrapping behaviour")]),i("li",[e._v("Markup change that must be included or is being updated")]),i("li",[e._v("Change to code constants")]),i("li",[e._v("Context-relevant changes in style basics, i.e. primary colour or icon assets with same meaning")]),i("li",[e._v("Changes that can affect layout outside of content, i.e. display properties")]),i("li",[e._v("Upgrade to dependencies")]),i("li",[e._v("Deletion or moving of shared mixins or placeholders")]),i("li",[e._v("Changing of hard-coded asset paths, i.e. background src")]),i("li",[e._v("Removal of an accessibility-relevant attribute or property, relevant for assistive functionality.")])]),i("h3",[e._v("MINOR version when")]),i("ul",[i("li",[e._v("Addition of something new or a new variation of existing content, i.e. new error states")]),i("li",[e._v("Addition of attributes to markup that donâ€™t affect the rendering of the markup, i.e. new aria attributes")]),i("li",[e._v("Updating of values of constants that do not result in a breaking change")]),i("li",[e._v("Deprecation of existing contents without deletion")])]),i("h3",[e._v("PATCH version when")]),i("ul",[i("li",[e._v("Update to package dependencies")]),i("li",[e._v("Structural changes not affecting refs")]),i("li",[e._v("Fixing of defects and optimisation of existing code, e.g. a markup value or modification to constant keys")]),i("li",[e._v("Changes to plugins or application-related improvements")])]),i("h3",[e._v("NO RELEASE when")]),i("ul",[i("li",[e._v("Update to dev dependencies")]),i("li",[e._v("Addition of tests or examples")]),i("li",[e._v("Update to examples and documentation")])])])}],o=i("2be6"),r={},s=Object(o["a"])(r,t,a,!1,null,null,null);n["default"]=s.exports}}]);
//# sourceMappingURL=chunk-2d0d67f2.81cc83c1.js.map