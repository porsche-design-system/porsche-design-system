{"version":3,"sources":["components/example/Example.tsx","components/example/example.module.scss"],"names":["Editor","registerLanguage","languageXml","Example","props","_useState","useState","_useState2","Object","_github_workspace_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","theme","setTheme","_useState3","_useState4","showHTML","setShowHTML","_useState5","_useState6","showSCSS","setShowSCSS","renderClasses","cx","styles","render","_github_workspace_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","light","dark","handleShowClicked","name","handleThemeClicked","panes","menuItem","key","active","onClick","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Fragment","_porscheui_porsche_ui_kit__WEBPACK_IMPORTED_MODULE_8__","marginTop","className","example","noTheme","_porsche_ui_kit_react__WEBPACK_IMPORTED_MODULE_7__","alignment","mini","divider","renderNode","children","noHTML","noSCSS","justifyContent","toggle","open","codeblock","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_5__","language","style","editorTheme","xml","formatted","replace","pad","split","forEach","node","index","indent","match","padding","i","formatXml","renderToStaticMarkup","renderHTML","module","exports","hljs-tag","toggle-container"],"mappings":"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","file":"static/js/14.92cf2892.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport cx from \"classnames\"\nimport { renderToStaticMarkup } from \"react-dom/server\"\nimport { Light as Editor } from \"react-syntax-highlighter\"\nimport languageXml from \"react-syntax-highlighter/dist/languages/hljs/xml\"\nimport { Tab } from \"@porsche/ui-kit-react\"\nimport { Spacing, Flex } from \"@porscheui/porsche-ui-kit\"\n\n// More themes at https://highlightjs.org/static/demo/\nimport editorTheme from \"react-syntax-highlighter/dist/styles/hljs/solarized-dark\"\n\nEditor.registerLanguage(\"xml\", languageXml)\n\nimport styles from \"./example.module.scss\"\n\nexport interface ExampleProps {\n  noHTML?: boolean\n  noTheme?: boolean\n  noSCSS?: boolean\n}\n\nexport const Example: React.FunctionComponent<ExampleProps> = (props) => {\n  const [theme, setTheme] = useState(\"default\")\n  const [showHTML, setShowHTML] = useState(false)\n  const [showSCSS, setShowSCSS] = useState(false)\n\n  const renderClasses = cx(styles.render, { [styles.light]: theme === \"default\" }, { [styles.dark]: theme === \"inverted\" })\n\n  const handleShowClicked = (name: string) => {\n    if (name === \"html\") {\n      setShowHTML(!showHTML)\n      setShowSCSS(showSCSS === true ? false : false)\n    } else if (name === \"scss\") {\n      setShowSCSS(!showSCSS)\n      setShowHTML(showHTML === true ? false : false)\n    }\n  }\n\n  const handleThemeClicked = (name: string) => {\n    if (name === \"default\") {\n      setTheme(\"default\")\n    } else if (name === \"inverted\") {\n      setTheme(\"inverted\")\n    }\n  }\n\n  const panes = [\n    { menuItem: \"Light\", key: \"Tab1\", active: theme === \"default\", onClick: () => handleThemeClicked(\"default\") },\n    { menuItem: \"Inverted\", key: \"Tab2\", active: theme === \"inverted\", onClick: () => handleThemeClicked(\"inverted\") }\n  ]\n\n  return (\n    <React.Fragment>\n      <Spacing marginTop={12}>\n        <div className={styles.example}>\n          {props.noTheme !== true && <Tab panes={panes} alignment=\"left\" mini divider={false} />}\n          <div className={renderClasses}>{renderNode(props.children, theme)}</div>\n          {(!props.noHTML || !props.noSCSS) && (\n            <React.Fragment>\n              <Flex className={styles[\"toggle-container\"]} justifyContent=\"end\">\n                {!props.noHTML && (\n                  <button\n                    className={cx(styles.toggle, {\n                      [styles.open]: showHTML\n                    })}\n                    onClick={() => handleShowClicked(\"html\")}\n                  >\n                    {showHTML ? \"- HTML\" : \"+ HTML\"}\n                  </button>\n                )}\n                {!props.noSCSS && (\n                  <button\n                    className={cx(styles.toggle, {\n                      [styles.open]: showSCSS\n                    })}\n                    onClick={() => handleShowClicked(\"scss\")}\n                  >\n                    {showSCSS ? \"- SCSS\" : \"+ SCSS\"}\n                  </button>\n                )}\n              </Flex>\n              {showHTML && (\n                <div className={styles.codeblock}>\n                  <Editor language=\"xml\" style={editorTheme}>\n                    {renderHTML(props.children, theme)}\n                  </Editor>\n                </div>\n              )}\n              {showSCSS && (\n                <div className={styles.codeblock}>\n                  <Editor language=\"scss\" style={editorTheme}>\n                    # SCSS paths coming soon...\n                  </Editor>\n                </div>\n              )}\n            </React.Fragment>\n          )}\n        </div>\n      </Spacing>\n    </React.Fragment>\n  )\n}\n\nfunction renderNode(children: React.ReactNode, theme: string) {\n  return typeof children === \"function\" ? children(theme) : children\n}\n\nfunction renderHTML(children: React.ReactNode, theme: string) {\n  return formatXml(renderToStaticMarkup(renderNode(children, theme)))\n}\n\nfunction formatXml(xml: string): string {\n  let formatted = \"\"\n  const reg = /(>)(<)(\\/*)/g\n  xml = xml.replace(reg, \"$1\\r\\n$2$3\")\n  let pad = 0\n  xml.split(\"\\r\\n\").forEach((node, index) => {\n    let indent = 0\n    if (node.match(/.+<\\/\\w[^>]*>$/)) {\n      indent = 0\n    } else if (node.match(/^<\\/\\w/)) {\n      if (pad !== 0) {\n        pad -= 1\n      }\n    } else if (node.match(/^<\\w[^>]*[^\\/]>.*$/)) {\n      indent = 1\n    } else {\n      indent = 0\n    }\n\n    let padding = \"\"\n    for (let i = 0; i < pad; i++) {\n      padding += \"  \"\n    }\n\n    formatted += padding + node + \"\\r\\n\"\n    pad += indent\n  })\n\n  return formatted\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example\":\"example_example__1Nagt\",\"codeblock\":\"example_codeblock__3-_qV\",\"hljs-tag\":\"example_hljs-tag__NY2w4\",\"render\":\"example_render__mfsjh\",\"light\":\"example_light__3OW-k\",\"dark\":\"example_dark__Nsu00\",\"toggle-container\":\"example_toggle-container__LmTsK\",\"toggle\":\"example_toggle__1pB1a\",\"open\":\"example_open__2AjqQ\"};"],"sourceRoot":""}