// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`extendMarkupWithAppComponent() should return correct markup 1`] = `
"import { ChangeDetectionStrategy, Component } from '@angular/core';

@Component({
  selector: 'porsche-design-system-app',
  template: \`
    Some mocked markup
  \`,
  changeDetection: ChangeDetectionStrategy.OnPush,
})
export class AppComponent {}"
`;

exports[`extractInlineStyles() should extract inline styles for stable version 1`] = `
"@use '@porsche-design-system/components-js/styles' as *;
.div {
  color: $pds-theme-light-primary;
}"
`;

exports[`extractInlineStyles() should extract inline styles for temporary version 1`] = `
"@use '../../@porsche-design-system/components-js/styles' as *;
.div {
  color: $pds-theme-light-primary;
}"
`;

exports[`getAppComponentTs() should replace styles with styleUrls for hasInlineScss = true 1`] = `
"@Component({
  selector: 'porsche-design-system-app',
  styleUrls: ['./app.component.scss'],
  template: \` <div></div> \`,
})
export class AppComponent {}"
`;

exports[`getAppModuleTs() development mode or non stable storefront release (e.g. /issue/…, /release/…) should return correct markup for [] as externalDependencies 1`] = `
"import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import * as porscheDesignSystem from './../../@porsche-design-system/components-js';
import { AppComponent } from './app.component';
@NgModule({
  imports: [BrowserModule, FormsModule],
  declarations: [AppComponent],
  schemas: [CUSTOM_ELEMENTS_SCHEMA],
  bootstrap: [AppComponent],
})
export class AppModule {constructor () { porscheDesignSystem.load(); }}"
`;

exports[`getAppModuleTs() development mode or non stable storefront release (e.g. /issue/…, /release/…) should return correct markup with externalDependencies 1`] = `
"import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import * as porscheDesignSystem from './../../@porsche-design-system/components-js';
import { AppComponent } from './app.component';
import { IMaskModule } from 'angular-imask';
@NgModule({
  imports: [BrowserModule, FormsModule, IMaskModule],
  declarations: [AppComponent],
  schemas: [CUSTOM_ELEMENTS_SCHEMA],
  bootstrap: [AppComponent],
})
export class AppModule {constructor () { porscheDesignSystem.load(); }}"
`;

exports[`getAppModuleTs() development mode or non stable storefront release (e.g. /issue/…, /release/…) should return correct markup with passed pdsVersion 1`] = `
"import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import { PorscheDesignSystemModule } from '@porsche-design-system/components-angular';
import { AppComponent } from './app.component';
@NgModule({
  imports: [BrowserModule, FormsModule, PorscheDesignSystemModule],
  declarations: [AppComponent],
  schemas: [],
  bootstrap: [AppComponent],
})
export class AppModule {}"
`;

exports[`getAppModuleTs() stable storefront release (e.g. /v2/…, /v3/…) should return correct markup for [] as externalDependencies 1`] = `
"import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import { PorscheDesignSystemModule } from '@porsche-design-system/components-angular';
import { AppComponent } from './app.component';
@NgModule({
  imports: [BrowserModule, FormsModule, PorscheDesignSystemModule],
  declarations: [AppComponent],
  schemas: [],
  bootstrap: [AppComponent],
})
export class AppModule {}"
`;

exports[`getAppModuleTs() stable storefront release (e.g. /v2/…, /v3/…) should return correct markup with externalDependencies 1`] = `
"import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import { PorscheDesignSystemModule } from '@porsche-design-system/components-angular';
import { AppComponent } from './app.component';
import { IMaskModule } from 'angular-imask';
@NgModule({
  imports: [BrowserModule, FormsModule, PorscheDesignSystemModule, IMaskModule],
  declarations: [AppComponent],
  schemas: [],
  bootstrap: [AppComponent],
})
export class AppModule {}"
`;

exports[`getAppModuleTs() stable storefront release (e.g. /v2/…, /v3/…) should return correct markup with passed pdsVersion 1`] = `
"import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import { PorscheDesignSystemModule } from '@porsche-design-system/components-angular';
import { AppComponent } from './app.component';
@NgModule({
  imports: [BrowserModule, FormsModule, PorscheDesignSystemModule],
  declarations: [AppComponent],
  schemas: [],
  bootstrap: [AppComponent],
})
export class AppModule {}"
`;

exports[`getIndexHtml() should return correct markup with styles 1`] = `
<!doctype html>
<html lang="en">

  <head>
    <meta charset="utf-8" />
    <title>Porsche Design System - Angular</title>

    <!-- prettier-ignore -->
    <style data-pds-initial-styles>
      html,
      body {
        margin: 0;
        padding: 0;
        font-family: 'Porsche Next', 'Arial Narrow', Arial, 'Heiti SC', SimHei, sans-serif;
        line-height: calc(6px + 2.125ex);
        letter-spacing: normal;
        text-size-adjust: none;
        -webkit-text-size-adjust: none
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-weight: 600
      }

      p {
        hyphens: auto;
        font-weight: 400;
        overflow-wrap: break-word
      }

      b,
      strong {
        font-weight: 700
      }

      :is(p-accordion, p-banner, p-button, p-button-group, p-button-pure, p-button-tile, p-canvas, p-carousel, p-checkbox, p-checkbox-wrapper, p-content-wrapper, p-crest, p-display, p-divider, p-fieldset, p-fieldset-wrapper, p-flex, p-flex-item, p-flyout, p-flyout-multilevel, p-flyout-multilevel-item, p-grid, p-grid-item, p-heading, p-headline, p-icon, p-inline-notification, p-link, p-link-pure, p-link-social, p-link-tile, p-link-tile-model-signature, p-link-tile-product, p-marque, p-modal, p-model-signature, p-multi-select, p-multi-select-option, p-optgroup, p-pagination, p-pin-code, p-popover, p-radio-button-wrapper, p-scroller, p-segmented-control, p-segmented-control-item, p-select, p-select-option, p-select-wrapper, p-sheet, p-spinner, p-stepper-horizontal, p-stepper-horizontal-item, p-switch, p-table, p-table-body, p-table-cell, p-table-head, p-table-head-cell, p-table-head-row, p-table-row, p-tabs, p-tabs-bar, p-tabs-item, p-tag, p-tag-dismissible, p-text, p-text-field-wrapper, p-text-list, p-text-list-item, p-textarea, p-textarea-wrapper, p-toast, p-wordmark):not(:defined, .ssr, [data-ssr]) {
        visibility: hidden
      }
    </style>

    <style>
      html,
      body {
        margin: 0;
        padding: 0;
      }

      some styles
    </style>
  </head>

  <body dir="ltr">
    <porsche-design-system-app></porsche-design-system-app>
  </body>

</html>
`;

exports[`getIndexHtml() should return correct markup with styles and rtl mode 1`] = `
<!doctype html>
<html lang="en">

  <head>
    <meta charset="utf-8" />
    <title>Porsche Design System - Angular</title>

    <!-- prettier-ignore -->
    <style data-pds-initial-styles>
      html,
      body {
        margin: 0;
        padding: 0;
        font-family: 'Porsche Next', 'Arial Narrow', Arial, 'Heiti SC', SimHei, sans-serif;
        line-height: calc(6px + 2.125ex);
        letter-spacing: normal;
        text-size-adjust: none;
        -webkit-text-size-adjust: none
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-weight: 600
      }

      p {
        hyphens: auto;
        font-weight: 400;
        overflow-wrap: break-word
      }

      b,
      strong {
        font-weight: 700
      }

      :is(p-accordion, p-banner, p-button, p-button-group, p-button-pure, p-button-tile, p-canvas, p-carousel, p-checkbox, p-checkbox-wrapper, p-content-wrapper, p-crest, p-display, p-divider, p-fieldset, p-fieldset-wrapper, p-flex, p-flex-item, p-flyout, p-flyout-multilevel, p-flyout-multilevel-item, p-grid, p-grid-item, p-heading, p-headline, p-icon, p-inline-notification, p-link, p-link-pure, p-link-social, p-link-tile, p-link-tile-model-signature, p-link-tile-product, p-marque, p-modal, p-model-signature, p-multi-select, p-multi-select-option, p-optgroup, p-pagination, p-pin-code, p-popover, p-radio-button-wrapper, p-scroller, p-segmented-control, p-segmented-control-item, p-select, p-select-option, p-select-wrapper, p-sheet, p-spinner, p-stepper-horizontal, p-stepper-horizontal-item, p-switch, p-table, p-table-body, p-table-cell, p-table-head, p-table-head-cell, p-table-head-row, p-table-row, p-tabs, p-tabs-bar, p-tabs-item, p-tag, p-tag-dismissible, p-text, p-text-field-wrapper, p-text-list, p-text-list-item, p-textarea, p-textarea-wrapper, p-toast, p-wordmark):not(:defined, .ssr, [data-ssr]) {
        visibility: hidden
      }
    </style>

    <style>
      html,
      body {
        margin: 0;
        padding: 0;
      }

      some styles
    </style>
  </head>

  <body dir="rtl">
    <porsche-design-system-app></porsche-design-system-app>
  </body>

</html>
`;

exports[`getMainTs() should return correct markup 1`] = `
"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
import { AppModule } from './app/app.module';
import 'zone.js';

platformBrowserDynamic()
  .bootstrapModule(AppModule)
  .catch((err) => console.error(err));"
`;
