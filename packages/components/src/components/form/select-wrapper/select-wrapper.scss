@import '../../../../../../packages/utilities/projects/utilities/scss';
@import '../../../styles/internal.variables';
@import '../../../styles/mixins';

:host {
  display: block;
}

$root: '.root';

::slotted(select) {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 100% !important;
  display: block !important;
  padding: p-px-to-rem(12px) p-px-to-rem(48px) p-px-to-rem(12px) p-px-to-rem(12px) !important;
  @-moz-document url-prefix() {
    // fix for 3px text-indention in FF
    padding-left: p-px-to-rem(8px) !important;
  }
  margin: 0 !important;
  outline: transparent solid 1px !important;
  outline-offset: 2px !important;
  appearance: none !important;
  box-sizing: border-box !important;
  border-width: 0 !important;
  border-top-color: transparent !important;
  background-color: transparent !important;
  opacity: 1 !important;
  font-family: $p-font-family !important;
  font-weight: $p-font-weight-regular !important;
  font-size: $p-font-size-small !important;
  line-height: p-calculate-line-height($p-font-size-small) !important;
  color: inherit;
  text-indent: 0 !important;
  cursor: pointer !important;
  transition: color $p-animation-hover-duration-var $p-animation-hover-bezier, border-top-color 1ms linear !important; // used for transitionend event listener;
}

// Focus
::slotted(select:focus),
.#{$p-global-class-prefix}select-wrapper__filter-input:focus + span {
  outline-color: $p-color-neutral-contrast-medium !important;
}

:host([theme='dark']) ::slotted(select:focus),
:host([theme='dark']) .#{$p-global-class-prefix}select-wrapper__filter-input:focus + span {
  outline-color: $p-color-theme-dark-neutral-contrast-medium !important;
}

:host([state='success']) ::slotted(select:focus),
:host([state='success']) .#{$p-global-class-prefix}select-wrapper__filter-input:focus + span {
  outline-color: $p-color-notification-success !important;
}

:host([theme='dark'][state='success']) ::slotted(select:focus),
:host([theme='dark'][state='success']) .#{$p-global-class-prefix}select-wrapper__filter-input:focus + span {
  outline-color: $p-color-theme-dark-notification-success !important;
}

:host([state='error']) ::slotted(select:focus),
:host([state='error']) .#{$p-global-class-prefix}select-wrapper__filter-input:focus + span {
  outline-color: $p-color-notification-error !important;
}

:host([theme='dark'][state='error']) ::slotted(select:focus),
:host([theme='dark'][state='error']) .#{$p-global-class-prefix}select-wrapper__filter-input:focus + span {
  outline-color: $p-color-theme-dark-notification-error !important;
}

// Disabled
::slotted(select:disabled) {
  border-top-color: rgba(255, 255, 255, 0.01) !important;
  color: $p-color-state-disabled !important;
  cursor: not-allowed !important;
}

#{$root} {
  display: block;
  position: relative;
  color: $p-color-default;

  &--theme-dark {
    color: $p-color-theme-dark-default;
  }

  &--success {
    + .message {
      color: $p-color-notification-success;

      @at-root #{$root}--theme-dark#{&} {
        color: $p-color-theme-dark-notification-success;
      }
    }
  }

  &--error {
    + .message {
      color: $p-color-notification-error;

      @at-root #{$root}--theme-dark#{&} {
        color: $p-color-theme-dark-notification-error;
      }
    }
  }
}

.label {
  $bem-block: &;
  display: block;

  &--visible #{$bem-block}__text {
    @include text-visible;
  }

  &--hidden #{$bem-block}__text {
    @include text-hidden;
  }

  @include p-media-query('xs') {
    &--visible-xs #{$bem-block}__text {
      @include text-visible;
    }

    &--hidden-xs #{$bem-block}__text {
      @include text-hidden;
    }
  }

  @include p-media-query('s') {
    &--visible-s #{$bem-block}__text {
      @include text-visible;
    }

    &--hidden-s #{$bem-block}__text {
      @include text-hidden;
    }
  }

  @include p-media-query('m') {
    &--visible-m #{$bem-block}__text {
      @include text-visible;
    }

    &--hidden-m #{$bem-block}__text {
      @include text-hidden;
    }
  }

  @include p-media-query('l') {
    &--visible-l #{$bem-block}__text {
      @include text-visible;
    }

    &--hidden-l #{$bem-block}__text {
      @include text-hidden;
    }
  }

  @include p-media-query('xl') {
    &--visible-xl #{$bem-block}__text {
      @include text-visible;
    }

    &--hidden-xl #{$bem-block}__text {
      @include text-hidden;
    }
  }

  &--disabled #{$bem-block}__text {
    color: $p-color-state-disabled;
  }

  &__text {
    display: block;
    width: fit-content;
    transition: color $p-animation-hover-duration-var $p-animation-hover-bezier;

    &--description {
      color: $p-color-neutral-contrast-medium;
    }

    + #{$bem-block}__text--description {
      margin-top: -$p-spacing-4;
      padding-bottom: $p-spacing-8;
    }

    // &:hover ~ ::slotted(input:not(:disabled):not([readonly])) {
    //   border-color: $p-color-default !important;
    // }
  }
}

.required {
  @include required;

  #{$root}--theme-dark & {
    @include required('dark');
  }
}

.message {
  margin-top: $p-spacing-4;
  color: $p-color-default; // TODO: might never be visible like this
  transition: color $p-animation-hover-duration-var $p-animation-hover-bezier;
}

.fake-select {
  display: block;
  position: relative;
  width: 100%;
  height: p-px-to-rem(48px);
  background-color: $p-color-background-default;
  box-shadow: inset 0 0 0 1px $p-color-neutral-contrast-medium;
  transition: box-shadow $p-animation-hover-duration-var $p-animation-hover-bezier,
    background-color $p-animation-hover-duration-var $p-animation-hover-bezier;

  &:hover &:not(&--disabled):not(&--success):not(&--error) {
    box-shadow: inset 0 0 0 1px $p-color-neutral-contrast-high;
  }

  #{$root}--theme-dark & {
    background-color: $p-color-theme-dark-background-default;
    box-shadow: inset 0 0 0 1px $p-color-theme-dark-neutral-contrast-medium;

    &:hover &:not(&--disabled):not(&--success):not(&--error) {
      box-shadow: inset 0 0 0 1px $p-color-theme-dark-neutral-contrast-high;
    }
  }

  &--disabled {
    background-color: $p-color-background-default;
    box-shadow: inset 0 0 0 1px $p-color-state-disabled;

    #{$root}--theme-dark & {
      background-color: $p-color-default;
      box-shadow: inset 0 0 0 1px $p-color-theme-dark-state-disabled;
    }
  }

  #{$root}--success & {
    box-shadow: inset 0 0 0 2px $p-color-notification-success;

    #{$root}--theme-dark & {
      box-shadow: inset 0 0 0 2px $p-color-theme-dark-notification-success;
    }

    &:hover, // TODO: not selector
    .label:hover ~ & {
      box-shadow: inset 0 0 0 2px darken($p-color-notification-success, 12%);

      #{$root}--theme-dark & {
        box-shadow: inset 0 0 0 2px darken($p-color-theme-dark-notification-success, 12%);
      }
    }
  }

  #{$root}--error & {
    box-shadow: inset 0 0 0 2px $p-color-notification-error;

    #{$root}--theme-dark & {
      box-shadow: inset 0 0 0 2px $p-color-theme-dark-notification-error;
    }

    &:hover, // TODO: not selector
    .label:hover ~ & {
      box-shadow: inset 0 0 0 2px darken($p-color-notification-error, 12%);

      #{$root}--theme-dark & {
        box-shadow: inset 0 0 0 2px darken($p-color-theme-dark-notification-error, 12%);
      }
    }
  }
}

.icon {
  position: absolute;
  top: p-px-to-rem(12px);
  right: p-px-to-rem(12px);
  transition: transform $p-animation-hover-duration-var $p-animation-hover-bezier;
  color: $p-color-default;

  #{$root}--theme-dark & {
    color: $p-color-theme-dark-default;
  }

  &--disabled {
    color: $p-color-state-disabled;

    #{$root}--theme-dark & {
      color: $p-color-theme-dark-state-disabled;
    }
  }

  &--opened {
    transform: rotate(180deg);
  }
}

input {
  position: absolute;
  z-index: 1;
  bottom: 2px;
  left: 2px;
  display: block;
  width: calc(100% - #{p-px-to-rem(44px)});
  height: p-px-to-rem(44px);
  padding: p-px-to-rem(10px);
  outline: transparent none;
  appearance: none;
  box-sizing: border-box;
  border: none;
  opacity: 0;
  font-family: $p-font-family;
  font-weight: $p-font-weight-regular;
  font-size: $p-font-size-small;
  line-height: p-calculate-line-height($p-font-size-small);
  text-indent: 0;
  cursor: text;
  color: $p-color-default;
  background-color: $p-color-background-default;

  #{$root}--theme-dark & {
    color: $p-color-theme-dark-default;
    background-color: $p-color-theme-dark-background-default;
  }

  &::placeholder {
    opacity: 1;
    color: $p-color-default;

    #{$root}--theme-dark & {
      color: $p-color-theme-dark-default;
    }
  }

  &::-webkit-input-placeholder {
    opacity: 1;
    color: $p-color-default;

    #{$root}--theme-dark & {
      color: $p-color-theme-dark-default;
    }
  }

  &::-moz-placeholder {
    opacity: 1;
    color: $p-color-default;

    #{$root}--theme-dark & {
      color: $p-color-theme-dark-default;
    }
  }

  &:-ms-input-placeholder {
    opacity: 1;
    color: $p-color-default;

    #{$root}--theme-dark & {
      color: $p-color-theme-dark-default;
    }
  }

  // TODO: why with just one ':'?
  &:-moz-placeholder {
    opacity: 1;
    color: $p-color-default;

    #{$root}--theme-dark & {
      color: $p-color-theme-dark-default;
    }
  }

  + span {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: p-px-to-rem(48px);
    outline: transparent solid 1px;
    outline-offset: 2px;
    transition: box-shadow $p-animation-hover-duration-var $p-animation-hover-bezier;
    pointer-events: all;
    cursor: pointer;
    box-shadow: inset 0 0 0 1px $p-color-neutral-contrast-medium;

    #{$root}:hover & {
      box-shadow: inset 0 0 0 1px $p-color-neutral-contrast-high;
    }

    #{$root}--theme-dark & {
      box-shadow: inset 0 0 0 1px $p-color-theme-dark-neutral-contrast-medium;

      &:hover & {
        box-shadow: inset 0 0 0 1px $p-color-theme-dark-neutral-contrast-high;
      }
    }
  }

  &:hover:not(&--disabled):not(&--success):not(&--error) + span {
    box-shadow: inset 0 0 0 1px $p-color-neutral-contrast-high;

    #{$root}--theme-dark & {
      box-shadow: inset 0 0 0 1px $p-color-theme-dark-neutral-contrast-high;
    }
  }

  label:hover + &:not(&--disabled):not(&--success):not(&--error) + span {
    box-shadow: inset 0 0 0 1px $p-color-neutral-contrast-high;
  }

  #{$root}--theme-dark label:hover + &:not(&--disabled):not(&--success):not(&--error) + span {
    box-shadow: inset 0 0 0 1px $p-color-theme-dark-neutral-contrast-high;
  }

  &:focus {
    opacity: 1;
  }

  &:disabled {
    cursor: not-allowed;

    + span {
      cursor: not-allowed;
      box-shadow: inset 0 0 0 1px $p-color-state-disabled;

      #{$root}--theme-dark & {
        box-shadow: inset 0 0 0 1px $p-color-theme-dark-state-disabled;
      }
    }
  }

  #{$root}--success {
    + span {
      box-shadow: inset 0 0 0 2px $p-color-notification-success;

      #{$root}--theme-dark & {
        box-shadow: inset 0 0 0 2px $p-color-theme-dark-notification-success;
      }
    }

    &:hover + span {
      box-shadow: inset 0 0 0 2px darken($p-color-notification-success, 12%);

      #{$root}--theme-dark & {
        box-shadow: inset 0 0 0 2px darken($p-color-theme-dark-notification-success, 12%);
      }
    }

    label:hover + & + span {
      box-shadow: inset 0 0 0 2px darken($p-color-notification-success, 12%);
    }

    #{$root}--theme-dark label:hover + & + span {
      box-shadow: inset 0 0 0 2px darken($p-color-theme-dark-notification-success, 12%);
    }
  }

  #{$root}--error {
    + span {
      box-shadow: inset 0 0 0 2px $p-color-notification-error;

      #{$root}--theme-dark & {
        box-shadow: inset 0 0 0 2px $p-color-theme-dark-notification-error;
      }
    }

    &:hover + span {
      box-shadow: inset 0 0 0 2px darken($p-color-notification-error, 12%);

      #{$root}--theme-dark & {
        box-shadow: inset 0 0 0 2px darken($p-color-theme-dark-notification-error, 12%);
      }
    }

    label:hover + & + span {
      box-shadow: inset 0 0 0 2px darken($p-color-notification-error, 12%);
    }

    #{$root}--theme-dark label:hover + & + span {
      box-shadow: inset 0 0 0 2px darken($p-color-theme-dark-notification-error, 12%);
    }
  }
}
