@import '../../../../../../packages/utilities/projects/utilities/scss';
@import '../../../styles/internal.variables';

@mixin p-text-field-wrapper-label-text-visible() {
  position: static;
  width: fit-content;
  height: auto;
  margin: 0;
  padding: 0 0 $p-spacing-4 0;
  white-space: normal;
  overflow: visible;
  clip: auto;
  clip-path: none;
}

@mixin p-text-field-wrapper-label-text-hidden() {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  white-space: nowrap;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
}

:host {
  display: block;
}

::slotted(input) {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 100% !important;
  display: block !important;
  padding: p-px-to-rem(11px) !important;
  margin: 0 !important;
  outline: transparent solid 1px !important;
  outline-offset: 2px !important;
  appearance: none !important;
  box-sizing: border-box !important;
  border-width: 1px !important;
  border-color: transparent !important;
  border-radius: 0 !important;
  background-color: transparent !important;
  opacity: 1 !important;
  font-family: $p-font-family !important;
  font-weight: $p-font-weight-regular !important;
  font-size: $p-font-size-small !important;
  line-height: p-calculate-line-height($p-font-size-small) !important;
  text-indent: 0 !important;
  color: $p-color-default !important;
  transition: color $p-animation-hover-duration $p-animation-hover-bezier, border-top-color 1ms linear !important; // used for transitionend event listener;
}

// Focus
::slotted(input:focus) {
  outline-color: $p-color-neutral-contrast-medium !important;
}

:host([state='success']) ::slotted(input:focus) {
  outline-color: $p-color-notification-success !important;
}

:host([state='error']) ::slotted(input:focus) {
  outline-color: $p-color-notification-error !important;
}

::slotted(input:read-only:focus),
:host([state]) ::slotted(input:read-only:focus) {
  outline-color: transparent !important;
}

:host([state='success']) .#{$p-global-class-prefix}text-field-wrapper__button:focus,
:host([state='error']) .#{$p-global-class-prefix}text-field-wrapper__button:focus {
  outline-offset: -5px !important;
}

::slotted(input[type='search']),
::slotted(input[type='password']) {
  padding-right: 3rem !important;
}

// Read only
::slotted(input:not(:disabled):read-only) {
  border-width: 0 !important;
  padding: p-px-to-rem(12px) !important;
  border-top-color: rgba(255, 255, 255, 0.01) !important;
  color: $p-color-neutral-contrast-medium !important;
}

// Disabled
::slotted(input:disabled) {
  border-width: 0 !important;
  padding: p-px-to-rem(12px) !important;
  border-top-color: rgba(255, 255, 255, 0.02) !important;
  color: $p-color-state-disabled !important;
  -webkit-text-fill-color: $p-color-state-disabled !important; // fix placeholder color bug in Safari
  cursor: not-allowed !important;
}

// Reset webkit autofill styles
::slotted(input:-internal-autofill-selected),
::slotted(input:-internal-autofill-previewed),
::slotted(input:-webkit-autofill),
::slotted(input:-webkit-autofill:focus) {
  -webkit-background-clip: padding-box !important;
}

.#{$p-global-class-prefix}text-field-wrapper {
  $bem-block: &;

  &__container {
    position: relative;
    display: block;
  }

  &__label {
    display: block;
  }

  &__label-text,
  &__description-text {
    display: block;
    width: fit-content;
    color: $p-color-default;
    transition: color $p-animation-hover-duration $p-animation-hover-bezier;

    &--disabled {
      color: $p-color-state-disabled;
    }

    &--visible {
      @include p-text-field-wrapper-label-text-visible;
    }

    &--hidden {
      @include p-text-field-wrapper-label-text-hidden;
    }

    @include p-media-query('xs') {
      &--visible-xs {
        @include p-text-field-wrapper-label-text-visible;
      }

      &--hidden-xs {
        @include p-text-field-wrapper-label-text-hidden;
      }
    }

    @include p-media-query('s') {
      &--visible-s {
        @include p-text-field-wrapper-label-text-visible;
      }

      &--hidden-s {
        @include p-text-field-wrapper-label-text-hidden;
      }
    }

    @include p-media-query('m') {
      &--visible-m {
        @include p-text-field-wrapper-label-text-visible;
      }

      &--hidden-m {
        @include p-text-field-wrapper-label-text-hidden;
      }
    }

    @include p-media-query('l') {
      &--visible-l {
        @include p-text-field-wrapper-label-text-visible;
      }

      &--hidden-l {
        @include p-text-field-wrapper-label-text-hidden;
      }
    }

    @include p-media-query('xl') {
      &--visible-xl {
        @include p-text-field-wrapper-label-text-visible;
      }

      &--hidden-xl {
        @include p-text-field-wrapper-label-text-hidden;
      }
    }
  }

  &__required {
    &::after {
      content: '*';
      color: $p-color-notification-error;
    }
  }

  &__description-text {
    color: $p-color-neutral-contrast-medium;

    &--disabled {
      color: $p-color-state-disabled;
    }

    #{$bem-block}__label-text ~ & {
      margin-top: -$p-spacing-4;
      padding-bottom: $p-spacing-8;
    }
  }

  &__fake-input {
    position: relative;
    width: 100%;
    height: p-px-to-rem(48px);
    display: block;
    background-color: $p-color-background-default;
    box-shadow: inset 0 0 0 1px $p-color-neutral-contrast-medium;
    transition: box-shadow $p-animation-hover-duration $p-animation-hover-bezier,
      background-color $p-animation-hover-duration $p-animation-hover-bezier;

    &:hover:not(&--disabled):not(&--readonly):not(&--success):not(&--error),
    #{$bem-block}__label-text:hover ~ &:not(&--disabled):not(&--readonly):not(&--success):not(&--error) {
      box-shadow: inset 0 0 0 1px $p-color-default;
    }

    &--disabled {
      box-shadow: inset 0 0 0 1px $p-color-state-disabled;
      background-color: $p-color-background-default;
    }

    &--readonly {
      box-shadow: inset 0 0 0 1px #ebebeb;
      background-color: #ebebeb;
    }

    &--success {
      box-shadow: inset 0 0 0 2px $p-color-notification-success;

      &:hover,
      #{$bem-block}__label-text:hover ~ & {
        box-shadow: inset 0 0 0 2px darken($p-color-notification-success, 12%);
      }
    }

    &--error {
      box-shadow: inset 0 0 0 2px $p-color-notification-error;

      &:hover,
      #{$bem-block}__label-text:hover ~ & {
        box-shadow: inset 0 0 0 2px darken($p-color-notification-error, 12%);
      }
    }
  }

  &__message {
    margin-top: $p-spacing-4;
    color: $p-color-default;
    transition: color $p-animation-hover-duration $p-animation-hover-bezier;

    &--success {
      color: $p-color-notification-success;
    }

    &--error {
      color: $p-color-notification-error;
    }
  }

  &__button {
    @include p-focus($p-color-state-focus, -4px);
    position: absolute;
    bottom: 0;
    right: 0;
    margin: 0;
    width: p-px-to-rem(48px);
    height: p-px-to-rem(48px);
    padding: p-px-to-rem(12px);
    box-sizing: border-box;
    outline: transparent none;
    appearance: none;
    border: none;
    text-decoration: none;
    background: transparent;
    cursor: pointer;
    color: $p-color-default;
    transition: color $p-animation-hover-duration $p-animation-hover-bezier;

    &:hover {
      color: $p-color-state-hover;
    }

    &:active {
      color: $p-color-state-active;
    }

    &:disabled {
      color: $p-color-state-disabled;
      cursor: not-allowed;
    }
  }
}
