@import '../../../../../../packages/utilities/projects/utilities/scss';
@import '../../../styles/internal.variables';
@import '../../../styles/mixins';

@mixin p-checkbox-wrapper-checked-image() {
  $color: str-replace('#{$p-color-background-default}', '#', '%23');
  background-image: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="#{$color}" d="M9 19l-6-7h1.5l4.49 5.36L19.5 5H21L9 19z"/></svg>') !important;
}

@mixin p-checkbox-wrapper-indeterminate-image() {
  $color: str-replace('#{$p-color-background-default}', '#', '%23');
  background-image: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="#{$color}" d="M3 11h18v1H3z"/></svg>') !important;
}

:host {
  display: block;
}

::slotted(input) {
  position: static !important;
  height: p-px-to-rem(24px) !important;
  width: p-px-to-rem(24px) !important;
  flex-shrink: 0 !important;
  display: block !important;
  margin: 0 !important;
  padding: 0 !important;
  appearance: none !important;
  box-sizing: border-box !important;
  background-size: p-px-to-rem(24px) !important;
  background-position: -1px -1px !important;
  background-color: $p-color-background-default !important;
  transition: border $p-animation-hover-duration-var $p-animation-hover-bezier,
    background-color $p-animation-hover-duration-var $p-animation-hover-bezier !important;
  opacity: 1 !important;
  border: $p-color-neutral-contrast-medium solid 1px !important;
  border-radius: 0 !important;
  outline: transparent solid 1px !important;
  outline-offset: 2px !important;
  cursor: pointer !important;
}

::slotted(input:checked),
::slotted(input:indeterminate) {
  border-color: $p-color-neutral-contrast-high !important;
  background-color: $p-color-neutral-contrast-high !important;
}
::slotted(input:checked) {
  @include p-checkbox-wrapper-checked-image;
}

::slotted(input:indeterminate) {
  @include p-checkbox-wrapper-indeterminate-image;
}

::slotted(input:hover) {
  border-color: $p-color-default !important;
}

::slotted(input:indeterminate:disabled),
::slotted(input:checked:disabled) {
  background-color: $p-color-state-disabled !important;
}

::slotted(input:disabled) {
  cursor: not-allowed !important;
  border-color: $p-color-state-disabled !important;
}

::slotted(input:focus),
::slotted(input:focus-visible) {
  outline-color: $p-color-neutral-contrast-medium !important;
}

.root {
  $bem-block: &;
  position: relative;
  display: flex;

  @at-root ::slotted(input:focus:not(:focus-visible)),
    &--error ::slotted(input:focus:not(:focus-visible)),
    &--success ::slotted(input:focus:not(:focus-visible)) {
    outline-color: transparent !important;
  }

  &--error {
    ::slotted(input) {
      background-position: -2px -2px !important;
      border: $p-color-notification-error solid 2px !important;
    }
    ::slotted(input:checked) {
      background-color: $p-color-notification-error !important;

      // Needs to be set explicitly for safari
      border-color: $p-color-notification-error !important;
    }

    ::slotted(input:focus),
    ::slotted(input:focus-visible) {
      outline-color: $p-color-notification-error !important;
    }

    #{$bem-block}__text:hover ~ ::slotted(input),
    &:not(#{$bem-block}--disabled #{$bem-block}__text) ::slotted(input:hover) {
      border-color: darken($p-color-notification-error, 12%) !important;
    }

    + .message {
      color: $p-color-notification-error;
    }
  }

  &--success {
    ::slotted(input) {
      background-position: -2px -2px !important;
      border: $p-color-notification-success solid 2px !important;
    }
    ::slotted(input:checked) {
      background-color: $p-color-notification-success !important;

      // Needs to be set explicitly for safari
      border-color: $p-color-notification-success !important;
    }

    ::slotted(input:focus),
    ::slotted(input:focus-visible) {
      outline-color: $p-color-notification-success !important;
    }

    #{$bem-block}__text:hover ~ ::slotted(input),
    &:not(#{$bem-block}--disabled #{$bem-block}__text) ::slotted(input:hover) {
      border-color: darken($p-color-notification-success, 12%) !important;
    }

    + .message {
      color: $p-color-notification-success;
    }
  }

  &--disabled {
    #{$bem-block}__text {
      color: $p-color-state-disabled;
      cursor: default;
    }
  }

  &__text {
    order: 1;
    display: inline-block;
    cursor: pointer;
    color: $p-color-default;
    transition: color $p-animation-hover-duration-var $p-animation-hover-bezier;

    &:hover:not(#{$bem-block}--disabled #{$bem-block}__text):not(#{$bem-block}--success
        #{$bem-block}__text):not(#{$bem-block}--error #{$bem-block}__text)
      ~ ::slotted(input) {
      border-color: $p-color-default !important;
    }

    &--visible {
      @include text-visible(true);
    }

    &--hidden {
      @include text-hidden;
    }

    @include p-media-query('xs') {
      &--visible-xs {
        @include text-visible(true);
      }

      &--hidden-xs {
        @include text-hidden;
      }
    }

    @include p-media-query('s') {
      &--visible-s {
        @include text-visible(true);
      }

      &--hidden-s {
        @include text-hidden;
      }
    }

    @include p-media-query('m') {
      &--visible-m {
        @include text-visible(true);
      }

      &--hidden-m {
        @include text-hidden;
      }
    }

    @include p-media-query('l') {
      &--visible-l {
        @include text-visible(true);
      }

      &--hidden-l {
        @include text-hidden;
      }
    }

    @include p-media-query('xl') {
      &--visible-xl {
        @include text-visible(true);
      }

      &--hidden-xl {
        @include text-hidden;
      }
    }
  }
}

.required {
  @include required;
}

.message {
  margin-top: $p-spacing-4;
  transition: color $p-animation-hover-duration-var $p-animation-hover-bezier;
}
