@import '../../../../../../packages/utilities/projects/utilities/scss';
@import '../../../styles/internal.variables';

@mixin with-label() {
  padding: p-px-to-rem(11px) p-px-to-rem(15px) p-px-to-rem(11px) p-px-to-rem(39px);
}

@mixin without-label() {
  padding: 0;
}

@mixin label-with-label() {
  position: static;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0;
  overflow: visible;
  border: 0;
  clip: auto;
  clip-path: none;
}

@mixin label-without-label() {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
}

@mixin icon-with-label() {
  top: p-px-to-rem(11px);
  left: p-px-to-rem(11px);
  transform: translate3d(0, 0, 0);
}

@mixin icon-without-label() {
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0);
}

:host {
  display: inline-flex;
  vertical-align: top;
}

.root {
  $bem-block: &;
  display: flex;
  width: 100%;
  min-width: p-px-to-rem(48px);
  min-height: p-px-to-rem(48px);
  position: relative;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  appearance: none;
  text-decoration: none;
  text-align: left;
  border: 1px solid $p-color-neutral-contrast-high;
  color: $p-color-theme-dark-default;
  background-color: $p-color-neutral-contrast-high;
  transition: background-color $p-animation-hover-duration $p-animation-hover-bezier,
    border-color $p-animation-hover-duration $p-animation-hover-bezier,
    color $p-animation-hover-duration $p-animation-hover-bezier;
  cursor: pointer;
  @include p-focus($p-color-neutral-contrast-high);

  &--theme-dark {
    color: $p-color-default;
    background-color: $p-color-theme-dark-default;
    border-color: $p-color-theme-dark-default;
    @include p-focus($p-color-theme-dark-default);
  }

  &:not(:disabled) {
    &:hover,
    &:active {
      color: $p-color-theme-dark-default;
      background-color: darken($p-color-neutral-contrast-high, 12%);
      border-color: darken($p-color-neutral-contrast-high, 12%);

      &#{$bem-block}--theme-dark {
        color: $p-color-default;
        background-color: darken($p-color-theme-dark-default, 12%);
        border-color: darken($p-color-theme-dark-default, 12%);
      }
    }
  }

  &:disabled {
    cursor: not-allowed;
    color: rgba($p-color-theme-dark-default, 0.55);
    background-color: $p-color-state-disabled;
    border-color: $p-color-state-disabled;

    &#{$bem-block}--theme-dark {
      color: rgba($p-color-theme-dark-default, 0.55);
      background-color: $p-color-theme-dark-state-disabled;
      border-color: $p-color-theme-dark-state-disabled;
    }
  }

  &--primary {
    color: $p-color-theme-dark-default;
    background-color: $p-color-brand;
    border-color: $p-color-brand;
    @include p-focus($p-color-brand);

    &#{$bem-block}--theme-dark {
      color: $p-color-theme-dark-default;
      background-color: $p-color-theme-dark-brand;
      border-color: $p-color-theme-dark-brand;
      @include p-focus($p-color-theme-dark-brand);
    }

    &:not(:disabled) {
      &:hover,
      &:active {
        color: $p-color-theme-dark-default;
        background-color: darken($p-color-state-hover, 12%);
        border-color: darken($p-color-state-hover, 12%);

        &#{$bem-block}--theme-dark {
          color: $p-color-theme-dark-default;
          background-color: darken($p-color-theme-dark-state-hover, 12%);
          border-color: darken($p-color-theme-dark-state-hover, 12%);
        }
      }
    }

    &:disabled {
      color: rgba($p-color-theme-dark-default, 0.55);
      background-color: $p-color-state-disabled;
      border-color: $p-color-state-disabled;

      &#{$bem-block}--theme-dark {
        color: rgba($p-color-theme-dark-default, 0.55);
        background-color: $p-color-theme-dark-state-disabled;
        border-color: $p-color-theme-dark-state-disabled;
      }
    }
  }

  &--tertiary {
    color: $p-color-default;
    background-color: transparent;
    border-color: $p-color-neutral-contrast-high;

    &#{$bem-block}--theme-dark {
      color: $p-color-theme-dark-default;
      background-color: transparent;
      border-color: $p-color-theme-dark-default;
    }

    &:not(:disabled) {
      &:hover,
      &:active {
        color: $p-color-theme-dark-default;
        background-color: darken($p-color-neutral-contrast-high, 12%);
        border-color: darken($p-color-neutral-contrast-high, 12%);

        &#{$bem-block}--theme-dark {
          color: $p-color-default;
          background-color: $p-color-theme-dark-default;
          border-color: $p-color-theme-dark-default;
        }
      }
    }

    &:disabled {
      color: $p-color-state-disabled;
      background-color: transparent;
      border-color: $p-color-state-disabled;

      &#{$bem-block}--theme-dark {
        color: $p-color-theme-dark-state-disabled;
        background-color: transparent;
        border-color: $p-color-theme-dark-state-disabled;
      }
    }
  }

  &--with-label {
    @include with-label;

    .label {
      @include label-with-label;
    }

    .icon {
      @include icon-with-label;
    }
  }

  &--without-label {
    @include without-label;

    .label {
      @include label-without-label;
    }

    .icon {
      @include icon-without-label;
    }
  }

  @include p-media-query('xs') {
    &--with-label-xs {
      @include with-label;

      .label {
        @include label-with-label;
      }

      .icon {
        @include icon-with-label;
      }
    }

    &--without-label-xs {
      @include without-label;

      .label {
        @include label-without-label;
      }

      .icon {
        @include icon-without-label;
      }
    }
  }

  @include p-media-query('s') {
    &--with-label-s {
      @include with-label;

      .label {
        @include label-with-label;
      }

      .icon {
        @include icon-with-label;
      }
    }

    &--without-label-s {
      @include without-label;

      .label {
        @include label-without-label;
      }

      .icon {
        @include icon-without-label;
      }
    }
  }

  @include p-media-query('m') {
    &--with-label-m {
      @include with-label;

      .label {
        @include label-with-label;
      }

      .icon {
        @include icon-with-label;
      }
    }

    &--without-label-m {
      @include without-label;

      .label {
        @include label-without-label;
      }

      .icon {
        @include icon-without-label;
      }
    }
  }

  @include p-media-query('l') {
    &--with-label-l {
      @include with-label;

      .label {
        @include label-with-label;
      }

      .icon {
        @include icon-with-label;
      }
    }

    &--without-label-l {
      @include without-label;

      .label {
        @include label-without-label;
      }

      .icon {
        @include icon-without-label;
      }
    }
  }

  @include p-media-query('xl') {
    &--with-label-xl {
      @include with-label;

      .label {
        @include label-with-label;
      }

      .icon {
        @include icon-with-label;
      }
    }

    &--without-label-xl {
      @include without-label;

      .label {
        @include label-without-label;
      }

      .icon {
        @include icon-without-label;
      }
    }
  }
}

.label {
  display: block;
  box-sizing: border-box;
}

.icon {
  position: absolute;
  width: p-px-to-rem(24px);
  height: p-px-to-rem(24px);
}
