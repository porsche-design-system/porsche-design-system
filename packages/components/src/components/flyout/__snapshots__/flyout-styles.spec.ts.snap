// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getComponentCss() should return correct css for isOpen: false, position: end, hasHeader: false, hasFooter: false, hasSubFooter: false, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: hidden;
  pointer-events: none;
  background: transparent;
  transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), overlay var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 0;
  transform: translateX(100%);
  transition: opacity var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1), transform var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1);
}
.scroller:dir(rtl) {
  transform: translateX(-100%);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: false, position: end, hasHeader: false, hasFooter: false, hasSubFooter: true, footerBehavior: sticky, theme: dark 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: hidden;
  pointer-events: none;
  background: transparent;
  transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), overlay var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(0,0,0,.01);
  opacity: 0;
  transform: translateX(100%);
  transition: opacity var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1), transform var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1);
}
.scroller:dir(rtl) {
  transform: translateX(-100%);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #FBFCFF;
  background: #0E0E12;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: false, position: end, hasHeader: false, hasFooter: true, hasSubFooter: true, footerBehavior: sticky, theme: dark 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #0E0E12;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(0, 0, 0, 0.6) 0 -5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: hidden;
  pointer-events: none;
  background: transparent;
  transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), overlay var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(0,0,0,.01);
  opacity: 0;
  transform: translateX(100%);
  transition: opacity var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1), transform var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1);
}
.scroller:dir(rtl) {
  transform: translateX(-100%);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #FBFCFF;
  background: #0E0E12;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: false, position: end, hasHeader: true, hasFooter: false, hasSubFooter: false, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=header] {
  position: sticky;
  top: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: calc((clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px)) * -1) -16px;
  background: #FFF;
  clip-path: inset(0 0 -20px 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 3;
  margin-block-start: 0;
}
slot[name=header][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: hidden;
  pointer-events: none;
  background: transparent;
  transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), overlay var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 0;
  transform: translateX(100%);
  transition: opacity var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1), transform var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1);
}
.scroller:dir(rtl) {
  transform: translateX(-100%);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
  padding-block-start: 0;
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: false, position: left, hasHeader: false, hasFooter: false, hasSubFooter: false, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: hidden;
  pointer-events: none;
  background: transparent;
  transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), overlay var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-start: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 0;
  transform: translateX(-100%);
  transition: opacity var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1), transform var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1);
}
.scroller:dir(rtl) {
  transform: translateX(100%);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: false, position: right, hasHeader: false, hasFooter: false, hasSubFooter: false, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: hidden;
  pointer-events: none;
  background: transparent;
  transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), overlay var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 0;
  transform: translateX(100%);
  transition: opacity var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1), transform var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1);
}
.scroller:dir(rtl) {
  transform: translateX(-100%);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: false, position: start, hasHeader: false, hasFooter: false, hasSubFooter: false, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: hidden;
  pointer-events: none;
  background: transparent;
  transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), overlay var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-start: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 0;
  transform: translateX(-100%);
  transition: opacity var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1), transform var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1);
}
.scroller:dir(rtl) {
  transform: translateX(100%);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: false, position: start, hasHeader: false, hasFooter: false, hasSubFooter: true, footerBehavior: sticky, theme: dark 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: hidden;
  pointer-events: none;
  background: transparent;
  transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), overlay var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-start: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(0,0,0,.01);
  opacity: 0;
  transform: translateX(-100%);
  transition: opacity var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1), transform var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1);
}
.scroller:dir(rtl) {
  transform: translateX(100%);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #FBFCFF;
  background: #0E0E12;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: false, position: start, hasHeader: false, hasFooter: true, hasSubFooter: true, footerBehavior: sticky, theme: dark 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #0E0E12;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(0, 0, 0, 0.6) 0 -5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: hidden;
  pointer-events: none;
  background: transparent;
  transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0.4s), background-color var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), -webkit-backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), backdrop-filter var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1), overlay var(--p-transition-duration, 0.4s) cubic-bezier(0.4,0,0.5,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-start: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(0,0,0,.01);
  opacity: 0;
  transform: translateX(-100%);
  transition: opacity var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1), transform var(--p-transition-duration, 0.25s) cubic-bezier(0.4,0,0.5,1);
}
.scroller:dir(rtl) {
  transform: translateX(100%);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #FBFCFF;
  background: #0E0E12;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: false, hasFooter: false, hasSubFooter: false, footerBehavior: fixed, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
  padding-block-end: 0;
  grid-template-rows: 1fr;
}
.flyout::before {
  content: "";
  min-height: calc(100dvh - calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px)));
  grid-area: 1/1/3/-1;
  pointer-events: none;
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: false, hasFooter: false, hasSubFooter: false, footerBehavior: sticky, theme: auto 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@media (prefers-color-scheme: dark) {
  dialog {
    background: rgba(38, 38, 41, 0.67);
  }
}

@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}
@media (prefers-color-scheme: dark) {
  .scroller {
    background: rgba(0,0,0,.01);
  }
  .flyout {
    color: #FBFCFF;
    background: #0E0E12;
  }
}
"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: false, hasFooter: false, hasSubFooter: false, footerBehavior: sticky, theme: dark 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(38, 38, 41, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(0,0,0,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #FBFCFF;
  background: #0E0E12;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: false, hasFooter: false, hasSubFooter: false, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: false, hasFooter: false, hasSubFooter: true, footerBehavior: fixed, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
  grid-template-rows: 1fr;
}
.flyout::before {
  content: "";
  min-height: calc(100dvh - calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px)));
  grid-area: 1/1/3/-1;
  pointer-events: none;
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: false, hasFooter: false, hasSubFooter: true, footerBehavior: sticky, theme: auto 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@media (prefers-color-scheme: dark) {
  dialog {
    background: rgba(38, 38, 41, 0.67);
  }
}

@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}
@media (prefers-color-scheme: dark) {
  .scroller {
    background: rgba(0,0,0,.01);
  }
  .flyout {
    color: #FBFCFF;
    background: #0E0E12;
  }
}
"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: false, hasFooter: true, hasSubFooter: false, footerBehavior: fixed, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #FFF;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
  grid-row: 2;
  margin-block-end: .3px;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 -5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
  padding-block-end: 0;
  grid-template-rows: 1fr;
}
.flyout::before {
  content: "";
  min-height: calc(100dvh - calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px)));
  grid-area: 1/1/3/-1;
  pointer-events: none;
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: false, hasFooter: true, hasSubFooter: false, footerBehavior: sticky, theme: dark 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #0E0E12;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(0, 0, 0, 0.6) 0 -5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(38, 38, 41, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(0,0,0,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #FBFCFF;
  background: #0E0E12;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: false, hasFooter: true, hasSubFooter: false, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #FFF;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 -5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: false, hasFooter: true, hasSubFooter: true, footerBehavior: fixed, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #FFF;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
  grid-row: 2;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 -5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
  grid-template-rows: 1fr;
}
.flyout::before {
  content: "";
  min-height: calc(100dvh - calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px)));
  grid-area: 1/1/3/-1;
  pointer-events: none;
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: false, hasFooter: true, hasSubFooter: true, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #FFF;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 -5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: true, hasFooter: false, hasSubFooter: false, footerBehavior: fixed, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
  grid-row: 2;
}
slot[name=header] {
  position: sticky;
  top: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: calc((clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px)) * -1) -16px;
  background: #FFF;
  clip-path: inset(0 0 -20px 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 3;
  grid-row: 1;
  margin-block-start: 0;
}
slot[name=header][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
  padding-block-start: 0;
  padding-block-end: 0;
  grid-template-rows: auto 1fr auto;
}
.flyout::before {
  content: "";
  min-height: 100dvh;
  grid-area: 1/1/4/-1;
  pointer-events: none;
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: true, hasFooter: false, hasSubFooter: true, footerBehavior: fixed, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
  grid-row: 2;
}
slot[name=header] {
  position: sticky;
  top: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: calc((clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px)) * -1) -16px;
  background: #FFF;
  clip-path: inset(0 0 -20px 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 3;
  grid-row: 1;
  margin-block-start: 0;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
slot[name=header][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
  padding-block-start: 0;
  grid-template-rows: auto 1fr auto;
}
.flyout::before {
  content: "";
  min-height: 100dvh;
  grid-area: 1/1/4/-1;
  pointer-events: none;
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: true, hasFooter: true, hasSubFooter: false, footerBehavior: fixed, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
  grid-row: 2;
}
slot[name=header] {
  position: sticky;
  top: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: calc((clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px)) * -1) -16px;
  background: #FFF;
  clip-path: inset(0 0 -20px 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 3;
  grid-row: 1;
  margin-block-start: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #FFF;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
  grid-row: 3;
  margin-block-end: .3px;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 -5px 10px;
}
slot[name=header][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
  padding-block-start: 0;
  padding-block-end: 0;
  grid-template-rows: auto 1fr auto;
}
.flyout::before {
  content: "";
  min-height: 100dvh;
  grid-area: 1/1/4/-1;
  pointer-events: none;
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: true, hasFooter: true, hasSubFooter: true, footerBehavior: fixed, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
  grid-row: 2;
}
slot[name=header] {
  position: sticky;
  top: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: calc((clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px)) * -1) -16px;
  background: #FFF;
  clip-path: inset(0 0 -20px 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 3;
  grid-row: 1;
  margin-block-start: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #FFF;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
  grid-row: 3;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 -5px 10px;
}
slot[name=header][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
  padding-block-start: 0;
  grid-template-rows: auto 1fr auto;
}
.flyout::before {
  content: "";
  min-height: 100dvh;
  grid-area: 1/1/4/-1;
  pointer-events: none;
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: end, hasHeader: true, hasFooter: true, hasSubFooter: true, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=header] {
  position: sticky;
  top: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: calc((clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px)) * -1) -16px;
  background: #FFF;
  clip-path: inset(0 0 -20px 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 3;
  margin-block-start: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #FFF;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 -5px 10px;
}
slot[name=header][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-end: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
  padding-block-start: 0;
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: start, hasHeader: false, hasFooter: false, hasSubFooter: false, footerBehavior: sticky, theme: dark 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(38, 38, 41, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-start: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(0,0,0,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #FBFCFF;
  background: #0E0E12;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: start, hasHeader: false, hasFooter: false, hasSubFooter: false, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-start: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: start, hasHeader: false, hasFooter: true, hasSubFooter: false, footerBehavior: sticky, theme: dark 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #0E0E12;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(0, 0, 0, 0.6) 0 -5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(38, 38, 41, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-start: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(0,0,0,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #FBFCFF;
  background: #0E0E12;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: start, hasHeader: false, hasFooter: true, hasSubFooter: false, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #FFF;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 -5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-start: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;

exports[`getComponentCss() should return correct css for isOpen: true, position: start, hasHeader: false, hasFooter: true, hasSubFooter: true, footerBehavior: sticky, theme: light 1`] = `
":host {
  display: block;
  --pds-internal-grid-outer-column: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(16px, 1.25vw + 12px, 36px)) !important;
  --pds-internal-grid-margin: calc(clamp(32px, 2.75vw + 23px, 76px) * -1) !important;
  --pds-internal-grid-width-min: auto !important;
  --pds-internal-grid-width-max: none !important;
  color-scheme: light dark !important;
}
:host([hidden]) {
  display: none !important;
}
:not(:defined,[data-ssr]) {
  visibility: hidden;
}
slot {
  display: block;
}
slot:first-of-type {
  grid-row-start: 1;
}
slot:not([name]) {
  grid-column: 2/3;
  z-index: 0;
}
slot[name=footer] {
  position: sticky;
  bottom: -.1px;
  transform: translateZ(0);
  padding: 16px clamp(32px, 2.75vw + 23px, 76px);
  margin-block: -16px -16px;
  background: #FFF;
  clip-path: inset(-20px 0 0 0);
  transition: box-shadow var(--p-transition-duration, 0.25s) cubic-bezier(0.25,0.1,0.25,1);
  grid-column: 1/-1;
  z-index: 2;
}
slot[name=sub-footer] {
  grid-column: 2/3;
  z-index: 1;
}
slot[name=footer][data-stuck] {
  box-shadow: rgba(204, 204, 204, 0.35) 0 -5px 10px;
}
dialog {
  position: fixed;
  inset: 0;
  margin: 0;
  padding: 0;
  border: 0;
  width: 100dvw;
  height: 100dvh;
  max-width: 100dvw;
  max-height: 100dvh;
  overflow: hidden;
  display: block;
  outline: 0;
  z-index: 9999999;
  visibility: inherit;
  pointer-events: auto;
  background: rgba(1, 2, 5, 0.67);
  -webkit-backdrop-filter: blur(32px);
  backdrop-filter: blur(32px);
  transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1);
}
dialog::backdrop {
  display: none;
}
@supports (transition-behavior: allow-discrete) {
  dialog {
    transition: visibility 0s linear var(--p-transition-duration, 0s), background-color var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), -webkit-backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), backdrop-filter var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1), overlay var(--p-transition-duration, 0.6s) cubic-bezier(0,0,0.2,1) allow-discrete;
  }
}

.scroller {
  position: absolute;
  isolation: isolate;
  display: grid;
  inset-block: 0;
  inset-inline-start: 0;
  overflow: hidden auto;
  overscroll-behavior-y: none;
  background: rgba(255,255,255,.01);
  opacity: 1;
  transform: initial;
  transition: opacity var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1), transform var(--p-transition-duration, 0.4s) cubic-bezier(0,0,0.2,1);
}
.scroller:focus-visible {
  outline: none;
}
.flyout {
  display: grid;
  grid-template: auto/clamp(8px, 0.5vw + 6px, 16px) auto clamp(8px, 0.5vw + 6px, 16px);
  padding-block: calc(clamp(8px, 0.5vw + 6px, 16px) + clamp(16px, 1.25vw + 12px, 36px));
  row-gap: clamp(16px, 1.25vw + 12px, 36px);
  column-gap: calc(clamp(32px, 2.75vw + 23px, 76px) - clamp(8px, 0.5vw + 6px, 16px));
  align-content: flex-start;
  color: #010205;
  background: #FFF;
  width: var(--p-flyout-width,auto);
  min-width: 320px;
  max-width: var(--p-flyout-max-width,1180px);
}
.dismiss {
  --p-internal-button-scaling: 0;
  grid-area: 1/3;
  z-index: 4;
  position: sticky;
  inset-block-start: clamp(8px, 0.5vw + 6px, 16px);
  inset-inline-end: clamp(8px, 0.5vw + 6px, 16px);
  margin-block-start: calc(clamp(16px, 1.25vw + 12px, 36px) * -1);
  place-self: flex-start flex-end;
}"
`;
