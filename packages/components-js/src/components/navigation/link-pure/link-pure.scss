@import '../../../../../../packages/utilities/projects/utilities/scss';

@mixin p-link-pure-label-visible() {
  width: 100%;
  height: auto;
  margin: 0 0 0 p-rem(4px);
  padding: 0 .125em 0 0;
  white-space: normal;
  overflow: visible;
  text-indent: 0;
}

@mixin p-link-pure-label-hidden() {
  width: 1px;
  height: 1px;
  margin: 0 0 0 -1px;
  padding: 0;
  white-space: nowrap;
  overflow: hidden;
  text-indent: -1px;
}

@mixin p-link-pure-size($prefix, $size) {
  @if $size == 'inherit' {
    font-size: inherit;
    line-height: inherit;

    & #{$prefix}__icon {
      width: 1.5em;
      height: 1.5em;
    }
  } @else {
    @include p-type-scale($size);

    & #{$prefix}__icon {
      width: #{p-line-height($size)}em;
      height: #{p-line-height($size)}em;
    }

    + * {
      @if $size == $p-text-size-small {
        @include p-type-scale($p-text-size-x-small);
        &::before {
          font-size: $size;
          margin-left: calc(#{p-line-height($size)}em + #{p-rem(4px)});
        }
      }
      @if $size == $p-text-size-medium {
        @include p-type-scale($p-font-size-20);
        &::before {
          font-size: $size;
          margin-left: calc(#{p-line-height($size)}em + #{p-rem(4px)});
        }
      }
      @if $size == $p-text-size-large {
        @include p-type-scale($p-font-size-30);
        &::before {
          font-size: $size;
          margin-left: calc(#{p-line-height($size)}em + #{p-rem(4px)});
        }
      }
      @if $size == $p-text-size-x-large {
        @include p-type-scale($p-text-size-large);
        &::before {
          font-size: $size;
          margin-left: calc(#{p-line-height($size)}em + #{p-rem(4px)});
        }
      }
    }
  }
}

:host {
  display: inline-block;
  vertical-align: top;
  position: relative !important;
  cursor: pointer;
}

::slotted(a) {
  display: block !important;
  position: static !important;
  text-decoration: none !important;
  color: inherit !important;
  line-height: inherit !important;
}
::slotted(a)::before {
  content: "" !important;
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  display: block !important;
  outline: transparent none !important;
  transition: outline-color $p-animation-hover-duration $p-animation-hover-bezier !important;
}
::slotted(a:focus) {
  outline: none !important;
}
::slotted(a:focus)::before {
  outline-offset: 1px !important;
  outline: $p-color-theme-light-state-focus solid 2px !important;
}

.#{$p-global-class-prefix}link-pure {
  $bem-block: &;
  display: flex;
  align-items: flex-start;
  width: 100%;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  outline: transparent none;
  appearance: none;
  border: none;
  text-decoration: none;
  text-align: left;
  background: transparent;
  transition: color $p-animation-hover-duration $p-animation-hover-bezier, font-size 1ms linear; // used for transitionend event listener

  // gives possibility to enlarge click area on host element
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: block;
    outline: transparent none;
    transition: outline-color $p-animation-hover-duration $p-animation-hover-bezier;
  }

  &:not(a)::before {
    pointer-events: none;
  }

  &::-moz-focus-inner {
    border: 0; // fix for Firefox, avoid dotted outline in button on focus
  }

  &:focus::before {
    outline-width: 2px;
    outline-style: solid;
    outline-offset: 1px;
  }

  &--theme-light {
    color: $p-color-default;
    + * {
      color: $p-color-default;
    }

    &:focus::before {
      outline-color: $p-color-state-focus;
    }

    &:active {
      color: $p-color-state-active;
      + * {
        color: $p-color-state-active;
      }
    }

    &:hover {
      color: $p-color-state-hover;
      + * {
        color: $p-color-state-hover;
      }
    }

    &#{$bem-block}--active {
      color: $p-color-brand;
      + * {
        color: $p-color-brand;
      }
    }
  }

  &--theme-dark {
    color: $p-color-theme-dark-default;
    + * {
      color: $p-color-theme-dark-default;
    }

    &:focus::before {
      outline-color: $p-color-theme-dark-state-focus;
    }

    &:active {
      color: $p-color-theme-dark-state-active;
      + * {
        color: $p-color-theme-dark-state-active;
      }
    }

    &:hover {
      color: $p-color-theme-dark-state-hover;
      + * {
        color: $p-color-theme-dark-state-hover;
      }
    }

    &#{$bem-block}--active {
      color: $p-color-theme-dark-brand;
      + * {
        color: $p-color-theme-dark-brand;
      }
    }
  }

  &--size-x-small {
    @include p-link-pure-size($bem-block, $p-text-size-x-small);
  }

  &--size-small {
    @include p-link-pure-size($bem-block, $p-text-size-small);
  }

  &--size-medium {
    @include p-link-pure-size($bem-block, $p-text-size-medium);
  }

  &--size-large {
    @include p-link-pure-size($bem-block, $p-text-size-large);
  }

  &--size-x-large {
    @include p-link-pure-size($bem-block, $p-text-size-x-large);
  }

  &--size-inherit {
    @include p-link-pure-size($bem-block, 'inherit');
  }

  @include p-breakpoint('xs') {
    &--size-x-small-xs {
      @include p-link-pure-size($bem-block, $p-text-size-x-small);
    }
    &--size-small-xs {
      @include p-link-pure-size($bem-block, $p-text-size-small);
    }
    &--size-medium-xs {
      @include p-link-pure-size($bem-block, $p-text-size-medium);
    }
    &--size-large-xs {
      @include p-link-pure-size($bem-block, $p-text-size-large);
    }
    &--size-x-large-xs {
      @include p-link-pure-size($bem-block, $p-text-size-x-large);
    }
    &--size-inherit-xs {
      @include p-link-pure-size($bem-block, 'inherit');
    }
  }

  @include p-breakpoint('s') {
    &--size-x-small-s {
      @include p-link-pure-size($bem-block, $p-text-size-x-small);
    }
    &--size-small-s {
      @include p-link-pure-size($bem-block, $p-text-size-small);
    }
    &--size-medium-s {
      @include p-link-pure-size($bem-block, $p-text-size-medium);
    }
    &--size-large-s {
      @include p-link-pure-size($bem-block, $p-text-size-large);
    }
    &--size-x-large-s {
      @include p-link-pure-size($bem-block, $p-text-size-x-large);
    }
    &--size-inherit-s {
      @include p-link-pure-size($bem-block, 'inherit');
    }
  }

  @include p-breakpoint('m') {
    &--size-x-small-m {
      @include p-link-pure-size($bem-block, $p-text-size-x-small);
    }
    &--size-small-m {
      @include p-link-pure-size($bem-block, $p-text-size-small);
    }
    &--size-medium-m {
      @include p-link-pure-size($bem-block, $p-text-size-medium);
    }
    &--size-large-m {
      @include p-link-pure-size($bem-block, $p-text-size-large);
    }
    &--size-x-large-m {
      @include p-link-pure-size($bem-block, $p-text-size-x-large);
    }
    &--size-inherit-m {
      @include p-link-pure-size($bem-block, 'inherit');
    }
  }

  @include p-breakpoint('l') {
    &--size-x-small-l {
      @include p-link-pure-size($bem-block, $p-text-size-x-small);
    }
    &--size-small-l {
      @include p-link-pure-size($bem-block, $p-text-size-small);
    }
    &--size-medium-l {
      @include p-link-pure-size($bem-block, $p-text-size-medium);
    }
    &--size-large-l {
      @include p-link-pure-size($bem-block, $p-text-size-large);
    }
    &--size-x-large-l {
      @include p-link-pure-size($bem-block, $p-text-size-x-large);
    }
    &--size-inherit-l {
      @include p-link-pure-size($bem-block, 'inherit');
    }
  }

  @include p-breakpoint('xl') {
    &--size-x-small-xl {
      @include p-link-pure-size($bem-block, $p-text-size-x-small);
    }
    &--size-small-xl {
      @include p-link-pure-size($bem-block, $p-text-size-small);
    }
    &--size-medium-xl {
      @include p-link-pure-size($bem-block, $p-text-size-medium);
    }
    &--size-large-xl {
      @include p-link-pure-size($bem-block, $p-text-size-large);
    }
    &--size-x-large-xl {
      @include p-link-pure-size($bem-block, $p-text-size-x-large);
    }
    &--size-inherit-xl {
      @include p-link-pure-size($bem-block, 'inherit');
    }
  }

  &__icon {
    flex-shrink: 0;
    width: 1.5em;
    height: 1.5em;
  }

  &__label {
    display: block;
    box-sizing: border-box;
    border: 0;

    &--visible {
      @include p-link-pure-label-visible;
    }

    &--hidden {
      @include p-link-pure-label-hidden;
    }

    @include p-breakpoint('xs') {
      &--visible-xs {
        @include p-link-pure-label-visible;
      }

      &--hidden-xs {
        @include p-link-pure-label-hidden;
      }
    }

    @include p-breakpoint('s') {
      &--visible-s {
        @include p-link-pure-label-visible;
      }

      &--hidden-s {
        @include p-link-pure-label-hidden;
      }
    }

    @include p-breakpoint('m') {
      &--visible-m {
        @include p-link-pure-label-visible;
      }

      &--hidden-m {
        @include p-link-pure-label-hidden;
      }
    }

    @include p-breakpoint('l') {
      &--visible-l {
        @include p-link-pure-label-visible;
      }

      &--hidden-l {
        @include p-link-pure-label-hidden;
      }
    }

    @include p-breakpoint('xl') {
      &--visible-xl {
        @include p-link-pure-label-visible;
      }

      &--hidden-xl {
        @include p-link-pure-label-hidden;
      }
    }
  }

  &__subline {
    display: flex;
    transition: color $p-animation-hover-duration $p-animation-hover-bezier;

    &::before { // We need a margin-left according to the labels font-size. The size of before gets calculated in the p-link-pure-size mixin
      content: '';
    }
  }
}
