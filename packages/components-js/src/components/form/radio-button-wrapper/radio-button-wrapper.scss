@import '../../../../../../packages/scss-utils/index';

@mixin p-radio-button-wrapper-label-text-visible() {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  padding: 0 0 0 $p-spacing-8;
  white-space: normal;
  overflow: visible;
  clip: auto;
  clip-path: none;
}

@mixin p-radio-button-wrapper-label-text-hidden() {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  white-space: nowrap;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
}

:host {
  display: block;
}

::slotted(input) {
  position: absolute !important;
  top: -1px !important; // -1px because of focus box-shadow position
  left: -1px !important;
  width: p-rem(26px) !important; // 2px wider to enable rounded focus style
  height: p-rem(26px) !important;
  display: block !important;
  margin: 0 !important;
  padding: 0 !important;
  appearance: none !important;
  border: 0 rgba(255, 255, 255, 0) !important;
  border-radius: 50% !important;
  background-color: transparent !important;
  opacity: 1 !important;
  outline: none !important;
  cursor: pointer !important;
  box-shadow: 0 0 0 0 transparent !important;
  transition: box-shadow $p-animation-hover-duration $p-animation-hover-bezier,
  border-top-color 1ms linear !important;
}

// hide native radio on IE11
::slotted(input::-ms-check) {
  display: none !important;
}

// Focus
::slotted(input:focus) {
  box-shadow: 0 0 0 2px $p-color-theme-light-state-focus !important;
}

// Checked
::slotted(input:checked) {
  border-top-color: rgba(255, 255, 255, 0.01) !important;
}

// Disabled
::slotted(input:disabled) {
  cursor: not-allowed !important;
  border-top-color: rgba(255, 255, 255, 0.02) !important;
}

// Disabled + Checked
::slotted(input:disabled:checked) {
  border-top-color: rgba(255, 255, 255, 0.03) !important;
}

.#{$p-global-class-prefix}radio-button-wrapper {
  $bem-block: &;

  &__label {
    position: relative;
    display: flex;
  }

  &__label-text {
    order: 1;
    display: inline-block;
    cursor: pointer;
    color: $p-color-theme-light-default;
    transition: color $p-animation-hover-duration $p-animation-hover-bezier;

    &--disabled {
      color: $p-color-theme-light-state-disabled;
      cursor: default;
    }

    &--visible {
      @include p-radio-button-wrapper-label-text-visible;
    }

    &--hidden {
      @include p-radio-button-wrapper-label-text-hidden;
    }

    @include p-breakpoint("xs") {
      &--visible-xs {
        @include p-radio-button-wrapper-label-text-visible;
      }

      &--hidden-xs {
        @include p-radio-button-wrapper-label-text-hidden;
      }
    }

    @include p-breakpoint("s") {
      &--visible-s {
        @include p-radio-button-wrapper-label-text-visible;
      }

      &--hidden-s {
        @include p-radio-button-wrapper-label-text-hidden;
      }
    }

    @include p-breakpoint("m") {
      &--visible-m {
        @include p-radio-button-wrapper-label-text-visible;
      }

      &--hidden-m {
        @include p-radio-button-wrapper-label-text-hidden;
      }
    }

    @include p-breakpoint("l") {
      &--visible-l {
        @include p-radio-button-wrapper-label-text-visible;
      }

      &--hidden-l {
        @include p-radio-button-wrapper-label-text-hidden;
      }
    }

    @include p-breakpoint("xl") {
      &--visible-xl {
        @include p-radio-button-wrapper-label-text-visible;
      }

      &--hidden-xl {
        @include p-radio-button-wrapper-label-text-hidden;
      }
    }
  }

  &__fake-radio-button {
    position: relative;
    width: p-rem(24px);
    height: p-rem(24px);
    display: block;
    flex-shrink: 0;
    border-radius: 50%;
    box-shadow: inset 0 0 0 1px $p-color-theme-light-neutral-contrast-medium;
    background-color: $p-color-theme-light-background;
    transition: box-shadow $p-animation-hover-duration $p-animation-hover-bezier,
    background-color $p-animation-hover-duration $p-animation-hover-bezier;

    &:hover:not(&--disabled):not(&--success):not(&--error),
    #{$bem-block}__label-text:hover ~ &:not(&--disabled):not(&--success):not(&--error) {
      box-shadow: inset 0 0 0 1px $p-color-theme-light-default;
    }

    &::before {
      content: "";
      width: p-rem(16px);
      height: p-rem(16px);
      border-radius: 50%;
      background-color: transparent;
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      transition: background-color $p-animation-hover-duration $p-animation-hover-bezier;
    }

    &--checked {
      box-shadow: inset 0 0 0 1px $p-color-theme-light-neutral-contrast-high;

      &::before {
        background-color: $p-color-theme-light-neutral-contrast-high;
      }
    }

    &--checked#{&}--disabled {
      &::before {
        background-color: $p-color-theme-light-state-disabled;
      }
    }

    &--checked#{&}--error {
      &::before {
        background-color: $p-color-theme-light-notification-error;
      }
    }

    &--checked#{&}--success {
      &::before {
        background-color: $p-color-theme-light-notification-success;
      }
    }

    &--disabled {
      box-shadow: inset 0 0 0 1px $p-color-theme-light-state-disabled;
    }

    &--error {
      box-shadow: inset 0 0 0 2px $p-color-theme-light-notification-error;

      &:hover,
      #{$bem-block}__label-text:hover ~ & {
        box-shadow: inset 0 0 0 2px darken($p-color-theme-light-notification-error, 12%);
      }
    }

    &--success {
      box-shadow: inset 0 0 0 2px $p-color-theme-light-notification-success;

      &:hover,
      #{$bem-block}__label-text:hover ~ & {
        box-shadow: inset 0 0 0 2px darken($p-color-theme-light-notification-success, 12%);
      }
    }
  }

  &__message {
    margin-top: $p-spacing-4;
    color: $p-color-theme-light-default;
    transition: color $p-animation-hover-duration $p-animation-hover-bezier;

    &--success {
      color: $p-color-theme-light-notification-success;
    }

    &--error {
      color: $p-color-theme-light-notification-error;
    }
  }
}
