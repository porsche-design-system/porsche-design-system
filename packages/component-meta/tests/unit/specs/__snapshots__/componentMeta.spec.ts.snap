// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should match snapshot 1`] = `
{
  "p-accordion": {
    "controlledMeta": [
      {
        "event": "update",
        "props": [
          "open",
        ],
      },
    ],
    "eventsMeta": {
      "accordionChange": {
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`update\` event instead. Emitted when accordion state is changed.",
        "isDeprecated": true,
        "type": "AccordionUpdateEventDetail",
        "typeDetail": "{ open: boolean }",
      },
      "update": {
        "description": "Emitted when accordion state is changed.",
        "type": "AccordionUpdateEventDetail",
        "typeDetail": "{ open: boolean }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "compact": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "Displays the Accordion as compact version with thinner border and smaller paddings.",
        "type": "boolean",
      },
      "heading": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Defines the heading used in accordion.",
        "type": "string",
      },
      "headingTag": {
        "allowedValues": [
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
        ],
        "defaultValue": "h2",
        "description": "Sets a heading tag, so it fits correctly within the outline of the page.",
        "type": "AccordionHeadingTag",
      },
      "open": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "Defines if accordion is open.",
        "type": "boolean",
      },
      "size": {
        "allowedValues": [
          "small",
          "medium",
        ],
        "defaultValue": "small",
        "description": "The text size.",
        "isBreakpointCustomizable": true,
        "type": "AccordionSize",
      },
      "sticky": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "@experimental Sticks the Accordion heading at the top, fixed while scrolling",
        "isExperimental": true,
        "type": "boolean",
      },
      "tag": {
        "allowedValues": [
          null,
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
        ],
        "defaultValue": null,
        "description": "@deprecated, will be removed with next major release, use \`heading-tag\` instead. Sets a heading tag, so it fits correctly within the outline of the page.",
        "isDeprecated": true,
        "type": "AccordionTag",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color when used on dark background.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the main content",
      },
      "heading": {
        "description": "Defines the heading used in the accordion. Can be used alternatively to the heading prop. Please **refrain** from using any other than text content as slotted markup.",
      },
    },
    "styling": "jss",
  },
  "p-banner": {
    "controlledMeta": [
      {
        "event": "dismiss",
        "props": [
          "open",
        ],
      },
    ],
    "eventsMeta": {
      "dismiss": {
        "description": "Emitted when the close button is clicked.",
        "type": "void",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "hostAttributes": {
      "popover": "manual",
    },
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-inline-notification",
    ],
    "propsMeta": {
      "description": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "Description of the banner.",
        "type": "string",
      },
      "dismissButton": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "If false, the banner will not have a dismiss button.",
        "type": "boolean",
      },
      "heading": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "Heading of the banner.",
        "type": "string",
      },
      "headingTag": {
        "allowedValues": [
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
        ],
        "defaultValue": "h5",
        "description": "Sets a heading tag, so it fits correctly within the outline of the page.",
        "type": "BannerHeadingTag",
      },
      "open": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "If true, the banner is open.",
        "isRequired": true,
        "type": "boolean",
      },
      "persistent": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`dismissButton\` instead. Defines if the banner can be closed/removed by the user.",
        "isDeprecated": true,
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "info",
          "warning",
          "error",
          "neutral",
        ],
        "defaultValue": "info",
        "deprecatedValues": [
          "neutral",
        ],
        "description": "State of the banner.",
        "type": "BannerState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the banner color depending on the theme.",
        "type": "Theme",
      },
      "width": {
        "defaultValue": null,
        "description": "Has no effect anymore @deprecated since v3.0.0, will be removed with next major release",
        "isDeprecated": true,
        "type": "BannerWidth",
      },
    },
    "slotsMeta": {
      "description": {
        "description": "Defines the description used in the banner. Can be used alternatively to the description prop. Can be used for rich content.",
        "hasAltProp": true,
      },
      "heading": {
        "description": "Defines the heading used in the banner. Can be used alternatively to the heading prop. Can be used for rich content.",
        "hasAltProp": true,
      },
      "title": {
        "description": "Defines the title used in the banner. Can be used alternatively to the heading prop. Can be used for rich content.",
        "hasAltProp": true,
      },
    },
    "styling": "jss",
  },
  "p-button": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-spinner",
      "p-icon",
    ],
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-expanded": "string",
          "aria-haspopup": "string",
          "aria-label": "string",
          "aria-pressed": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "ButtonAriaAttribute",
      },
      "compact": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Displays as compact version.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the button. No events will be triggered while disabled state is active.",
        "type": "boolean",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it is recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "icon": {
        "allowedValues": [
          "360",
          "accessibility",
          "active-cabin-ventilation",
          "add",
          "adjust",
          "arrow-double-down",
          "arrow-double-left",
          "arrow-double-right",
          "arrow-double-up",
          "arrow-down",
          "arrow-first",
          "arrow-head-down",
          "arrow-head-left",
          "arrow-head-right",
          "arrow-head-up",
          "arrow-last",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "attachment",
          "augmented-reality",
          "battery-empty",
          "battery-empty-co2",
          "battery-empty-fuel",
          "battery-full",
          "bell",
          "bookmark",
          "bookmark-filled",
          "broadcast",
          "calculator",
          "calendar",
          "camera",
          "car",
          "car-battery",
          "card",
          "charging-active",
          "charging-state",
          "charging-station",
          "chart",
          "chat",
          "check",
          "city",
          "climate",
          "climate-control",
          "clock",
          "close",
          "closed-caption",
          "co2-class",
          "co2-emission",
          "compare",
          "configurate",
          "copy",
          "country-road",
          "cubic-capacity",
          "delete",
          "disable",
          "dislike",
          "dislike-filled",
          "document",
          "download",
          "duration",
          "edit",
          "email",
          "error-filled",
          "exclamation",
          "external",
          "filter",
          "fingerprint",
          "flash",
          "fuel-station",
          "garage",
          "gift",
          "globe",
          "grid",
          "heart",
          "heart-filled",
          "highway",
          "home",
          "horn",
          "image",
          "increase",
          "information",
          "information-filled",
          "key",
          "leaf",
          "leather",
          "light",
          "like",
          "like-filled",
          "list",
          "locate",
          "lock",
          "lock-open",
          "logo-apple-podcast",
          "logo-baidu",
          "logo-delicious",
          "logo-digg",
          "logo-facebook",
          "logo-foursquare",
          "logo-gmail",
          "logo-google",
          "logo-hatena",
          "logo-instagram",
          "logo-kaixin",
          "logo-kakaotalk",
          "logo-linkedin",
          "logo-naver",
          "logo-pinterest",
          "logo-qq",
          "logo-qq-share",
          "logo-reddit",
          "logo-skyrock",
          "logo-sohu",
          "logo-spotify",
          "logo-tecent",
          "logo-telegram",
          "logo-tiktok",
          "logo-tumblr",
          "logo-twitter",
          "logo-viber",
          "logo-vk",
          "logo-wechat",
          "logo-weibo",
          "logo-whatsapp",
          "logo-x",
          "logo-xing",
          "logo-yahoo",
          "logo-youku",
          "logo-youtube",
          "logout",
          "map",
          "menu-dots-horizontal",
          "menu-dots-vertical",
          "menu-lines",
          "minus",
          "mobile",
          "moon",
          "new-chat",
          "none",
          "oil-can",
          "parking-brake",
          "parking-light",
          "pause",
          "phone",
          "pin",
          "pin-filled",
          "play",
          "plug",
          "plus",
          "preheating",
          "printer",
          "purchase",
          "push-pin",
          "push-pin-off",
          "qr",
          "question",
          "racing-flag",
          "refresh",
          "replay",
          "reset",
          "roof-closed",
          "roof-open",
          "route",
          "rss",
          "save",
          "screen",
          "search",
          "send",
          "share",
          "shopping-bag",
          "shopping-bag-filled",
          "shopping-cart",
          "shopping-cart-filled",
          "sidebar",
          "sidelights",
          "snowflake",
          "sort",
          "stack",
          "star",
          "star-filled",
          "steering-wheel",
          "stopwatch",
          "subtract",
          "success",
          "success-filled",
          "sun",
          "switch",
          "tablet",
          "tachometer",
          "tire",
          "truck",
          "upload",
          "user",
          "user-filled",
          "user-group",
          "user-manual",
          "video",
          "view",
          "view-off",
          "volume-off",
          "volume-up",
          "warning",
          "warning-filled",
          "weight",
          "wifi",
          "work",
          "wrench",
          "wrenches",
          "zoom-in",
          "zoom-out",
        ],
        "defaultValue": "none",
        "description": "The icon shown. By choosing 'none', no icon is displayed.",
        "type": "ButtonIcon",
      },
      "iconSource": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "A URL path to a custom icon.",
        "type": "string",
      },
      "loading": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the button and shows a loading indicator. No events will be triggered while loading state is active.",
        "type": "boolean",
      },
      "name": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The name of the button, submitted as a pair with the button's value as part of the form data, when that button is used to submit the form.",
        "type": "string",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the button color depending on the theme.",
        "type": "Theme",
      },
      "type": {
        "allowedValues": [
          "button",
          "submit",
          "reset",
        ],
        "defaultValue": "submit",
        "description": "Specifies the type of the button.",
        "type": "ButtonType",
      },
      "value": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Defines the value associated with the button's name when it's submitted with the form data. This value is passed to the server in params when the form is submitted using this button.",
        "type": "string",
      },
      "variant": {
        "allowedValues": [
          "primary",
          "secondary",
          "ghost",
          "tertiary",
        ],
        "defaultValue": "primary",
        "deprecatedValues": [
          "tertiary",
        ],
        "description": "The style variant of the button.",
        "type": "ButtonVariant",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the button label.",
      },
    },
    "styling": "jss",
  },
  "p-button-group": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "propsMeta": {
      "direction": {
        "allowedValues": [
          "row",
          "column",
        ],
        "defaultValue": {
          "base": "column",
          "xs": "row",
        },
        "description": "Defines the direction of the main and cross axis. The default is ’{base: ‘column’, xs: ‘row’}' showing buttons vertically stacked on mobile viewports and side-by-side in a horizontal row from breakpoint ‘xs’. You always need to provide a base value when using breakpoints.",
        "isBreakpointCustomizable": true,
        "type": "ButtonGroupDirection",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the buttons to group.",
      },
    },
    "styling": "jss",
  },
  "p-button-pure": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-spinner",
      "p-icon",
    ],
    "propsMeta": {
      "active": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Display button in active state.",
        "type": "boolean",
      },
      "alignLabel": {
        "allowedValues": [
          "start",
          "end",
          "left",
          "right",
        ],
        "defaultValue": "end",
        "deprecatedValues": [
          "left",
          "right",
        ],
        "description": "Aligns the label.",
        "isBreakpointCustomizable": true,
        "type": "ButtonPureAlignLabel",
      },
      "aria": {
        "allowedValues": {
          "aria-expanded": "string",
          "aria-haspopup": "string",
          "aria-label": "string",
          "aria-pressed": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "ButtonPureAriaAttribute",
      },
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the button. No events will be triggered while disabled state is active.",
        "type": "boolean",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it is recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "icon": {
        "allowedValues": [
          "",
          "360",
          "accessibility",
          "active-cabin-ventilation",
          "add",
          "adjust",
          "arrow-double-down",
          "arrow-double-left",
          "arrow-double-right",
          "arrow-double-up",
          "arrow-down",
          "arrow-first",
          "arrow-head-down",
          "arrow-head-left",
          "arrow-head-right",
          "arrow-head-up",
          "arrow-last",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "attachment",
          "augmented-reality",
          "battery-empty",
          "battery-empty-co2",
          "battery-empty-fuel",
          "battery-full",
          "bell",
          "bookmark",
          "bookmark-filled",
          "broadcast",
          "calculator",
          "calendar",
          "camera",
          "car",
          "car-battery",
          "card",
          "charging-active",
          "charging-state",
          "charging-station",
          "chart",
          "chat",
          "check",
          "city",
          "climate",
          "climate-control",
          "clock",
          "close",
          "closed-caption",
          "co2-class",
          "co2-emission",
          "compare",
          "configurate",
          "copy",
          "country-road",
          "cubic-capacity",
          "delete",
          "disable",
          "dislike",
          "dislike-filled",
          "document",
          "download",
          "duration",
          "edit",
          "email",
          "error-filled",
          "exclamation",
          "external",
          "filter",
          "fingerprint",
          "flash",
          "fuel-station",
          "garage",
          "gift",
          "globe",
          "grid",
          "heart",
          "heart-filled",
          "highway",
          "home",
          "horn",
          "image",
          "increase",
          "information",
          "information-filled",
          "key",
          "leaf",
          "leather",
          "light",
          "like",
          "like-filled",
          "list",
          "locate",
          "lock",
          "lock-open",
          "logo-apple-podcast",
          "logo-baidu",
          "logo-delicious",
          "logo-digg",
          "logo-facebook",
          "logo-foursquare",
          "logo-gmail",
          "logo-google",
          "logo-hatena",
          "logo-instagram",
          "logo-kaixin",
          "logo-kakaotalk",
          "logo-linkedin",
          "logo-naver",
          "logo-pinterest",
          "logo-qq",
          "logo-qq-share",
          "logo-reddit",
          "logo-skyrock",
          "logo-sohu",
          "logo-spotify",
          "logo-tecent",
          "logo-telegram",
          "logo-tiktok",
          "logo-tumblr",
          "logo-twitter",
          "logo-viber",
          "logo-vk",
          "logo-wechat",
          "logo-weibo",
          "logo-whatsapp",
          "logo-x",
          "logo-xing",
          "logo-yahoo",
          "logo-youku",
          "logo-youtube",
          "logout",
          "map",
          "menu-dots-horizontal",
          "menu-dots-vertical",
          "menu-lines",
          "minus",
          "mobile",
          "moon",
          "new-chat",
          "oil-can",
          "parking-brake",
          "parking-light",
          "pause",
          "phone",
          "pin",
          "pin-filled",
          "play",
          "plug",
          "plus",
          "preheating",
          "printer",
          "purchase",
          "push-pin",
          "push-pin-off",
          "qr",
          "question",
          "racing-flag",
          "refresh",
          "replay",
          "reset",
          "roof-closed",
          "roof-open",
          "route",
          "rss",
          "save",
          "screen",
          "search",
          "send",
          "share",
          "shopping-bag",
          "shopping-bag-filled",
          "shopping-cart",
          "shopping-cart-filled",
          "sidebar",
          "sidelights",
          "snowflake",
          "sort",
          "stack",
          "star",
          "star-filled",
          "steering-wheel",
          "stopwatch",
          "subtract",
          "success",
          "success-filled",
          "sun",
          "switch",
          "tablet",
          "tachometer",
          "tire",
          "truck",
          "upload",
          "user",
          "user-filled",
          "user-group",
          "user-manual",
          "video",
          "view",
          "view-off",
          "volume-off",
          "volume-up",
          "warning",
          "warning-filled",
          "weight",
          "wifi",
          "work",
          "wrench",
          "wrenches",
          "zoom-in",
          "zoom-out",
        ],
        "defaultValue": "arrow-right",
        "description": "The icon shown.",
        "type": "ButtonPureIcon",
      },
      "iconSource": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "A URL path to a custom icon.",
        "type": "string",
      },
      "loading": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the button and shows a loading indicator. No events will be triggered while loading state is active.",
        "type": "boolean",
      },
      "name": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The name of the button, submitted as a pair with the button's value as part of the form data, when that button is used to submit the form.",
        "type": "string",
      },
      "size": {
        "allowedValues": [
          "xx-small",
          "x-small",
          "small",
          "medium",
          "large",
          "x-large",
          "inherit",
        ],
        "defaultValue": "small",
        "description": "Size of the button.",
        "isBreakpointCustomizable": true,
        "type": "ButtonPureSize",
      },
      "stretch": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Stretches the area between icon and label to max available space.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the button color depending on the theme.",
        "type": "Theme",
      },
      "type": {
        "allowedValues": [
          "button",
          "submit",
          "reset",
        ],
        "defaultValue": "submit",
        "description": "Specifies the type of the button.",
        "type": "ButtonPureType",
      },
      "underline": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Shows an underline under the label.",
        "type": "boolean",
      },
      "value": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Defines the value associated with the button's name when it's submitted with the form data. This value is passed to the server in params when the form is submitted using this button.",
        "type": "string",
      },
      "weight": {
        "allowedValues": [
          "regular",
          "semi-bold",
          "bold",
          "thin",
          "semibold",
        ],
        "defaultValue": "regular",
        "deprecatedValues": [
          "thin",
          "semibold",
        ],
        "description": "The weight of the text (only has effect with visible label). @deprecated since v3.0.0, will be removed with next major release",
        "isDeprecated": true,
        "type": "ButtonPureWeight",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the button label.",
      },
    },
    "styling": "jss",
  },
  "p-button-tile": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": false,
    "nestedComponents": [
      "p-button",
      "p-button-pure",
    ],
    "propsMeta": {
      "align": {
        "allowedValues": [
          "top",
          "bottom",
        ],
        "defaultValue": "bottom",
        "description": "Alignment of button and description.",
        "type": "ButtonTileAlign",
      },
      "aria": {
        "allowedValues": {
          "aria-expanded": "string",
          "aria-haspopup": "string",
          "aria-label": "string",
          "aria-pressed": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "ButtonTileAriaAttribute",
      },
      "aspectRatio": {
        "allowedValues": [
          "1/1",
          "4/3",
          "3/4",
          "16/9",
          "9/16",
          "1:1",
          "4:3",
          "3:4",
          "16:9",
          "9:16",
        ],
        "defaultValue": "4/3",
        "deprecatedValues": [
          "1:1",
          "4:3",
          "3:4",
          "16:9",
          "9:16",
        ],
        "description": "Aspect ratio of the button-tile.",
        "isBreakpointCustomizable": true,
        "type": "ButtonTileAspectRatio",
      },
      "background": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "dark",
        "description": "Adapts the description and button theme when used on light background image.",
        "type": "ButtonTileBackground",
      },
      "compact": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Displays the button-tile as compact version with description and button icon only.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "description": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Description text.",
        "isRequired": true,
        "type": "string",
      },
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the button. No events will be triggered while disabled state is active.",
        "type": "boolean",
      },
      "gradient": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "Show gradient.",
        "type": "boolean",
      },
      "icon": {
        "allowedValues": [
          "360",
          "accessibility",
          "active-cabin-ventilation",
          "add",
          "adjust",
          "arrow-double-down",
          "arrow-double-left",
          "arrow-double-right",
          "arrow-double-up",
          "arrow-down",
          "arrow-first",
          "arrow-head-down",
          "arrow-head-left",
          "arrow-head-right",
          "arrow-head-up",
          "arrow-last",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "attachment",
          "augmented-reality",
          "battery-empty",
          "battery-empty-co2",
          "battery-empty-fuel",
          "battery-full",
          "bell",
          "bookmark",
          "bookmark-filled",
          "broadcast",
          "calculator",
          "calendar",
          "camera",
          "car",
          "car-battery",
          "card",
          "charging-active",
          "charging-state",
          "charging-station",
          "chart",
          "chat",
          "check",
          "city",
          "climate",
          "climate-control",
          "clock",
          "close",
          "closed-caption",
          "co2-class",
          "co2-emission",
          "compare",
          "configurate",
          "copy",
          "country-road",
          "cubic-capacity",
          "delete",
          "disable",
          "dislike",
          "dislike-filled",
          "document",
          "download",
          "duration",
          "edit",
          "email",
          "error-filled",
          "exclamation",
          "external",
          "filter",
          "fingerprint",
          "flash",
          "fuel-station",
          "garage",
          "gift",
          "globe",
          "grid",
          "heart",
          "heart-filled",
          "highway",
          "home",
          "horn",
          "image",
          "increase",
          "information",
          "information-filled",
          "key",
          "leaf",
          "leather",
          "light",
          "like",
          "like-filled",
          "list",
          "locate",
          "lock",
          "lock-open",
          "logo-apple-podcast",
          "logo-baidu",
          "logo-delicious",
          "logo-digg",
          "logo-facebook",
          "logo-foursquare",
          "logo-gmail",
          "logo-google",
          "logo-hatena",
          "logo-instagram",
          "logo-kaixin",
          "logo-kakaotalk",
          "logo-linkedin",
          "logo-naver",
          "logo-pinterest",
          "logo-qq",
          "logo-qq-share",
          "logo-reddit",
          "logo-skyrock",
          "logo-sohu",
          "logo-spotify",
          "logo-tecent",
          "logo-telegram",
          "logo-tiktok",
          "logo-tumblr",
          "logo-twitter",
          "logo-viber",
          "logo-vk",
          "logo-wechat",
          "logo-weibo",
          "logo-whatsapp",
          "logo-x",
          "logo-xing",
          "logo-yahoo",
          "logo-youku",
          "logo-youtube",
          "logout",
          "map",
          "menu-dots-horizontal",
          "menu-dots-vertical",
          "menu-lines",
          "minus",
          "mobile",
          "moon",
          "new-chat",
          "none",
          "oil-can",
          "parking-brake",
          "parking-light",
          "pause",
          "phone",
          "pin",
          "pin-filled",
          "play",
          "plug",
          "plus",
          "preheating",
          "printer",
          "purchase",
          "push-pin",
          "push-pin-off",
          "qr",
          "question",
          "racing-flag",
          "refresh",
          "replay",
          "reset",
          "roof-closed",
          "roof-open",
          "route",
          "rss",
          "save",
          "screen",
          "search",
          "send",
          "share",
          "shopping-bag",
          "shopping-bag-filled",
          "shopping-cart",
          "shopping-cart-filled",
          "sidebar",
          "sidelights",
          "snowflake",
          "sort",
          "stack",
          "star",
          "star-filled",
          "steering-wheel",
          "stopwatch",
          "subtract",
          "success",
          "success-filled",
          "sun",
          "switch",
          "tablet",
          "tachometer",
          "tire",
          "truck",
          "upload",
          "user",
          "user-filled",
          "user-group",
          "user-manual",
          "video",
          "view",
          "view-off",
          "volume-off",
          "volume-up",
          "warning",
          "warning-filled",
          "weight",
          "wifi",
          "work",
          "wrench",
          "wrenches",
          "zoom-in",
          "zoom-out",
        ],
        "defaultValue": "none",
        "description": "The icon shown. By choosing 'none', no icon is displayed.",
        "type": "ButtonTileIcon",
      },
      "iconSource": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "A URL path to a custom icon.",
        "type": "string",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Label of the button.",
        "isRequired": true,
        "type": "string",
      },
      "loading": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the button-tile and shows a loading indicator. No events will be triggered while loading state is active.",
        "type": "boolean",
      },
      "size": {
        "allowedValues": [
          "medium",
          "large",
          "inherit",
          "default",
        ],
        "defaultValue": "medium",
        "deprecatedValues": [
          "default",
        ],
        "description": "Font size of the description.",
        "isBreakpointCustomizable": true,
        "type": "ButtonTileSize",
      },
      "type": {
        "allowedValues": [
          "button",
          "submit",
          "reset",
        ],
        "defaultValue": "submit",
        "description": "Specifies the type of the button.",
        "type": "ButtonTileType",
      },
      "weight": {
        "allowedValues": [
          "regular",
          "semi-bold",
        ],
        "defaultValue": "semi-bold",
        "description": "Font weight of the description.",
        "isBreakpointCustomizable": true,
        "type": "ButtonTileWeight",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the img or picture tag.",
      },
      "header": {
        "description": "Renders a header section above the content area.",
      },
    },
    "styling": "jss",
  },
  "p-canvas": {
    "eventsMeta": {
      "sidebarEndDismiss": {
        "description": "Emitted when the sidebar end requests to be dismissed.",
        "type": "void",
      },
      "sidebarStartUpdate": {
        "description": "Emitted when the sidebar start requests to be opened or dismissed.",
        "type": "CanvasSidebarStartUpdateEventDetail",
        "typeDetail": "{ open: boolean }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isExperimental": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-button",
      "p-crest",
      "p-wordmark",
      "p-flyout",
    ],
    "propsMeta": {
      "sidebarEndOpen": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Open the sidebar on the end side",
        "type": "boolean",
      },
      "sidebarStartOpen": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Open the sidebar on the start side",
        "type": "boolean",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color depending on the theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the main content.",
      },
      "background": {
        "description": "Can be used to pass a sticky media element <img/> or <video/> placed underneath the main content.",
      },
      "footer": {
        "description": "Renders a **sticky** footer section underneath the main content.",
      },
      "header-end": {
        "description": "Renders a **sticky** header section above the content area on the **end** side (**right** in **LTR** mode / **left** in **RTL** mode).",
      },
      "header-start": {
        "description": "Renders a **sticky** header section above the content area on the **start** side (**left** in **LTR** mode / **right** in **RTL** mode).",
      },
      "sidebar-end": {
        "description": "Renders a sidebar area on the **end** side (**right** in **LTR** mode / **left** in **RTL** mode). On mobile view it transforms into a flyout.",
      },
      "sidebar-start": {
        "description": "Renders a sidebar area on the **start** side (**left** in **LTR** mode / **right** in **RTL** mode). On mobile view it transforms into a flyout.",
      },
      "title": {
        "description": "Renders the application name in the header section of the sidebar start area.",
      },
    },
    "styling": "jss",
  },
  "p-carousel": {
    "controlledMeta": [
      {
        "event": "update",
        "isInternallyMutated": true,
        "props": [
          "activeSlideIndex",
        ],
      },
    ],
    "eventsMeta": {
      "carouselChange": {
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`update\` event instead. Emitted when carousel's content slides.",
        "isDeprecated": true,
        "type": "CarouselUpdateEventDetail",
        "typeDetail": "{ activeIndex: number; previousIndex: number }",
      },
      "update": {
        "description": "Emitted when carousel's content slides.",
        "type": "CarouselUpdateEventDetail",
        "typeDetail": "{ activeIndex: number; previousIndex: number }",
      },
    },
    "hasAriaProp": true,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": true,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-link-pure",
      "p-button-pure",
    ],
    "propsMeta": {
      "activeSlideIndex": {
        "allowedValues": "number",
        "defaultValue": 0,
        "description": "Defines which slide to be active (zero-based numbering).",
        "type": "number",
      },
      "alignHeader": {
        "allowedValues": [
          "start",
          "center",
          "left",
        ],
        "defaultValue": "start",
        "deprecatedValues": [
          "left",
        ],
        "description": "Alignment of heading and description",
        "type": "CarouselAlignHeader",
      },
      "aria": {
        "allowedValues": {
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "CarouselAriaAttribute",
      },
      "description": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Defines the description used in the carousel.",
        "type": "string",
      },
      "disablePagination": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`pagination\` instead. If true, the carousel will not show pagination bullets at the bottom.",
        "isBreakpointCustomizable": true,
        "isDeprecated": true,
        "type": "boolean",
      },
      "focusOnCenterSlide": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Indicates whether focus should be set on the center slide. If true, the carousel loops by individual slide; otherwise, it loops by page.",
        "type": "boolean",
      },
      "gradientColor": {
        "allowedValues": [
          "background-base",
          "background-surface",
          "none",
        ],
        "defaultValue": "none",
        "description": "Adapts the background gradient for the left and right edge.",
        "type": "CarouselGradientColor",
      },
      "heading": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Defines the heading used in the carousel.",
        "type": "string",
      },
      "headingSize": {
        "allowedValues": [
          "x-large",
          "xx-large",
        ],
        "defaultValue": "x-large",
        "description": "Defines the heading size used in the carousel.",
        "type": "CarouselHeadingSize",
      },
      "intl": {
        "allowedValues": {
          "first": "string",
          "last": "string",
          "next": "string",
          "prev": "string",
          "slide": "string",
          "slideLabel": "string",
        },
        "defaultValue": null,
        "description": "Override the default wordings that are used for aria-labels on the next/prev buttons and pagination.",
        "type": "CarouselInternationalization",
      },
      "pagination": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "If false, the carousel will not show pagination bullets at the bottom.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "rewind": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "Whether the slides should rewind from last to first slide and vice versa.",
        "type": "boolean",
      },
      "skipLinkTarget": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Defines target of skip link (to skip carousel entries).",
        "type": "string",
      },
      "slidesPerPage": {
        "allowedValues": [
          "number",
          "auto",
        ],
        "defaultValue": 1,
        "description": "Sets the amount of slides visible at the same time. Can be set to \`auto\` if you want to define different widths per slide via CSS.",
        "isBreakpointCustomizable": true,
        "type": "number | 'auto'",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color when used on dark background.",
        "type": "Theme",
      },
      "trimSpace": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "Determines whether to trim spaces before/after the carousel if \`focusOnCenterSlide\` option is true.",
        "type": "boolean",
      },
      "width": {
        "allowedValues": [
          "basic",
          "extended",
        ],
        "defaultValue": "basic",
        "description": "Defines the outer spacings between the carousel and the left and right screen sides.",
        "type": "CarouselWidth",
      },
      "wrapContent": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "Has no effect anymore @deprecated since v3.0.0, will be removed with next major release",
        "isDeprecated": true,
        "type": "boolean",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the carousel slides.",
      },
      "controls": {
        "description": "Shows a sidebar area on the **start** side (**left** in **LTR** mode / **right** in **RTL** mode). On mobile view it transforms into a flyout.",
      },
      "description": {
        "description": "Shows a footer section, flowing under the content area when scrollable.",
      },
      "heading": {
        "description": "Renders a heading above the carousel.",
      },
    },
    "styling": "jss",
  },
  "p-checkbox": {
    "eventsMeta": {
      "blur": {
        "description": "Emitted when the checkbox has lost focus.",
        "type": "CheckboxBlurEventDetail",
        "typeDetail": "Event",
      },
      "update": {
        "description": "Emitted when checkbox checked property is changed.",
        "type": "CheckboxUpdateEventDetail",
        "typeDetail": "{ name: string; value?: string; checked: boolean }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-spinner",
      "p-icon",
    ],
    "propsMeta": {
      "checked": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Reflects the checkbox current checked state and allows setting the initial checked state.",
        "type": "boolean",
      },
      "compact": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Displays as compact version.",
        "type": "boolean",
      },
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Marks the checkbox as disabled.",
        "type": "boolean",
      },
      "form": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The id of a form element the checkbox should be associated with.",
        "type": "string",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it's recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "indeterminate": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Marks the checkbox as indeterminate.",
        "type": "boolean",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "loading": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "@experimental Disables the checkbox and shows a loading indicator.",
        "isExperimental": true,
        "type": "boolean",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "name": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The name of the checkbox.",
        "type": "string",
      },
      "required": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Marks the checkbox as required.",
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "CheckboxState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color depending on the theme.",
        "type": "Theme",
      },
      "value": {
        "allowedValues": "string",
        "defaultValue": "on",
        "description": "The checkbox value. When a form is submitted, only a checkbox which is currently checked is included in the submission.",
        "type": "string",
      },
    },
    "slotsMeta": {
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-checkbox-wrapper": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": true,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-spinner",
      "p-icon",
    ],
    "observedAttributes": [
      "disabled",
      "required",
    ],
    "propsMeta": {
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it's recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "loading": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "@experimental Disables the checkbox and shows a loading indicator.",
        "isExperimental": true,
        "type": "boolean",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "CheckboxWrapperState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color depending on the theme.",
        "type": "Theme",
      },
    },
    "requiredChild": "input type=checkbox",
    "requiredChildSelector": "input[type=checkbox]",
    "slotsMeta": {
      "": {
        "description": "Default slot for the input.",
      },
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-content-wrapper": {
    "deprecationMessage": "since v3.0.0, will be removed with next major release. Use native CSS Grid instead.",
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isDeprecated": true,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "backgroundColor": {
        "allowedValues": [
          "transparent",
          "default",
        ],
        "defaultValue": "transparent",
        "description": "Has no effect anymore @deprecated since v3.0.0, will be removed with next major release",
        "isDeprecated": true,
        "type": "ContentWrapperBackgroundColor",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Has no effect anymore @deprecated since v3.0.0, will be removed with next major release",
        "isDeprecated": true,
        "type": "Theme",
      },
      "width": {
        "allowedValues": [
          "narrow",
          "basic",
          "extended",
          "fluid",
          "full",
        ],
        "defaultValue": "extended",
        "description": "Defines the outer spacings between the content area and the left and right screen sides, as well as centering its content and setting a max-width.",
        "type": "ContentWrapperWidth",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for main content.",
      },
    },
    "styling": "jss",
  },
  "p-crest": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": false,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": false,
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-current": "string",
          "aria-haspopup": "string",
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "CrestAriaAttribute",
      },
      "href": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "When providing an url then the component will be rendered as \`<a>\`.",
        "type": "string",
      },
      "target": {
        "allowedValues": [
          "_self",
          "_blank",
          "_parent",
          "_top",
          "string",
        ],
        "defaultValue": "_self",
        "description": "Target attribute where the link should be opened.",
        "type": "CrestTarget",
      },
    },
    "styling": "jss",
  },
  "p-display": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "align": {
        "allowedValues": [
          "start",
          "center",
          "end",
          "inherit",
          "left",
          "right",
        ],
        "defaultValue": "start",
        "deprecatedValues": [
          "left",
          "right",
        ],
        "description": "Text alignment of the component.",
        "type": "DisplayAlign",
      },
      "color": {
        "allowedValues": [
          "primary",
          "inherit",
        ],
        "defaultValue": "primary",
        "description": "Basic text color variations depending on theme property.",
        "type": "DisplayColor",
      },
      "ellipsis": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Adds an ellipsis to a single line of text if it overflows.",
        "type": "boolean",
      },
      "size": {
        "allowedValues": [
          "small",
          "medium",
          "large",
          "inherit",
        ],
        "defaultValue": "large",
        "description": "Size of the component. Also defines the size for specific breakpoints, like {base: "medium", l: "large"}. You always need to provide a base value when doing this.",
        "isBreakpointCustomizable": true,
        "type": "DisplaySize",
      },
      "tag": {
        "allowedValues": [
          null,
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
        ],
        "defaultValue": null,
        "description": "Sets a heading tag, so it fits correctly within the outline of the page.",
        "type": "DisplayTag",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the text color depending on the theme. Has no effect when "inherit" is set as color prop.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the display text.",
      },
    },
    "styling": "jss",
  },
  "p-divider": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": false,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "color": {
        "allowedValues": [
          "contrast-low",
          "contrast-medium",
          "contrast-high",
          "neutral-contrast-high",
          "neutral-contrast-medium",
          "neutral-contrast-low",
        ],
        "defaultValue": "contrast-low",
        "deprecatedValues": [
          "neutral-contrast-high",
          "neutral-contrast-medium",
          "neutral-contrast-low",
        ],
        "description": "Defines color depending on theme.",
        "type": "DividerColor",
      },
      "direction": {
        "allowedValues": [
          "vertical",
          "horizontal",
        ],
        "defaultValue": "horizontal",
        "description": "Defines direction.",
        "isBreakpointCustomizable": true,
        "type": "DividerDirection",
      },
      "orientation": {
        "allowedValues": [
          null,
          "vertical",
          "horizontal",
        ],
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`direction\` instead. Defines orientation.",
        "isBreakpointCustomizable": true,
        "isDeprecated": true,
        "type": "DividerOrientation",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts color depending on theme.",
        "type": "Theme",
      },
    },
    "styling": "jss",
  },
  "p-fieldset": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "labelSize": {
        "allowedValues": [
          "small",
          "medium",
        ],
        "defaultValue": "medium",
        "description": "The size of the label text.",
        "type": "FieldsetLabelSize",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "required": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Marks the Fieldset as required.",
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "FieldsetState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts color depending on theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the main content.",
      },
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-fieldset-wrapper": {
    "deprecationMessage": "since v3.0.0, will be removed with next major release. Please use "p-fieldset" instead.",
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isDeprecated": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "labelSize": {
        "allowedValues": [
          "small",
          "medium",
        ],
        "defaultValue": "medium",
        "description": "The size of the label text.",
        "type": "FieldsetWrapperLabelSize",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "required": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Marks the Fieldset as required.",
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "FieldsetWrapperState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts color depending on theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the main content.",
      },
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-flex": {
    "deprecationMessage": "since v3.0.0, will be removed with next major release. Use native CSS Flex instead.",
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isDeprecated": true,
    "isInternal": false,
    "isThemeable": false,
    "propsMeta": {
      "alignContent": {
        "allowedValues": [
          "stretch",
          "flex-start",
          "flex-end",
          "center",
          "space-between",
          "space-around",
          "space-evenly",
        ],
        "defaultValue": "stretch",
        "description": "This aligns a flex container's individual lines when there is extra space in the cross-axis, similar to how "justifyContent" aligns individual items along the main axis.",
        "isBreakpointCustomizable": true,
        "type": "FlexAlignContent",
      },
      "alignItems": {
        "allowedValues": [
          "stretch",
          "flex-start",
          "flex-end",
          "center",
          "baseline",
        ],
        "defaultValue": "stretch",
        "description": "Defines how the flex items are aligned along the cross axis.",
        "isBreakpointCustomizable": true,
        "type": "FlexAlignItems",
      },
      "direction": {
        "allowedValues": [
          "row",
          "row-reverse",
          "column",
          "column-reverse",
        ],
        "defaultValue": "row",
        "description": "Defines the direction of the main and cross axis. The default "row" defines the main axis as horizontal left to right.",
        "isBreakpointCustomizable": true,
        "type": "FlexDirection",
      },
      "inline": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Defines the flex containers content flow if 2 or more containers are siblings of each other.",
        "isBreakpointCustomizable": true,
        "type": "FlexInline",
      },
      "justifyContent": {
        "allowedValues": [
          "flex-start",
          "flex-end",
          "center",
          "space-between",
          "space-around",
          "space-evenly",
        ],
        "defaultValue": "flex-start",
        "description": "Defines how the flex items are aligned along the main axis.",
        "isBreakpointCustomizable": true,
        "type": "FlexJustifyContent",
      },
      "wrap": {
        "allowedValues": [
          "nowrap",
          "wrap",
          "wrap-reverse",
        ],
        "defaultValue": "nowrap",
        "description": "Handles wrapping behaviour of elements.",
        "isBreakpointCustomizable": true,
        "type": "FlexWrap",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the flex items.",
      },
    },
    "styling": "jss",
  },
  "p-flex-item": {
    "deprecationMessage": "since v3.0.0, will be removed with next major release. Use native CSS Flex instead.",
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": false,
    "isDelegatingFocus": false,
    "isDeprecated": true,
    "isInternal": false,
    "isThemeable": false,
    "propsMeta": {
      "alignSelf": {
        "allowedValues": [
          "auto",
          "flex-start",
          "flex-end",
          "center",
          "baseline",
          "stretch",
        ],
        "defaultValue": "auto",
        "description": "Defines how this flex item is aligned along the cross axis. This overwrites the cross axis alignment set by the container. Corresponds to the "alignSelf" css property.",
        "isBreakpointCustomizable": true,
        "type": "FlexItemAlignSelf",
      },
      "flex": {
        "allowedValues": [
          "initial",
          "auto",
          "none",
          "equal",
        ],
        "defaultValue": "initial",
        "description": "The shorthand property for the combined definition of "shrink", "grow" and "basis"",
        "isBreakpointCustomizable": true,
        "type": "FlexItemFlex",
      },
      "grow": {
        "allowedValues": [
          0,
          1,
        ],
        "defaultValue": 0,
        "description": "The ability to allow/disallow the flex child to grow.",
        "isBreakpointCustomizable": true,
        "type": "FlexItemGrow",
      },
      "offset": {
        "allowedValues": [
          "none",
          "one-quarter",
          "one-third",
          "half",
          "two-thirds",
          "three-quarters",
        ],
        "defaultValue": "none",
        "description": "The offset of the column. You can also supply values for specific breakpoints, like {base: "none", l: "one-quarter"}. You always need to provide a base value when doing this.",
        "isBreakpointCustomizable": true,
        "type": "FlexItemOffset",
      },
      "shrink": {
        "allowedValues": [
          0,
          1,
        ],
        "defaultValue": 1,
        "description": "The ability to allow/disallow the flex child to shrink.",
        "isBreakpointCustomizable": true,
        "type": "FlexItemShrink",
      },
      "width": {
        "allowedValues": [
          "auto",
          "one-quarter",
          "one-third",
          "half",
          "two-thirds",
          "three-quarters",
          "full",
        ],
        "defaultValue": "auto",
        "description": "The width of the flex item. You can also supply values for specific breakpoints, like {base: "full", l: "one-quarter"}. You always need to provide a base value when doing this.",
        "isBreakpointCustomizable": true,
        "type": "FlexItemWidth",
      },
    },
    "requiredParent": "p-flex",
    "slotsMeta": {
      "": {
        "description": "Default slot for the main content.",
      },
    },
    "styling": "jss",
  },
  "p-flyout": {
    "controlledMeta": [
      {
        "event": "dismiss",
        "props": [
          "open",
        ],
      },
    ],
    "eventsMeta": {
      "dismiss": {
        "description": "Emitted when the component requests to be dismissed.",
        "type": "void",
      },
      "motionHiddenEnd": {
        "description": "Emitted when the flyout is closed and the transition is finished.",
        "type": "FlyoutMotionHiddenEndEventDetail",
        "typeDetail": "TransitionEvent",
      },
      "motionVisibleEnd": {
        "description": "Emitted when the flyout is opened and the transition is finished.",
        "type": "FlyoutMotionVisibleEndEventDetail",
        "typeDetail": "TransitionEvent",
      },
    },
    "hasAriaProp": true,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": true,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-button",
    ],
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "FlyoutAriaAttribute",
      },
      "disableBackdropClick": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "If true, the flyout will not be closable via backdrop click.",
        "type": "boolean",
      },
      "footerBehavior": {
        "allowedValues": [
          "sticky",
          "fixed",
        ],
        "defaultValue": "sticky",
        "description": "Determines the footer's position behavior. When set to "fixed," the flyout content stretches to fill the full height, keeping the footer permanently at the bottom. When set to "sticky," the footer flows beneath the content and only becomes fixed if the content overflows.",
        "type": "FlyoutFooterBehavior",
      },
      "open": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "If true, the flyout is open.",
        "isRequired": true,
        "type": "boolean",
      },
      "position": {
        "allowedValues": [
          "start",
          "end",
          "left",
          "right",
        ],
        "defaultValue": "end",
        "deprecatedValues": [
          "left",
          "right",
        ],
        "description": "The position of the flyout",
        "type": "FlyoutPosition",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the flyout color depending on the theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the main content.",
      },
      "footer": {
        "description": "Shows a sticky footer section, flowing under the content area when scrollable.",
      },
      "header": {
        "description": "Renders a sticky header section above the content area.",
      },
      "sub-footer": {
        "description": "Shows a sub-footer section to display additional information below the footer. This slot is ideal for less critical content, such as legal information or FAQs, which provides further details to the user. It appears when scrolling to the end of the flyout or when there is available space to accommodate the content.",
      },
    },
    "styling": "jss",
  },
  "p-flyout-multilevel": {
    "controlledMeta": [
      {
        "event": "dismiss",
        "props": [
          "open",
        ],
      },
      {
        "event": "update",
        "props": [
          "activeIdentifier",
        ],
      },
    ],
    "eventsMeta": {
      "dismiss": {
        "description": "Emitted when the component requests to be dismissed.",
        "type": "void",
      },
      "update": {
        "description": "Emitted when activeIdentifier is changed.",
        "type": "FlyoutMultilevelUpdateEventDetail",
        "typeDetail": "{ activeIdentifier: string }",
      },
    },
    "hasAriaProp": true,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isExperimental": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-button-pure",
    ],
    "propsMeta": {
      "activeIdentifier": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Defines which flyout-multilevel-item to be visualized as opened.",
        "type": "string | undefined",
      },
      "aria": {
        "allowedValues": {
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "FlyoutMultilevelAriaAttribute",
      },
      "open": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "If true, the flyout-multilevel is visualized as opened.",
        "type": "boolean",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the flyout-multilevel color depending on the theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot to render p-flyout-multilevel items.",
      },
    },
    "styling": "jss",
  },
  "p-flyout-multilevel-item": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": false,
    "isDelegatingFocus": false,
    "isExperimental": true,
    "isInternal": false,
    "isThemeable": false,
    "nestedComponents": [
      "p-button-pure",
    ],
    "propsMeta": {
      "identifier": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Unique identifier which controls if this item should be shown when the active-identifier on the flyout-multilevel is set to this value.",
        "isRequired": true,
        "type": "string",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Label of the item.",
        "type": "string",
      },
    },
    "requiredParent": "p-flyout-multilevel",
    "slotsMeta": {
      "": {
        "description": "Default slot for the main content.",
      },
    },
    "styling": "jss",
  },
  "p-grid": {
    "deprecationMessage": "since v3.0.0, will be removed with next major release. Use native CSS Grid instead.",
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isDeprecated": true,
    "isInternal": false,
    "isThemeable": false,
    "propsMeta": {
      "direction": {
        "allowedValues": [
          "row",
          "row-reverse",
          "column",
          "column-reverse",
        ],
        "defaultValue": "row",
        "description": "Defines the direction of the main and cross axis. The default "row" defines the main axis as horizontal left to right. Also defines the direction for specific breakpoints, like {base: "column", l: "row"}. You always need to provide a base value when doing this.",
        "isBreakpointCustomizable": true,
        "type": "GridDirection",
      },
      "gutter": {
        "allowedValues": [
          16,
          24,
          36,
        ],
        "defaultValue": {
          "base": 16,
          "m": 36,
          "s": 24,
        },
        "description": "Has no effect anymore @deprecated since v3.0.0, will be removed with next major release",
        "isBreakpointCustomizable": true,
        "isDeprecated": true,
        "type": "GridGutter",
      },
      "wrap": {
        "allowedValues": [
          "nowrap",
          "wrap",
        ],
        "defaultValue": "wrap",
        "description": "Handles wrapping behaviour of elements.",
        "isBreakpointCustomizable": true,
        "type": "GridWrap",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot to render p-grid-item tags.",
      },
    },
    "styling": "jss",
  },
  "p-grid-item": {
    "deprecationMessage": "since v3.0.0, will be removed with next major release. Use native CSS Grid instead.",
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": false,
    "isDelegatingFocus": false,
    "isDeprecated": true,
    "isInternal": false,
    "isThemeable": false,
    "propsMeta": {
      "offset": {
        "allowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
        ],
        "defaultValue": 0,
        "description": "The offset of the column. Can be between 0 and 11. Also defines the offset of the column for specific breakpoints, like {base: 6, l: 3}. You always need to provide a base value when doing this.",
        "isBreakpointCustomizable": true,
        "type": "GridItemOffset",
      },
      "size": {
        "allowedValues": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
        ],
        "defaultValue": 1,
        "description": "The size of the column. Can be between 1 and 12. Also defines the size of the column for specific breakpoints, like {base: 6, l: 3}. You always need to provide a base value when doing this.",
        "isBreakpointCustomizable": true,
        "type": "GridItemSize",
      },
    },
    "requiredParent": "p-grid",
    "slotsMeta": {
      "": {
        "description": "Default slot to render the content.",
      },
    },
    "styling": "jss",
  },
  "p-heading": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "align": {
        "allowedValues": [
          "start",
          "center",
          "end",
          "inherit",
          "left",
          "right",
        ],
        "defaultValue": "start",
        "deprecatedValues": [
          "left",
          "right",
        ],
        "description": "Text alignment of the component.",
        "type": "HeadingAlign",
      },
      "color": {
        "allowedValues": [
          "primary",
          "inherit",
        ],
        "defaultValue": "primary",
        "description": "Basic text color variations depending on theme property.",
        "type": "HeadingColor",
      },
      "ellipsis": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Adds an ellipsis to a single line of text if it overflows.",
        "type": "boolean",
      },
      "size": {
        "allowedValues": [
          "small",
          "medium",
          "large",
          "x-large",
          "xx-large",
          "inherit",
        ],
        "defaultValue": "xx-large",
        "description": "Size of the component. Also defines the size for specific breakpoints, like {base: "small", l: "medium"}. You always need to provide a base value when doing this.",
        "isBreakpointCustomizable": true,
        "type": "HeadingSize",
      },
      "tag": {
        "allowedValues": [
          null,
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
        ],
        "defaultValue": null,
        "description": "Sets a heading tag, so it fits correctly within the outline of the page.",
        "type": "HeadingTag",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the text color depending on the theme. Has no effect when "inherit" is set as color prop.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot to render the heading.",
      },
    },
    "styling": "jss",
  },
  "p-headline": {
    "deprecationMessage": "since v3.0.0, will be removed with next major release. Please use "p-heading" instead.",
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isDeprecated": true,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "align": {
        "allowedValues": [
          "start",
          "center",
          "end",
          "inherit",
          "left",
          "right",
        ],
        "defaultValue": "start",
        "deprecatedValues": [
          "left",
          "right",
        ],
        "description": "Text alignment of the component.",
        "type": "HeadlineAlign",
      },
      "color": {
        "allowedValues": [
          "primary",
          "default",
          "inherit",
        ],
        "defaultValue": "primary",
        "description": "Basic text color variations depending on theme property.",
        "type": "HeadlineColor",
      },
      "ellipsis": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Adds an ellipsis to a single line of text if it overflows.",
        "type": "boolean",
      },
      "tag": {
        "allowedValues": [
          null,
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
        ],
        "defaultValue": null,
        "description": "Sets a custom HTML tag depending on the usage of the headline component.",
        "type": "HeadlineTag",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the text color depending on the theme. Has no effect when "inherit" is set as color prop.",
        "type": "Theme",
      },
      "variant": {
        "allowedValues": [
          "large-title",
          "headline-1",
          "headline-2",
          "headline-3",
          "headline-4",
          "headline-5",
          "xx-small",
          "x-small",
          "small",
          "medium",
          "large",
          "x-large",
          "inherit",
        ],
        "defaultValue": "headline-1",
        "description": "Predefined style of the headline.",
        "isBreakpointCustomizable": true,
        "type": "HeadlineVariant",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot to render the headline.",
      },
    },
    "styling": "jss",
  },
  "p-icon": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": false,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "IconAriaAttribute",
      },
      "color": {
        "allowedValues": [
          "primary",
          "contrast-low",
          "contrast-medium",
          "contrast-high",
          "notification-success",
          "notification-warning",
          "notification-error",
          "notification-info",
          "inherit",
          "brand",
          "default",
          "neutral-contrast-low",
          "neutral-contrast-medium",
          "neutral-contrast-high",
          "notification-neutral",
          "state-disabled",
        ],
        "defaultValue": "primary",
        "deprecatedValues": [
          "brand",
          "default",
          "neutral-contrast-low",
          "neutral-contrast-medium",
          "neutral-contrast-high",
          "notification-neutral",
        ],
        "description": "Basic color variations depending on theme property.",
        "type": "IconColor",
      },
      "lazy": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "Has no effect anymore (the component is now using the native \`loading="lazy"\` attribute by default) @deprecated since v3.0.0, will be removed with next major release",
        "isDeprecated": true,
        "type": "boolean",
      },
      "name": {
        "allowedValues": [
          "360",
          "accessibility",
          "active-cabin-ventilation",
          "add",
          "adjust",
          "arrow-double-down",
          "arrow-double-left",
          "arrow-double-right",
          "arrow-double-up",
          "arrow-down",
          "arrow-first",
          "arrow-head-down",
          "arrow-head-left",
          "arrow-head-right",
          "arrow-head-up",
          "arrow-last",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "attachment",
          "augmented-reality",
          "battery-empty",
          "battery-empty-co2",
          "battery-empty-fuel",
          "battery-full",
          "bell",
          "bookmark",
          "bookmark-filled",
          "broadcast",
          "calculator",
          "calendar",
          "camera",
          "car",
          "car-battery",
          "card",
          "charging-active",
          "charging-state",
          "charging-station",
          "chart",
          "chat",
          "check",
          "city",
          "climate",
          "climate-control",
          "clock",
          "close",
          "closed-caption",
          "co2-class",
          "co2-emission",
          "compare",
          "configurate",
          "copy",
          "country-road",
          "cubic-capacity",
          "delete",
          "disable",
          "dislike",
          "dislike-filled",
          "document",
          "download",
          "duration",
          "edit",
          "email",
          "error-filled",
          "exclamation",
          "external",
          "filter",
          "fingerprint",
          "flash",
          "fuel-station",
          "garage",
          "gift",
          "globe",
          "grid",
          "heart",
          "heart-filled",
          "highway",
          "home",
          "horn",
          "image",
          "increase",
          "information",
          "information-filled",
          "key",
          "leaf",
          "leather",
          "light",
          "like",
          "like-filled",
          "list",
          "locate",
          "lock",
          "lock-open",
          "logo-apple-podcast",
          "logo-baidu",
          "logo-delicious",
          "logo-digg",
          "logo-facebook",
          "logo-foursquare",
          "logo-gmail",
          "logo-google",
          "logo-hatena",
          "logo-instagram",
          "logo-kaixin",
          "logo-kakaotalk",
          "logo-linkedin",
          "logo-naver",
          "logo-pinterest",
          "logo-qq",
          "logo-qq-share",
          "logo-reddit",
          "logo-skyrock",
          "logo-sohu",
          "logo-spotify",
          "logo-tecent",
          "logo-telegram",
          "logo-tiktok",
          "logo-tumblr",
          "logo-twitter",
          "logo-viber",
          "logo-vk",
          "logo-wechat",
          "logo-weibo",
          "logo-whatsapp",
          "logo-x",
          "logo-xing",
          "logo-yahoo",
          "logo-youku",
          "logo-youtube",
          "logout",
          "map",
          "menu-dots-horizontal",
          "menu-dots-vertical",
          "menu-lines",
          "minus",
          "mobile",
          "moon",
          "new-chat",
          "oil-can",
          "parking-brake",
          "parking-light",
          "pause",
          "phone",
          "pin",
          "pin-filled",
          "play",
          "plug",
          "plus",
          "preheating",
          "printer",
          "purchase",
          "push-pin",
          "push-pin-off",
          "qr",
          "question",
          "racing-flag",
          "refresh",
          "replay",
          "reset",
          "roof-closed",
          "roof-open",
          "route",
          "rss",
          "save",
          "screen",
          "search",
          "send",
          "share",
          "shopping-bag",
          "shopping-bag-filled",
          "shopping-cart",
          "shopping-cart-filled",
          "sidebar",
          "sidelights",
          "snowflake",
          "sort",
          "stack",
          "star",
          "star-filled",
          "steering-wheel",
          "stopwatch",
          "subtract",
          "success",
          "success-filled",
          "sun",
          "switch",
          "tablet",
          "tachometer",
          "tire",
          "truck",
          "upload",
          "user",
          "user-filled",
          "user-group",
          "user-manual",
          "video",
          "view",
          "view-off",
          "volume-off",
          "volume-up",
          "warning",
          "warning-filled",
          "weight",
          "wifi",
          "work",
          "wrench",
          "wrenches",
          "zoom-in",
          "zoom-out",
        ],
        "defaultValue": "arrow-right",
        "description": "Specifies which icon to use.",
        "type": "IconName",
      },
      "size": {
        "allowedValues": [
          "xx-small",
          "x-small",
          "small",
          "medium",
          "large",
          "x-large",
          "inherit",
        ],
        "defaultValue": "small",
        "description": "The size of the icon.",
        "type": "IconSize",
      },
      "source": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Specifies a whole icon path which can be used for custom icons.",
        "type": "string",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color depending on the theme. Has no effect when "inherit" is set as color prop.",
        "type": "Theme",
      },
    },
    "styling": "jss",
  },
  "p-inline-notification": {
    "eventsMeta": {
      "action": {
        "description": "Emitted when the action button is clicked.",
        "type": "void",
      },
      "dismiss": {
        "description": "Emitted when the close button is clicked.",
        "type": "void",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
      "p-button-pure",
      "p-button",
    ],
    "propsMeta": {
      "actionIcon": {
        "allowedValues": [
          "",
          "360",
          "accessibility",
          "active-cabin-ventilation",
          "add",
          "adjust",
          "arrow-double-down",
          "arrow-double-left",
          "arrow-double-right",
          "arrow-double-up",
          "arrow-down",
          "arrow-first",
          "arrow-head-down",
          "arrow-head-left",
          "arrow-head-right",
          "arrow-head-up",
          "arrow-last",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "attachment",
          "augmented-reality",
          "battery-empty",
          "battery-empty-co2",
          "battery-empty-fuel",
          "battery-full",
          "bell",
          "bookmark",
          "bookmark-filled",
          "broadcast",
          "calculator",
          "calendar",
          "camera",
          "car",
          "car-battery",
          "card",
          "charging-active",
          "charging-state",
          "charging-station",
          "chart",
          "chat",
          "check",
          "city",
          "climate",
          "climate-control",
          "clock",
          "close",
          "closed-caption",
          "co2-class",
          "co2-emission",
          "compare",
          "configurate",
          "copy",
          "country-road",
          "cubic-capacity",
          "delete",
          "disable",
          "dislike",
          "dislike-filled",
          "document",
          "download",
          "duration",
          "edit",
          "email",
          "error-filled",
          "exclamation",
          "external",
          "filter",
          "fingerprint",
          "flash",
          "fuel-station",
          "garage",
          "gift",
          "globe",
          "grid",
          "heart",
          "heart-filled",
          "highway",
          "home",
          "horn",
          "image",
          "increase",
          "information",
          "information-filled",
          "key",
          "leaf",
          "leather",
          "light",
          "like",
          "like-filled",
          "list",
          "locate",
          "lock",
          "lock-open",
          "logo-apple-podcast",
          "logo-baidu",
          "logo-delicious",
          "logo-digg",
          "logo-facebook",
          "logo-foursquare",
          "logo-gmail",
          "logo-google",
          "logo-hatena",
          "logo-instagram",
          "logo-kaixin",
          "logo-kakaotalk",
          "logo-linkedin",
          "logo-naver",
          "logo-pinterest",
          "logo-qq",
          "logo-qq-share",
          "logo-reddit",
          "logo-skyrock",
          "logo-sohu",
          "logo-spotify",
          "logo-tecent",
          "logo-telegram",
          "logo-tiktok",
          "logo-tumblr",
          "logo-twitter",
          "logo-viber",
          "logo-vk",
          "logo-wechat",
          "logo-weibo",
          "logo-whatsapp",
          "logo-x",
          "logo-xing",
          "logo-yahoo",
          "logo-youku",
          "logo-youtube",
          "logout",
          "map",
          "menu-dots-horizontal",
          "menu-dots-vertical",
          "menu-lines",
          "minus",
          "mobile",
          "moon",
          "new-chat",
          "oil-can",
          "parking-brake",
          "parking-light",
          "pause",
          "phone",
          "pin",
          "pin-filled",
          "play",
          "plug",
          "plus",
          "preheating",
          "printer",
          "purchase",
          "push-pin",
          "push-pin-off",
          "qr",
          "question",
          "racing-flag",
          "refresh",
          "replay",
          "reset",
          "roof-closed",
          "roof-open",
          "route",
          "rss",
          "save",
          "screen",
          "search",
          "send",
          "share",
          "shopping-bag",
          "shopping-bag-filled",
          "shopping-cart",
          "shopping-cart-filled",
          "sidebar",
          "sidelights",
          "snowflake",
          "sort",
          "stack",
          "star",
          "star-filled",
          "steering-wheel",
          "stopwatch",
          "subtract",
          "success",
          "success-filled",
          "sun",
          "switch",
          "tablet",
          "tachometer",
          "tire",
          "truck",
          "upload",
          "user",
          "user-filled",
          "user-group",
          "user-manual",
          "video",
          "view",
          "view-off",
          "volume-off",
          "volume-up",
          "warning",
          "warning-filled",
          "weight",
          "wifi",
          "work",
          "wrench",
          "wrenches",
          "zoom-in",
          "zoom-out",
        ],
        "defaultValue": "arrow-right",
        "description": "Action icon of the inline-notification.",
        "type": "InlineNotificationActionIcon",
      },
      "actionLabel": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Action label of the inline-notification.",
        "type": "string",
      },
      "actionLoading": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the action button and shows a loading indicator. No events will be triggered while loading state is active.",
        "type": "boolean",
      },
      "description": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "Description of the inline-notification.",
        "type": "string",
      },
      "dismissButton": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "If false, the inline-notification will not have a dismiss button.",
        "type": "boolean",
      },
      "heading": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "Heading of the inline-notification.",
        "type": "string",
      },
      "headingTag": {
        "allowedValues": [
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
        ],
        "defaultValue": "h5",
        "description": "Sets a heading tag, so it fits correctly within the outline of the page.",
        "type": "InlineNotificationHeadingTag",
      },
      "persistent": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`dismissButton\` instead. Defines if the inline-notification can be closed/removed by the user.",
        "isDeprecated": true,
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "success",
          "info",
          "warning",
          "error",
          "neutral",
        ],
        "defaultValue": "info",
        "description": "State of the inline-notification.",
        "type": "InlineNotificationState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the inline-notification color depending on the theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot to render a description. Can be used to render rich markup.",
      },
      "heading": {
        "description": "Shows a heading. Can be used to render rich markup.",
      },
    },
    "styling": "jss",
  },
  "p-link": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-current": "string",
          "aria-haspopup": "string",
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "LinkAriaAttribute",
      },
      "compact": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Displays as compact version.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "download": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Special download attribute to open native browser download dialog if target url points to a downloadable file.",
        "type": "string",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it is recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "href": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "When providing an url then the component will be rendered as \`<a>\`.",
        "type": "string",
      },
      "icon": {
        "allowedValues": [
          "360",
          "accessibility",
          "active-cabin-ventilation",
          "add",
          "adjust",
          "arrow-double-down",
          "arrow-double-left",
          "arrow-double-right",
          "arrow-double-up",
          "arrow-down",
          "arrow-first",
          "arrow-head-down",
          "arrow-head-left",
          "arrow-head-right",
          "arrow-head-up",
          "arrow-last",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "attachment",
          "augmented-reality",
          "battery-empty",
          "battery-empty-co2",
          "battery-empty-fuel",
          "battery-full",
          "bell",
          "bookmark",
          "bookmark-filled",
          "broadcast",
          "calculator",
          "calendar",
          "camera",
          "car",
          "car-battery",
          "card",
          "charging-active",
          "charging-state",
          "charging-station",
          "chart",
          "chat",
          "check",
          "city",
          "climate",
          "climate-control",
          "clock",
          "close",
          "closed-caption",
          "co2-class",
          "co2-emission",
          "compare",
          "configurate",
          "copy",
          "country-road",
          "cubic-capacity",
          "delete",
          "disable",
          "dislike",
          "dislike-filled",
          "document",
          "download",
          "duration",
          "edit",
          "email",
          "error-filled",
          "exclamation",
          "external",
          "filter",
          "fingerprint",
          "flash",
          "fuel-station",
          "garage",
          "gift",
          "globe",
          "grid",
          "heart",
          "heart-filled",
          "highway",
          "home",
          "horn",
          "image",
          "increase",
          "information",
          "information-filled",
          "key",
          "leaf",
          "leather",
          "light",
          "like",
          "like-filled",
          "list",
          "locate",
          "lock",
          "lock-open",
          "logo-apple-podcast",
          "logo-baidu",
          "logo-delicious",
          "logo-digg",
          "logo-facebook",
          "logo-foursquare",
          "logo-gmail",
          "logo-google",
          "logo-hatena",
          "logo-instagram",
          "logo-kaixin",
          "logo-kakaotalk",
          "logo-linkedin",
          "logo-naver",
          "logo-pinterest",
          "logo-qq",
          "logo-qq-share",
          "logo-reddit",
          "logo-skyrock",
          "logo-sohu",
          "logo-spotify",
          "logo-tecent",
          "logo-telegram",
          "logo-tiktok",
          "logo-tumblr",
          "logo-twitter",
          "logo-viber",
          "logo-vk",
          "logo-wechat",
          "logo-weibo",
          "logo-whatsapp",
          "logo-x",
          "logo-xing",
          "logo-yahoo",
          "logo-youku",
          "logo-youtube",
          "logout",
          "map",
          "menu-dots-horizontal",
          "menu-dots-vertical",
          "menu-lines",
          "minus",
          "mobile",
          "moon",
          "new-chat",
          "none",
          "oil-can",
          "parking-brake",
          "parking-light",
          "pause",
          "phone",
          "pin",
          "pin-filled",
          "play",
          "plug",
          "plus",
          "preheating",
          "printer",
          "purchase",
          "push-pin",
          "push-pin-off",
          "qr",
          "question",
          "racing-flag",
          "refresh",
          "replay",
          "reset",
          "roof-closed",
          "roof-open",
          "route",
          "rss",
          "save",
          "screen",
          "search",
          "send",
          "share",
          "shopping-bag",
          "shopping-bag-filled",
          "shopping-cart",
          "shopping-cart-filled",
          "sidebar",
          "sidelights",
          "snowflake",
          "sort",
          "stack",
          "star",
          "star-filled",
          "steering-wheel",
          "stopwatch",
          "subtract",
          "success",
          "success-filled",
          "sun",
          "switch",
          "tablet",
          "tachometer",
          "tire",
          "truck",
          "upload",
          "user",
          "user-filled",
          "user-group",
          "user-manual",
          "video",
          "view",
          "view-off",
          "volume-off",
          "volume-up",
          "warning",
          "warning-filled",
          "weight",
          "wifi",
          "work",
          "wrench",
          "wrenches",
          "zoom-in",
          "zoom-out",
        ],
        "defaultValue": "none",
        "description": "The icon shown. By choosing 'none', no icon is displayed.",
        "type": "LinkIcon",
      },
      "iconSource": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "A URL path to a custom icon.",
        "type": "string",
      },
      "rel": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Specifies the relationship of the target object to the link object.",
        "type": "string",
      },
      "target": {
        "allowedValues": [
          "_self",
          "_blank",
          "_parent",
          "_top",
          "string",
        ],
        "defaultValue": "_self",
        "description": "Target attribute where the link should be opened.",
        "type": "LinkTarget",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the link color when used on dark background.",
        "type": "Theme",
      },
      "variant": {
        "allowedValues": [
          "primary",
          "secondary",
          "ghost",
          "tertiary",
        ],
        "defaultValue": "primary",
        "deprecatedValues": [
          "tertiary",
        ],
        "description": "The style variant of the link.",
        "type": "LinkVariant",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot to render the link label.",
      },
    },
    "styling": "jss",
  },
  "p-link-pure": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "active": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Display link in active state.",
        "type": "boolean",
      },
      "alignLabel": {
        "allowedValues": [
          "start",
          "end",
          "left",
          "right",
        ],
        "defaultValue": "end",
        "deprecatedValues": [
          "left",
          "right",
        ],
        "description": "Aligns the label.",
        "isBreakpointCustomizable": true,
        "type": "LinkPureAlignLabel",
      },
      "aria": {
        "allowedValues": {
          "aria-current": "string",
          "aria-haspopup": "string",
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "LinkPureAriaAttribute",
      },
      "download": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Special download attribute to open native browser download dialog if target url points to a downloadable file.",
        "type": "string",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it is recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "href": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "When providing an url then the component will be rendered as \`<a>\`.",
        "type": "string",
      },
      "icon": {
        "allowedValues": [
          "",
          "360",
          "accessibility",
          "active-cabin-ventilation",
          "add",
          "adjust",
          "arrow-double-down",
          "arrow-double-left",
          "arrow-double-right",
          "arrow-double-up",
          "arrow-down",
          "arrow-first",
          "arrow-head-down",
          "arrow-head-left",
          "arrow-head-right",
          "arrow-head-up",
          "arrow-last",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "attachment",
          "augmented-reality",
          "battery-empty",
          "battery-empty-co2",
          "battery-empty-fuel",
          "battery-full",
          "bell",
          "bookmark",
          "bookmark-filled",
          "broadcast",
          "calculator",
          "calendar",
          "camera",
          "car",
          "car-battery",
          "card",
          "charging-active",
          "charging-state",
          "charging-station",
          "chart",
          "chat",
          "check",
          "city",
          "climate",
          "climate-control",
          "clock",
          "close",
          "closed-caption",
          "co2-class",
          "co2-emission",
          "compare",
          "configurate",
          "copy",
          "country-road",
          "cubic-capacity",
          "delete",
          "disable",
          "dislike",
          "dislike-filled",
          "document",
          "download",
          "duration",
          "edit",
          "email",
          "error-filled",
          "exclamation",
          "external",
          "filter",
          "fingerprint",
          "flash",
          "fuel-station",
          "garage",
          "gift",
          "globe",
          "grid",
          "heart",
          "heart-filled",
          "highway",
          "home",
          "horn",
          "image",
          "increase",
          "information",
          "information-filled",
          "key",
          "leaf",
          "leather",
          "light",
          "like",
          "like-filled",
          "list",
          "locate",
          "lock",
          "lock-open",
          "logo-apple-podcast",
          "logo-baidu",
          "logo-delicious",
          "logo-digg",
          "logo-facebook",
          "logo-foursquare",
          "logo-gmail",
          "logo-google",
          "logo-hatena",
          "logo-instagram",
          "logo-kaixin",
          "logo-kakaotalk",
          "logo-linkedin",
          "logo-naver",
          "logo-pinterest",
          "logo-qq",
          "logo-qq-share",
          "logo-reddit",
          "logo-skyrock",
          "logo-sohu",
          "logo-spotify",
          "logo-tecent",
          "logo-telegram",
          "logo-tiktok",
          "logo-tumblr",
          "logo-twitter",
          "logo-viber",
          "logo-vk",
          "logo-wechat",
          "logo-weibo",
          "logo-whatsapp",
          "logo-x",
          "logo-xing",
          "logo-yahoo",
          "logo-youku",
          "logo-youtube",
          "logout",
          "map",
          "menu-dots-horizontal",
          "menu-dots-vertical",
          "menu-lines",
          "minus",
          "mobile",
          "moon",
          "new-chat",
          "oil-can",
          "parking-brake",
          "parking-light",
          "pause",
          "phone",
          "pin",
          "pin-filled",
          "play",
          "plug",
          "plus",
          "preheating",
          "printer",
          "purchase",
          "push-pin",
          "push-pin-off",
          "qr",
          "question",
          "racing-flag",
          "refresh",
          "replay",
          "reset",
          "roof-closed",
          "roof-open",
          "route",
          "rss",
          "save",
          "screen",
          "search",
          "send",
          "share",
          "shopping-bag",
          "shopping-bag-filled",
          "shopping-cart",
          "shopping-cart-filled",
          "sidebar",
          "sidelights",
          "snowflake",
          "sort",
          "stack",
          "star",
          "star-filled",
          "steering-wheel",
          "stopwatch",
          "subtract",
          "success",
          "success-filled",
          "sun",
          "switch",
          "tablet",
          "tachometer",
          "tire",
          "truck",
          "upload",
          "user",
          "user-filled",
          "user-group",
          "user-manual",
          "video",
          "view",
          "view-off",
          "volume-off",
          "volume-up",
          "warning",
          "warning-filled",
          "weight",
          "wifi",
          "work",
          "wrench",
          "wrenches",
          "zoom-in",
          "zoom-out",
        ],
        "defaultValue": "arrow-right",
        "description": "The icon shown. By choosing 'none', no icon is displayed",
        "type": "LinkPureIcon",
      },
      "iconSource": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "A URL path to a custom icon.",
        "type": "string",
      },
      "rel": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Specifies the relationship of the target object to the link object.",
        "type": "string",
      },
      "size": {
        "allowedValues": [
          "xx-small",
          "x-small",
          "small",
          "medium",
          "large",
          "x-large",
          "inherit",
        ],
        "defaultValue": "small",
        "description": "Size of the link.",
        "isBreakpointCustomizable": true,
        "type": "LinkPureSize",
      },
      "stretch": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Stretches the area between icon and label to max available space.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "target": {
        "allowedValues": [
          "_self",
          "_blank",
          "_parent",
          "_top",
          "string",
        ],
        "defaultValue": "_self",
        "description": "Target attribute where the link should be opened.",
        "type": "LinkPureTarget",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the button color depending on the theme.",
        "type": "Theme",
      },
      "underline": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Shows an underline under the label.",
        "type": "boolean",
      },
      "weight": {
        "allowedValues": [
          "regular",
          "semi-bold",
          "bold",
          "thin",
          "semibold",
        ],
        "defaultValue": "regular",
        "deprecatedValues": [
          "thin",
          "semibold",
        ],
        "description": "The weight of the text (only has effect with visible label). @deprecated since v3.0.0, will be removed with next major release",
        "isDeprecated": true,
        "type": "LinkPureWeight",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot to render the link label.",
      },
    },
    "styling": "jss",
  },
  "p-link-social": {
    "deprecationMessage": "since v3.0.0, will be removed with next major release. Use \`p-link\` with corresponding social icon instead.",
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isDeprecated": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "compact": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Displays as compact version.",
        "type": "boolean",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "href": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "When providing an url then the component will be rendered as \`<a>\`.",
        "type": "string",
      },
      "icon": {
        "allowedValues": [
          "",
          "360",
          "accessibility",
          "active-cabin-ventilation",
          "add",
          "adjust",
          "arrow-double-down",
          "arrow-double-left",
          "arrow-double-right",
          "arrow-double-up",
          "arrow-down",
          "arrow-first",
          "arrow-head-down",
          "arrow-head-left",
          "arrow-head-right",
          "arrow-head-up",
          "arrow-last",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "attachment",
          "augmented-reality",
          "battery-empty",
          "battery-empty-co2",
          "battery-empty-fuel",
          "battery-full",
          "bell",
          "bookmark",
          "bookmark-filled",
          "broadcast",
          "calculator",
          "calendar",
          "camera",
          "car",
          "car-battery",
          "card",
          "charging-active",
          "charging-state",
          "charging-station",
          "chart",
          "chat",
          "check",
          "city",
          "climate",
          "climate-control",
          "clock",
          "close",
          "closed-caption",
          "co2-class",
          "co2-emission",
          "compare",
          "configurate",
          "copy",
          "country-road",
          "cubic-capacity",
          "delete",
          "disable",
          "dislike",
          "dislike-filled",
          "document",
          "download",
          "duration",
          "edit",
          "email",
          "error-filled",
          "exclamation",
          "external",
          "filter",
          "fingerprint",
          "flash",
          "fuel-station",
          "garage",
          "gift",
          "globe",
          "grid",
          "heart",
          "heart-filled",
          "highway",
          "home",
          "horn",
          "image",
          "increase",
          "information",
          "information-filled",
          "key",
          "leaf",
          "leather",
          "light",
          "like",
          "like-filled",
          "list",
          "locate",
          "lock",
          "lock-open",
          "logo-apple-podcast",
          "logo-baidu",
          "logo-delicious",
          "logo-digg",
          "logo-facebook",
          "logo-foursquare",
          "logo-gmail",
          "logo-google",
          "logo-hatena",
          "logo-instagram",
          "logo-kaixin",
          "logo-kakaotalk",
          "logo-linkedin",
          "logo-naver",
          "logo-pinterest",
          "logo-qq",
          "logo-qq-share",
          "logo-reddit",
          "logo-skyrock",
          "logo-sohu",
          "logo-spotify",
          "logo-tecent",
          "logo-telegram",
          "logo-tiktok",
          "logo-tumblr",
          "logo-twitter",
          "logo-viber",
          "logo-vk",
          "logo-wechat",
          "logo-weibo",
          "logo-whatsapp",
          "logo-x",
          "logo-xing",
          "logo-yahoo",
          "logo-youku",
          "logo-youtube",
          "logout",
          "map",
          "menu-dots-horizontal",
          "menu-dots-vertical",
          "menu-lines",
          "minus",
          "mobile",
          "moon",
          "new-chat",
          "oil-can",
          "parking-brake",
          "parking-light",
          "pause",
          "phone",
          "pin",
          "pin-filled",
          "play",
          "plug",
          "plus",
          "preheating",
          "printer",
          "purchase",
          "push-pin",
          "push-pin-off",
          "qr",
          "question",
          "racing-flag",
          "refresh",
          "replay",
          "reset",
          "roof-closed",
          "roof-open",
          "route",
          "rss",
          "save",
          "screen",
          "search",
          "send",
          "share",
          "shopping-bag",
          "shopping-bag-filled",
          "shopping-cart",
          "shopping-cart-filled",
          "sidebar",
          "sidelights",
          "snowflake",
          "sort",
          "stack",
          "star",
          "star-filled",
          "steering-wheel",
          "stopwatch",
          "subtract",
          "success",
          "success-filled",
          "sun",
          "switch",
          "tablet",
          "tachometer",
          "tire",
          "truck",
          "upload",
          "user",
          "user-filled",
          "user-group",
          "user-manual",
          "video",
          "view",
          "view-off",
          "volume-off",
          "volume-up",
          "warning",
          "warning-filled",
          "weight",
          "wifi",
          "work",
          "wrench",
          "wrenches",
          "zoom-in",
          "zoom-out",
        ],
        "defaultValue": null,
        "description": "The icon shown.",
        "type": "LinkSocialIcon",
      },
      "iconSource": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "A URL path to a custom icon.",
        "type": "string",
      },
      "rel": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Specifies the relationship of the target object to the link object.",
        "type": "string",
      },
      "target": {
        "allowedValues": [
          "_self",
          "_blank",
          "_parent",
          "_top",
          "string",
        ],
        "defaultValue": "_self",
        "description": "Target attribute where the link should be opened.",
        "type": "LinkSocialTarget",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the link color when used on dark background.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot to render the link label.",
      },
    },
    "styling": "jss",
  },
  "p-link-tile": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": false,
    "nestedComponents": [
      "p-link",
      "p-link-pure",
    ],
    "propsMeta": {
      "align": {
        "allowedValues": [
          "top",
          "bottom",
        ],
        "defaultValue": "bottom",
        "description": "Alignment of link and description.",
        "type": "LinkTileAlign",
      },
      "aria": {
        "allowedValues": {
          "aria-current": "string",
          "aria-haspopup": "string",
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "LinkTileAriaAttribute",
      },
      "aspectRatio": {
        "allowedValues": [
          "1/1",
          "4/3",
          "3/4",
          "16/9",
          "9/16",
          "1:1",
          "4:3",
          "3:4",
          "16:9",
          "9:16",
        ],
        "defaultValue": "4/3",
        "deprecatedValues": [
          "1:1",
          "4:3",
          "3:4",
          "16:9",
          "9:16",
        ],
        "description": "Aspect ratio of the link-tile.",
        "isBreakpointCustomizable": true,
        "type": "LinkTileAspectRatio",
      },
      "background": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "dark",
        "description": "Adapts the description and link theme when used on light background image.",
        "type": "LinkTileBackground",
      },
      "compact": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Displays the link-tile as compact version with description and link icon only.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "description": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Description text.",
        "isRequired": true,
        "type": "string",
      },
      "download": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Special download attribute to open native browser download dialog if target url points to a downloadable file.",
        "type": "string",
      },
      "gradient": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "Show gradient.",
        "type": "boolean",
      },
      "href": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "href of the \`<a>\`.",
        "isRequired": true,
        "type": "string",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Label of the <a />.",
        "isRequired": true,
        "type": "string",
      },
      "rel": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Specifies the relationship of the target object to the link object.",
        "type": "string",
      },
      "size": {
        "allowedValues": [
          "medium",
          "large",
          "inherit",
          "default",
        ],
        "defaultValue": "medium",
        "deprecatedValues": [
          "default",
        ],
        "description": "Font size of the description.",
        "isBreakpointCustomizable": true,
        "type": "LinkTileSize",
      },
      "target": {
        "allowedValues": [
          "_self",
          "_blank",
          "_parent",
          "_top",
          "string",
        ],
        "defaultValue": "_self",
        "description": "Target attribute where the link should be opened.",
        "type": "LinkTileTarget",
      },
      "weight": {
        "allowedValues": [
          "regular",
          "semi-bold",
          "semibold",
        ],
        "defaultValue": "semi-bold",
        "deprecatedValues": [
          "semibold",
        ],
        "description": "Font weight of the description.",
        "isBreakpointCustomizable": true,
        "type": "LinkTileWeight",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the img or picture tag.",
      },
      "header": {
        "description": "Renders a header section above the content area.",
      },
    },
    "styling": "jss",
  },
  "p-link-tile-model-signature": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "nestedComponents": [
      "p-model-signature",
    ],
    "propsMeta": {
      "aspectRatio": {
        "allowedValues": [
          "1/1",
          "4/3",
          "3/4",
          "16/9",
          "9/16",
          "1:1",
          "4:3",
          "3:4",
          "16:9",
          "9:16",
        ],
        "defaultValue": "3/4",
        "deprecatedValues": [
          "1:1",
          "4:3",
          "3:4",
          "16:9",
          "9:16",
        ],
        "description": "Aspect ratio of the link-tile-model-signature.",
        "isBreakpointCustomizable": true,
        "type": "LinkTileModelSignatureAspectRatio",
      },
      "description": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Description text.",
        "type": "string",
      },
      "heading": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Heading text.",
        "isRequired": true,
        "type": "string",
      },
      "headingTag": {
        "allowedValues": [
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
        ],
        "defaultValue": "h2",
        "description": "Sets a heading tag, so it fits correctly within the outline of the page.",
        "type": "LinkTileModelSignatureHeadingTag",
      },
      "linkDirection": {
        "allowedValues": [
          "row",
          "column",
        ],
        "defaultValue": {
          "base": "column",
          "xs": "row",
        },
        "description": "Defines the direction of the main and cross axis of the links. The default is '{base: ‘column’, xs: ‘row’}' showing buttons vertically stacked on mobile viewports and side-by-side in a horizontal row from breakpoint 'xs'.",
        "isBreakpointCustomizable": true,
        "type": "LinkTileModelSignatureLinkDirection",
      },
      "model": {
        "allowedValues": [
          "718",
          "911",
          "boxster",
          "cayenne",
          "cayman",
          "macan",
          "panamera",
          "taycan",
          "turbo-s",
          "turbo",
        ],
        "defaultValue": "911",
        "description": "Adapts the model of the component.",
        "type": "LinkTileModelSignatureModel",
      },
      "weight": {
        "allowedValues": [
          "regular",
          "semi-bold",
        ],
        "defaultValue": "semi-bold",
        "description": "Adapts the font weight of the heading.",
        "isBreakpointCustomizable": true,
        "type": "LinkTileModelSignatureWeight",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the img or picture tag.",
      },
      "header": {
        "description": "Renders a header section above the content area.",
      },
      "primary": {
        "allowedTagNames": [
          "p-link",
        ],
        "description": "Renders the primary link. Has to be a p-link tag.",
        "isRequired": true,
      },
      "secondary": {
        "allowedTagNames": [
          "p-link",
        ],
        "description": "Renders the secondary link. Has to be a p-link tag.",
        "isRequired": true,
      },
    },
    "styling": "jss",
  },
  "p-link-tile-product": {
    "controlledMeta": [
      {
        "event": "like",
        "props": [
          "liked",
        ],
      },
    ],
    "eventsMeta": {
      "like": {
        "description": "Emitted when the like button is clicked.",
        "type": "LinkTileProductLikeEventDetail",
        "typeDetail": "{ liked: boolean }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isExperimental": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-button-pure",
    ],
    "propsMeta": {
      "aspectRatio": {
        "allowedValues": [
          "3:4",
          "9:16",
        ],
        "defaultValue": "3:4",
        "description": "Aspect ratio of the link-tile-product.",
        "isBreakpointCustomizable": true,
        "type": "LinkTileProductAspectRatio",
      },
      "description": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Additional product description.",
        "type": "string",
      },
      "heading": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Product heading.",
        "isRequired": true,
        "type": "string",
      },
      "href": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "href of the \`<a>\`.",
        "type": "string",
      },
      "likeButton": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "A Boolean attribute indicating that a like button should be shown.",
        "type": "boolean",
      },
      "liked": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "A Boolean attribute indicating that a product is liked.",
        "type": "boolean",
      },
      "price": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Product retail price (with or without discount).",
        "isRequired": true,
        "type": "string",
      },
      "priceOriginal": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Shows original price (recommended retail price) with line-through. Needs prop "price" to be defined, otherwise this prop has no effect.",
        "type": "string",
      },
      "rel": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Specifies the relationship of the target object to the link object.",
        "type": "string",
      },
      "target": {
        "allowedValues": [
          "_self",
          "_blank",
          "_parent",
          "_top",
          "string",
        ],
        "defaultValue": "_self",
        "description": "Target attribute where the link should be opened.",
        "type": "LinkTileProductTarget",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the link-tile-product color depending on the theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the img or picture tag.",
      },
      "anchor": {
        "description": "Slotted anchor link which can be used instead of the \`href\` prop. Ensure the named slot is directly on the anchor element, without nesting.",
      },
      "header": {
        "description": "Shows special features about the product like novelty or exclusivity. Although you can pass in anything, it is recommended to use the \`p-tag\` component.",
      },
    },
    "styling": "jss",
  },
  "p-marque": {
    "deprecationMessage": "since v3.0.0, will be removed with next major release. Please use "p-wordmark" instead.",
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": false,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isDeprecated": true,
    "isInternal": false,
    "isThemeable": false,
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-current": "string",
          "aria-haspopup": "string",
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "MarqueAriaAttribute",
      },
      "href": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "When providing an url then the component will be rendered as \`<a>\`.",
        "type": "string",
      },
      "size": {
        "allowedValues": [
          "responsive",
          "small",
          "medium",
        ],
        "defaultValue": "responsive",
        "description": "Adapts sizing of marque.",
        "type": "MarqueSize",
      },
      "target": {
        "allowedValues": [
          "_self",
          "_blank",
          "_parent",
          "_top",
          "string",
        ],
        "defaultValue": "_self",
        "description": "Target attribute where the link should be opened.",
        "type": "MarqueTarget",
      },
      "trademark": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "Show/hide trademark sign (only has effect when variant is set to default).",
        "type": "boolean",
      },
      "variant": {
        "allowedValues": [
          "75-years",
          "default",
        ],
        "defaultValue": "default",
        "description": "Shows marque in special editions",
        "type": "MarqueVariant",
      },
    },
    "styling": "jss",
  },
  "p-modal": {
    "controlledMeta": [
      {
        "event": "dismiss",
        "props": [
          "open",
        ],
      },
    ],
    "eventsMeta": {
      "close": {
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`dismiss\` event instead. Emitted when the component requests to be dismissed.",
        "isDeprecated": true,
        "type": "void",
      },
      "dismiss": {
        "description": "Emitted when the component requests to be dismissed.",
        "type": "void",
      },
      "motionHiddenEnd": {
        "description": "Emitted when the modal is closed and the transition is finished.",
        "type": "ModalMotionHiddenEndEventDetail",
        "typeDetail": "TransitionEvent",
      },
      "motionVisibleEnd": {
        "description": "Emitted when the modal is opened and the transition is finished.",
        "type": "ModalMotionVisibleEndEventDetail",
        "typeDetail": "TransitionEvent",
      },
    },
    "hasAriaProp": true,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": true,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-button",
    ],
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "ModalAriaAttribute",
      },
      "backdrop": {
        "allowedValues": [
          "blur",
          "shading",
        ],
        "defaultValue": "blur",
        "description": "Defines the backdrop, 'blur' (should be used when Modal is opened by user interaction, e.g. after a click on a button) and 'shading' (should be used when Modal gets opened automatically, e.g. Cookie Consent).",
        "type": "ModalBackdrop",
      },
      "disableBackdropClick": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "If true, the modal will not be closable via backdrop click.",
        "type": "boolean",
      },
      "disableCloseButton": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "If true, the modal will not have a dismiss button. @deprecated since v3.0.0, will be removed with next major release, use \`dismissButton\` instead.",
        "isDeprecated": true,
        "type": "boolean",
      },
      "dismissButton": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "If false, the modal will not have a dismiss button.",
        "type": "boolean",
      },
      "fullscreen": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "If true the modal uses max viewport height and width. Should only be used for mobile.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "heading": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`header\` slot instead The title of the modal",
        "isDeprecated": true,
        "type": "string",
      },
      "open": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "If true, the modal is open.",
        "isRequired": true,
        "type": "boolean",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the modal color depending on the theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the main content.",
      },
      "footer": {
        "description": "Shows a sticky footer section, flowing under the content area when scrollable.",
      },
      "header": {
        "description": "Renders a header section above the content area.",
      },
      "heading": {
        "description": "Renders a heading section above the content area.",
        "isDeprecated": true,
      },
    },
    "styling": "jss",
  },
  "p-model-signature": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "color": {
        "allowedValues": [
          "primary",
          "contrast-low",
          "contrast-medium",
          "contrast-high",
          "inherit",
        ],
        "defaultValue": "primary",
        "description": "Adapts the color of the component.",
        "type": "ModelSignatureColor",
      },
      "fetchPriority": {
        "allowedValues": [
          "low",
          "high",
          "auto",
        ],
        "defaultValue": "auto",
        "description": "Defines the fetch priority of the model signature. In the end it is just a recommendation to the browser, but it defines the priority on its own.",
        "type": "ModelSignatureFetchPriority",
      },
      "lazy": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Defines whether the model signature is always loaded or only loaded when it is in the viewport (this feature may not work reliably).",
        "type": "boolean",
      },
      "model": {
        "allowedValues": [
          "718",
          "911",
          "boxster",
          "cayenne",
          "cayman",
          "macan",
          "panamera",
          "taycan",
          "turbo-s",
          "turbo",
        ],
        "defaultValue": "911",
        "description": "Adapts the model of the component.",
        "type": "ModelSignatureModel",
      },
      "safeZone": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "When set to \`true\`, then all model signatures are visually aligned with each other. When set to \`false\` the model signature comes without any safe zone.",
        "type": "boolean",
      },
      "size": {
        "allowedValues": [
          "small",
          "inherit",
        ],
        "defaultValue": "small",
        "description": "Adapts the size of the component. When set to \`inherit\` a CSS \`width\` or \`height\` needs to be defined on the host but not both.",
        "type": "ModelSignatureSize",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts color depending on theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for an img or video tag when using the model-signature as a mask.",
      },
    },
    "styling": "jss",
  },
  "p-multi-select": {
    "controlledMeta": [
      {
        "event": "update",
        "isInternallyMutated": true,
        "props": [
          "value",
        ],
      },
    ],
    "eventsMeta": {
      "update": {
        "description": "Emitted when the selection is changed.",
        "type": "MultiSelectUpdateEventDetail",
        "typeDetail": "{ name: string; value: string[] }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
      "p-button-pure",
    ],
    "propsMeta": {
      "description": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The description text.",
        "type": "string",
      },
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the multi-select",
        "type": "boolean",
      },
      "dropdownDirection": {
        "allowedValues": [
          "down",
          "up",
          "auto",
        ],
        "defaultValue": "auto",
        "description": "Changes the direction to which the dropdown list appears.",
        "type": "MultiSelectDropdownDirection",
      },
      "form": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The id of a form element the multi-select should be associated with.",
        "type": "string",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it is recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "name": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The name of the control.",
        "isRequired": true,
        "type": "string",
      },
      "required": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "A Boolean attribute indicating that an option with a non-empty string value must be selected.",
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "MultiSelectState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the multi-select color depending on the theme.",
        "type": "Theme",
      },
      "value": {
        "allowedValues": "string",
        "defaultValue": [],
        "description": "The selected values.",
        "isArray": true,
        "type": "string[]",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the p-multi-select-option tags.",
      },
      "description": {
        "description": "Shows a description. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-multi-select-option": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": false,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "nestedComponents": [
      "p-checkbox-wrapper",
    ],
    "propsMeta": {
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the option.",
        "type": "boolean",
      },
      "value": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The option value.",
        "isRequired": true,
        "type": "string",
      },
    },
    "requiredParent": [
      "p-multi-select",
      "p-optgroup",
    ],
    "slotsMeta": {
      "": {
        "description": "Default slot for the option text.",
      },
    },
    "styling": "jss",
  },
  "p-optgroup": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "propsMeta": {
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the optgroup.",
        "type": "boolean",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The optgroup label.",
        "type": "string",
      },
    },
    "requiredParent": [
      "p-select",
      "p-multi-select",
    ],
    "slotsMeta": {
      "": {
        "description": "Default slot for the optgroup content.",
      },
    },
    "styling": "jss",
  },
  "p-pagination": {
    "controlledMeta": [
      {
        "event": "update",
        "isInternallyMutated": true,
        "props": [
          "activePage",
        ],
      },
    ],
    "eventsMeta": {
      "pageChange": {
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`update\` event instead. Emitted when the page changes.",
        "isDeprecated": true,
        "type": "PaginationUpdateEventDetail",
        "typeDetail": "{ page: number; previousPage: number }",
      },
      "update": {
        "description": "Emitted when the page changes.",
        "type": "PaginationUpdateEventDetail",
        "typeDetail": "{ page: number; previousPage: number }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": false,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "activePage": {
        "allowedValues": "number",
        "defaultValue": 1,
        "description": "Index of the currently active page.",
        "type": "number",
      },
      "allyLabel": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`intl.root\` instead. Aria label what the pagination is used for.",
        "isDeprecated": true,
        "type": "string",
      },
      "allyLabelNext": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`intl.next\` instead. Aria label for next page icon.",
        "isDeprecated": true,
        "type": "string",
      },
      "allyLabelPage": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`intl.page\` instead. Aria label for page navigation.",
        "isDeprecated": true,
        "type": "string",
      },
      "allyLabelPrev": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`intl.prev\` instead. Aria label for previous page icon.",
        "isDeprecated": true,
        "type": "string",
      },
      "intl": {
        "allowedValues": {
          "next": "string",
          "page": "string",
          "prev": "string",
          "root": "string",
        },
        "defaultValue": {
          "next": "Next page",
          "page": "Page",
          "prev": "Previous page",
          "root": "Pagination",
        },
        "description": "Override the default wordings that are used for aria-labels on the next/prev and page buttons.",
        "type": "PaginationInternationalization",
      },
      "itemsPerPage": {
        "allowedValues": "number",
        "defaultValue": 1,
        "description": "The total count of items which should be shown per page.",
        "isRequired": true,
        "type": "number",
      },
      "maxNumberOfPageLinks": {
        "defaultValue": null,
        "description": "Has no effect anymore @deprecated since v3.10.0, will be removed with next major release",
        "isDeprecated": true,
        "type": "PaginationMaxNumberOfPageLinks",
      },
      "showLastPage": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "Show or hide the button to jump to the last page.",
        "type": "boolean",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color when used on dark background.",
        "type": "Theme",
      },
      "totalItemsCount": {
        "allowedValues": "number",
        "defaultValue": 1,
        "description": "The total count of items.",
        "isRequired": true,
        "type": "number",
      },
    },
    "styling": "jss",
  },
  "p-pin-code": {
    "controlledMeta": [
      {
        "event": "update",
        "isInternallyMutated": true,
        "props": [
          "value",
        ],
      },
    ],
    "eventsMeta": {
      "update": {
        "description": "Emitted when selected element changes.",
        "type": "PinCodeUpdateEventDetail",
        "typeDetail": "{ value: string; isComplete: boolean }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-spinner",
      "p-icon",
    ],
    "propsMeta": {
      "description": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The description text.",
        "type": "string",
      },
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the Pin Code. No events will be triggered while disabled state is active.",
        "type": "boolean",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label and description text. For better accessibility it is recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "length": {
        "allowedValues": [
          1,
          2,
          3,
          4,
          5,
          6,
        ],
        "defaultValue": 4,
        "description": "Number of characters of the Pin Code.",
        "type": "PinCodeLength",
      },
      "loading": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the Pin Code and shows a loading indicator. No events will be triggered while loading state is active.",
        "type": "boolean",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "name": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Name of the control.",
        "type": "string",
      },
      "required": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Marks the Pin Code as required.",
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "PinCodeState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color depending on the theme.",
        "type": "Theme",
      },
      "type": {
        "allowedValues": [
          "number",
          "password",
        ],
        "defaultValue": "number",
        "description": "Pin Code type.",
        "type": "PinCodeType",
      },
      "value": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "Sets the initial value of the Pin Code.",
        "type": "string",
      },
    },
    "slotsMeta": {
      "description": {
        "description": "Shows a description. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-popover": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "PopoverAriaAttribute",
      },
      "description": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Descriptive text to show additional information when popover is open",
        "type": "string",
      },
      "direction": {
        "allowedValues": [
          "top",
          "right",
          "bottom",
          "left",
        ],
        "defaultValue": "bottom",
        "description": "Preferred direction in which popover should open, given there is enough space in viewport. Otherwise, it will be opened in the direction with most available space.",
        "type": "PopoverDirection",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the popover color depending on the theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the popover content.",
      },
    },
    "styling": "jss",
  },
  "p-radio-button-wrapper": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": true,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-spinner",
      "p-icon",
    ],
    "observedAttributes": [
      "disabled",
      "required",
    ],
    "propsMeta": {
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it's recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "loading": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "@experimental Disables the radio button and shows a loading indicator.",
        "isExperimental": true,
        "type": "boolean",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "RadioButtonWrapperState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color depending on the theme.",
        "type": "Theme",
      },
    },
    "requiredChild": "input type=radio",
    "requiredChildSelector": "input[type=radio]",
    "slotsMeta": {
      "": {
        "description": "Default slot for the input.",
      },
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-scroller": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-button",
    ],
    "propsMeta": {
      "alignScrollIndicator": {
        "allowedValues": [
          "top",
          "center",
        ],
        "defaultValue": "center",
        "description": "Sets the vertical position of scroll indicator.",
        "type": "ScrollerAlignScrollIndicator",
      },
      "aria": {
        "allowedValues": {
          "role": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA role.",
        "isAria": true,
        "type": "ScrollerAriaAttribute",
      },
      "gradientColor": {
        "allowedValues": [
          "background-base",
          "background-surface",
        ],
        "defaultValue": "background-base",
        "description": "Adapts the background gradient color of prev and next button.",
        "type": "ScrollerGradientColor",
      },
      "gradientColorScheme": {
        "allowedValues": [
          null,
          "default",
          "surface",
        ],
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`gradientColor\` instead. Adapts the background gradient color of prev and next button.",
        "isDeprecated": true,
        "type": "ScrollerGradientColorScheme",
      },
      "scrollIndicatorPosition": {
        "allowedValues": [
          null,
          "top",
          "center",
        ],
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`alignScrollIndicator\` instead. Sets the vertical position of scroll indicator",
        "isDeprecated": true,
        "type": "ScrollerScrollIndicatorPosition",
      },
      "scrollToPosition": {
        "allowedValues": {
          "isSmooth": "boolean",
          "scrollPosition": "number",
        },
        "defaultValue": null,
        "description": "Scrolls the scroll area to the left either smooth or immediately.",
        "type": "ScrollerScrollToPosition",
      },
      "scrollbar": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Specifies if scrollbar should be shown.",
        "type": "boolean",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color when used on dark background.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the scroller content.",
      },
    },
    "styling": "jss",
  },
  "p-segmented-control": {
    "controlledMeta": [
      {
        "event": "update",
        "isInternallyMutated": true,
        "props": [
          "value",
        ],
      },
    ],
    "eventsMeta": {
      "segmentedControlChange": {
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`update\` event instead. Emitted when selected element changes.",
        "isDeprecated": true,
        "type": "SegmentedControlUpdateEventDetail",
        "typeDetail": "{ value: string | number }",
      },
      "update": {
        "description": "Emitted when selected element changes.",
        "type": "SegmentedControlUpdateEventDetail",
        "typeDetail": "{ value: string | number }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": true,
    "hasSlot": true,
    "hostAttributes": {
      "role": "group",
    },
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "backgroundColor": {
        "allowedValues": [
          null,
          "background-surface",
          "background-default",
        ],
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release. Background color variations",
        "isDeprecated": true,
        "type": "SegmentedControlBackgroundColor",
      },
      "columns": {
        "allowedValues": [
          "auto",
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
        ],
        "defaultValue": "auto",
        "description": "Sets the amount of columns.",
        "isBreakpointCustomizable": true,
        "type": "SegmentedControlColumns",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the segmented-control color depending on the theme.",
        "type": "Theme",
      },
      "value": {
        "allowedValues": [
          "string",
          "number",
        ],
        "defaultValue": null,
        "description": "Sets the initial value of the segmented-control.",
        "type": "string | number",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the \`p-segmented-control-item\` tags.",
      },
    },
    "styling": "jss",
  },
  "p-segmented-control-item": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "internalProps": {
      "selected": null,
      "theme": "light",
    },
    "isChunked": false,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": false,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "SegmentedControlItemAriaAttribute",
      },
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the button. No events will be triggered while disabled state is active.",
        "type": "boolean",
      },
      "icon": {
        "allowedValues": [
          "",
          "360",
          "accessibility",
          "active-cabin-ventilation",
          "add",
          "adjust",
          "arrow-double-down",
          "arrow-double-left",
          "arrow-double-right",
          "arrow-double-up",
          "arrow-down",
          "arrow-first",
          "arrow-head-down",
          "arrow-head-left",
          "arrow-head-right",
          "arrow-head-up",
          "arrow-last",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "attachment",
          "augmented-reality",
          "battery-empty",
          "battery-empty-co2",
          "battery-empty-fuel",
          "battery-full",
          "bell",
          "bookmark",
          "bookmark-filled",
          "broadcast",
          "calculator",
          "calendar",
          "camera",
          "car",
          "car-battery",
          "card",
          "charging-active",
          "charging-state",
          "charging-station",
          "chart",
          "chat",
          "check",
          "city",
          "climate",
          "climate-control",
          "clock",
          "close",
          "closed-caption",
          "co2-class",
          "co2-emission",
          "compare",
          "configurate",
          "copy",
          "country-road",
          "cubic-capacity",
          "delete",
          "disable",
          "dislike",
          "dislike-filled",
          "document",
          "download",
          "duration",
          "edit",
          "email",
          "error-filled",
          "exclamation",
          "external",
          "filter",
          "fingerprint",
          "flash",
          "fuel-station",
          "garage",
          "gift",
          "globe",
          "grid",
          "heart",
          "heart-filled",
          "highway",
          "home",
          "horn",
          "image",
          "increase",
          "information",
          "information-filled",
          "key",
          "leaf",
          "leather",
          "light",
          "like",
          "like-filled",
          "list",
          "locate",
          "lock",
          "lock-open",
          "logo-apple-podcast",
          "logo-baidu",
          "logo-delicious",
          "logo-digg",
          "logo-facebook",
          "logo-foursquare",
          "logo-gmail",
          "logo-google",
          "logo-hatena",
          "logo-instagram",
          "logo-kaixin",
          "logo-kakaotalk",
          "logo-linkedin",
          "logo-naver",
          "logo-pinterest",
          "logo-qq",
          "logo-qq-share",
          "logo-reddit",
          "logo-skyrock",
          "logo-sohu",
          "logo-spotify",
          "logo-tecent",
          "logo-telegram",
          "logo-tiktok",
          "logo-tumblr",
          "logo-twitter",
          "logo-viber",
          "logo-vk",
          "logo-wechat",
          "logo-weibo",
          "logo-whatsapp",
          "logo-x",
          "logo-xing",
          "logo-yahoo",
          "logo-youku",
          "logo-youtube",
          "logout",
          "map",
          "menu-dots-horizontal",
          "menu-dots-vertical",
          "menu-lines",
          "minus",
          "mobile",
          "moon",
          "new-chat",
          "oil-can",
          "parking-brake",
          "parking-light",
          "pause",
          "phone",
          "pin",
          "pin-filled",
          "play",
          "plug",
          "plus",
          "preheating",
          "printer",
          "purchase",
          "push-pin",
          "push-pin-off",
          "qr",
          "question",
          "racing-flag",
          "refresh",
          "replay",
          "reset",
          "roof-closed",
          "roof-open",
          "route",
          "rss",
          "save",
          "screen",
          "search",
          "send",
          "share",
          "shopping-bag",
          "shopping-bag-filled",
          "shopping-cart",
          "shopping-cart-filled",
          "sidebar",
          "sidelights",
          "snowflake",
          "sort",
          "stack",
          "star",
          "star-filled",
          "steering-wheel",
          "stopwatch",
          "subtract",
          "success",
          "success-filled",
          "sun",
          "switch",
          "tablet",
          "tachometer",
          "tire",
          "truck",
          "upload",
          "user",
          "user-filled",
          "user-group",
          "user-manual",
          "video",
          "view",
          "view-off",
          "volume-off",
          "volume-up",
          "warning",
          "warning-filled",
          "weight",
          "wifi",
          "work",
          "wrench",
          "wrenches",
          "zoom-in",
          "zoom-out",
        ],
        "defaultValue": null,
        "description": "The icon shown.",
        "type": "SegmentedControlItemIcon",
      },
      "iconSource": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "A URL path to a custom icon.",
        "type": "string",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The label text.",
        "type": "string",
      },
      "value": {
        "allowedValues": [
          "string",
          "number",
        ],
        "defaultValue": null,
        "description": "The value of this item which is emitted by the parent element if it becomes selected. This property is*required**.",
        "isRequired": true,
        "type": "string | number",
      },
    },
    "requiredParent": "p-segmented-control",
    "slotsMeta": {
      "": {
        "description": "Default slot for the content.",
      },
    },
    "styling": "jss",
  },
  "p-select": {
    "controlledMeta": [
      {
        "event": "update",
        "isInternallyMutated": true,
        "props": [
          "value",
        ],
      },
    ],
    "eventsMeta": {
      "update": {
        "description": "Emitted when the selection is changed.",
        "type": "SelectUpdateEventDetail",
        "typeDetail": "{ name: string; value: string }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "description": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The description text.",
        "type": "string",
      },
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the select",
        "type": "boolean",
      },
      "dropdownDirection": {
        "allowedValues": [
          "down",
          "up",
          "auto",
        ],
        "defaultValue": "auto",
        "description": "Changes the direction to which the dropdown list appears.",
        "type": "SelectDropdownDirection",
      },
      "form": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The id of a form element the select should be associated with.",
        "type": "string",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it is recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "name": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The name of the control.",
        "isRequired": true,
        "type": "string",
      },
      "required": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "A Boolean attribute indicating that an option with a non-empty string value must be selected.",
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "SelectState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the select color depending on the theme.",
        "type": "Theme",
      },
      "value": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The selected value.",
        "type": "string",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the \`p-select-option\` tags.",
      },
      "description": {
        "description": "Shows a description. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-select-option": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": false,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the option.",
        "type": "boolean",
      },
      "value": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The option value.",
        "type": "string",
      },
    },
    "requiredParent": [
      "p-select",
      "p-optgroup",
    ],
    "slotsMeta": {
      "": {
        "description": "Default slot for the option content.",
      },
    },
    "styling": "jss",
  },
  "p-select-wrapper": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": true,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
      "p-select-wrapper-dropdown",
    ],
    "observedAttributes": [
      "disabled",
      "required",
    ],
    "propsMeta": {
      "description": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The description text.",
        "type": "string",
      },
      "dropdownDirection": {
        "allowedValues": [
          "down",
          "up",
          "auto",
        ],
        "defaultValue": "auto",
        "description": "Changes the direction to which the dropdown list appears.",
        "type": "SelectWrapperDropdownDirection",
      },
      "filter": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Filters select options by typing a character",
        "type": "boolean",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it is recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "native": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Forces rendering of native browser select dropdown",
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "SelectWrapperState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the select color depending on the theme.",
        "type": "Theme",
      },
    },
    "requiredChild": "select",
    "requiredChildSelector": "select",
    "slotsMeta": {
      "": {
        "description": "Default slot for the \`select\` tag.",
      },
      "description": {
        "description": "Shows a description. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-select-wrapper-dropdown": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": true,
    "hasSlot": false,
    "isChunked": false,
    "isDelegatingFocus": true,
    "isInternal": true,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "description": {
        "defaultValue": null,
        "type": "string",
      },
      "direction": {
        "defaultValue": "auto",
        "type": "SelectWrapperDropdownDirection",
      },
      "disabled": {
        "defaultValue": false,
        "type": "boolean",
      },
      "filter": {
        "defaultValue": false,
        "type": "boolean",
      },
      "isOpenOverride": {
        "defaultValue": false,
        "type": "boolean",
      },
      "label": {
        "defaultValue": null,
        "type": "string",
      },
      "message": {
        "defaultValue": null,
        "type": "string",
      },
      "onOpenChange": {
        "defaultValue": null,
        "isRequired": true,
        "type": "(isOpen: boolean) => void",
      },
      "required": {
        "defaultValue": false,
        "type": "boolean",
      },
      "selectRef": {
        "defaultValue": null,
        "type": "HTMLSelectElement",
      },
      "state": {
        "defaultValue": null,
        "type": "SelectWrapperState",
      },
      "theme": {
        "defaultValue": "light",
        "type": "Theme",
      },
    },
    "requiredRootNode": [
      "p-select-wrapper",
    ],
    "styling": "jss",
  },
  "p-spinner": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": false,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "SpinnerAriaAttribute",
      },
      "size": {
        "allowedValues": [
          "small",
          "medium",
          "large",
          "inherit",
        ],
        "defaultValue": "small",
        "description": "Size of the spinner.",
        "isBreakpointCustomizable": true,
        "type": "SpinnerSize",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the spinner color depending on the theme.",
        "type": "Theme",
      },
    },
    "styling": "jss",
  },
  "p-stepper-horizontal": {
    "eventsMeta": {
      "stepChange": {
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`update\` event instead. Emitted when active step is changed.",
        "isDeprecated": true,
        "type": "StepperHorizontalUpdateEventDetail",
        "typeDetail": "{ activeStepIndex: number }",
      },
      "update": {
        "description": "Emitted when active step is changed.",
        "type": "StepperHorizontalUpdateEventDetail",
        "typeDetail": "{ activeStepIndex: number }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-scroller",
    ],
    "propsMeta": {
      "size": {
        "allowedValues": [
          "small",
          "medium",
        ],
        "defaultValue": "small",
        "description": "The text size.",
        "isBreakpointCustomizable": true,
        "type": "StepperHorizontalSize",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the tag color depending on the theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the \`p-stepper-horizontal-item\` tags.",
      },
    },
    "styling": "jss",
  },
  "p-stepper-horizontal-item": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "hostAttributes": {
      "role": "listitem",
    },
    "internalProps": {
      "theme": "light",
    },
    "isChunked": false,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": false,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the stepper-horizontal-item. No events will be triggered while disabled state is active.",
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          null,
          "current",
          "complete",
          "warning",
        ],
        "defaultValue": null,
        "description": "The validation state.",
        "type": "StepperHorizontalItemState",
      },
    },
    "requiredParent": "p-stepper-horizontal",
    "slotsMeta": {
      "": {
        "description": "Default slot for the content.",
      },
    },
    "styling": "jss",
  },
  "p-switch": {
    "controlledMeta": [
      {
        "event": "update",
        "props": [
          "checked",
        ],
      },
    ],
    "eventsMeta": {
      "switchChange": {
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`update\` event instead. Emitted when checked status is changed.",
        "isDeprecated": true,
        "type": "SwitchUpdateEventDetail",
        "typeDetail": "{ checked: boolean }",
      },
      "update": {
        "description": "Emitted when checked status is changed.",
        "type": "SwitchUpdateEventDetail",
        "typeDetail": "{ checked: boolean }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-spinner",
    ],
    "propsMeta": {
      "alignLabel": {
        "allowedValues": [
          "start",
          "end",
          "left",
          "right",
        ],
        "defaultValue": "end",
        "deprecatedValues": [
          "left",
          "right",
        ],
        "description": "Aligns the label.",
        "isBreakpointCustomizable": true,
        "type": "SwitchAlignLabel",
      },
      "checked": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Visualize the switch with on/off status.",
        "type": "boolean",
      },
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the switch. No events will be triggered while disabled state is active.",
        "type": "boolean",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it's recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "loading": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the switch and shows a loading indicator. No events will be triggered while loading state is active.",
        "type": "boolean",
      },
      "stretch": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Stretches the contents to max available space.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the switch color depending on the theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the label.",
      },
    },
    "styling": "jss",
  },
  "p-table": {
    "eventsMeta": {
      "sortingChange": {
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`update\` event instead. Emitted when sorting is changed.",
        "isDeprecated": true,
        "type": "TableUpdateEventDetail",
        "typeDetail": "{ id: string; active?: boolean; direction?: Direction }",
      },
      "update": {
        "description": "Emitted when sorting is changed.",
        "type": "TableUpdateEventDetail",
        "typeDetail": "{ id: string; active?: boolean; direction?: Direction }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-scroller",
    ],
    "propsMeta": {
      "caption": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "A caption describing the contents of the table for accessibility only. This won't be visible in the browser. Use an element with an attribute of \`slot="caption"\` for a visible caption.",
        "type": "string",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color when used on dark background.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the table content.",
      },
      "caption": {
        "description": "Shows a caption that describes the content of the table.",
      },
    },
    "styling": "jss",
  },
  "p-table-body": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "hostAttributes": {
      "role": "rowgroup",
    },
    "isChunked": false,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "requiredParent": "p-table",
    "slotsMeta": {
      "": {
        "description": "Default slot for the table body content.",
      },
    },
    "styling": "jss",
  },
  "p-table-cell": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "hostAttributes": {
      "role": "cell",
    },
    "isChunked": false,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "propsMeta": {
      "multiline": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Displays slotted text multiline or forced into a single line.",
        "type": "boolean",
      },
    },
    "requiredParent": "p-table-row",
    "slotsMeta": {
      "": {
        "description": "Default slot for the table cell content.",
      },
    },
    "styling": "jss",
  },
  "p-table-head": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "hostAttributes": {
      "role": "rowgroup",
    },
    "isChunked": false,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "requiredParent": "p-table",
    "slotsMeta": {
      "": {
        "description": "Default slot for the table head content.",
      },
    },
    "styling": "jss",
  },
  "p-table-head-cell": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "hostAttributes": {
      "role": "columnheader",
      "scope": "col",
    },
    "isChunked": false,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Hides the label but stays accessible for screen readers. This property only takes effect when sort property is not defined.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "multiline": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Displays slotted text multiline or forced into a single line.",
        "type": "boolean",
      },
      "sort": {
        "allowedValues": {
          "active": "boolean",
          "direction": [
            null,
            "asc",
            "desc",
          ],
          "id": "string",
        },
        "defaultValue": null,
        "description": "Defines sortability properties.",
        "type": "TableHeadCellSort",
      },
    },
    "requiredParent": "p-table-head-row",
    "slotsMeta": {
      "": {
        "description": "Default slot for the table head cell content.",
      },
    },
    "styling": "jss",
  },
  "p-table-head-row": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "hostAttributes": {
      "role": "row",
    },
    "isChunked": false,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "requiredParent": "p-table-head",
    "slotsMeta": {
      "": {
        "description": "Default slot for the table head row content.",
      },
    },
    "styling": "jss",
  },
  "p-table-row": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "hostAttributes": {
      "role": "row",
    },
    "isChunked": false,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "requiredParent": "p-table-body",
    "slotsMeta": {
      "": {
        "description": "Default slot for the table row content.",
      },
    },
    "styling": "jss",
  },
  "p-tabs": {
    "controlledMeta": [
      {
        "event": "update",
        "isInternallyMutated": true,
        "props": [
          "activeTabIndex",
        ],
      },
    ],
    "eventsMeta": {
      "tabChange": {
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`update\` event instead. Emitted when active tab is changed.",
        "isDeprecated": true,
        "type": "TabsUpdateEventDetail",
        "typeDetail": "{ activeTabIndex: number }",
      },
      "update": {
        "description": "Emitted when active tab is changed.",
        "type": "TabsUpdateEventDetail",
        "typeDetail": "{ activeTabIndex: number }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-tabs-bar",
    ],
    "propsMeta": {
      "activeTabIndex": {
        "allowedValues": "number",
        "defaultValue": 0,
        "description": "Defines which tab to be visualized as selected (zero-based numbering).",
        "type": "number",
      },
      "gradientColor": {
        "allowedValues": [
          "background-base",
          "background-surface",
        ],
        "defaultValue": "background-base",
        "description": "Adapts the background gradient color of prev and next button.",
        "type": "TabsGradientColor",
      },
      "gradientColorScheme": {
        "allowedValues": [
          null,
          "default",
          "surface",
        ],
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`gradientColor\` instead. Adapts the background gradient color of prev and next button.",
        "isDeprecated": true,
        "type": "TabsGradientColorScheme",
      },
      "size": {
        "allowedValues": [
          "small",
          "medium",
        ],
        "defaultValue": "small",
        "description": "The text size.",
        "isBreakpointCustomizable": true,
        "type": "TabsSize",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color when used on dark background.",
        "type": "Theme",
      },
      "weight": {
        "allowedValues": [
          "regular",
          "semi-bold",
          "semibold",
        ],
        "defaultValue": "regular",
        "deprecatedValues": [
          "semibold",
        ],
        "description": "The text weight.",
        "type": "TabsWeight",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the \`p-tabs-item\` tags.",
      },
    },
    "styling": "jss",
  },
  "p-tabs-bar": {
    "controlledMeta": [
      {
        "event": "update",
        "props": [
          "activeTabIndex",
        ],
      },
    ],
    "eventsMeta": {
      "tabChange": {
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`update\` event instead. Emitted when active tab is changed.",
        "isDeprecated": true,
        "type": "TabsBarUpdateEventDetail",
        "typeDetail": "{ activeTabIndex: number }",
      },
      "update": {
        "description": "Emitted when active tab is changed.",
        "type": "TabsBarUpdateEventDetail",
        "typeDetail": "{ activeTabIndex: number }",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-scroller",
    ],
    "propsMeta": {
      "activeTabIndex": {
        "allowedValues": "number",
        "defaultValue": null,
        "description": "Defines which tab to be visualized as selected (zero-based numbering), undefined if none should be selected.",
        "type": "number | undefined",
      },
      "gradientColor": {
        "allowedValues": [
          "background-base",
          "background-surface",
        ],
        "defaultValue": "background-base",
        "description": "Adapts the background gradient color of prev and next button.",
        "type": "TabsBarGradientColor",
      },
      "gradientColorScheme": {
        "allowedValues": [
          null,
          "default",
          "surface",
        ],
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`gradientColor\` instead. Adapts the background gradient color of prev and next button.",
        "isDeprecated": true,
        "type": "TabsBarGradientColorScheme",
      },
      "size": {
        "allowedValues": [
          "small",
          "medium",
        ],
        "defaultValue": "small",
        "description": "The text size.",
        "isBreakpointCustomizable": true,
        "type": "TabsBarSize",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color when used on dark background.",
        "type": "Theme",
      },
      "weight": {
        "allowedValues": [
          "regular",
          "semi-bold",
          "semibold",
        ],
        "defaultValue": "regular",
        "deprecatedValues": [
          "semibold",
        ],
        "description": "The text weight.",
        "type": "TabsBarWeight",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the \`button\` or \`a\` tags which will be rendered as tabs.",
      },
    },
    "styling": "jss",
  },
  "p-tabs-item": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "internalProps": {
      "theme": "light",
    },
    "isChunked": false,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "propsMeta": {
      "label": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "Defines the label used in tabs.",
        "isRequired": true,
        "type": "string",
      },
    },
    "requiredParent": "p-tabs",
    "slotsMeta": {
      "": {
        "description": "Default slot for the tab content.",
      },
    },
    "styling": "jss",
  },
  "p-tag": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "color": {
        "allowedValues": [
          "background-base",
          "background-surface",
          "background-default",
          "background-frosted",
          "primary",
          "notification-info-soft",
          "notification-warning-soft",
          "notification-success-soft",
          "notification-error-soft",
          "neutral-contrast-high",
          "notification-neutral",
          "notification-warning",
          "notification-success",
          "notification-error",
        ],
        "defaultValue": "background-surface",
        "deprecatedValues": [
          "neutral-contrast-high",
          "notification-neutral",
          "notification-warning",
          "notification-success",
          "notification-error",
          "background-default",
        ],
        "description": "Background color variations depending on theme property.",
        "type": "TagColor",
      },
      "compact": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Displays as compact version.",
        "type": "boolean",
      },
      "icon": {
        "allowedValues": [
          "",
          "360",
          "accessibility",
          "active-cabin-ventilation",
          "add",
          "adjust",
          "arrow-double-down",
          "arrow-double-left",
          "arrow-double-right",
          "arrow-double-up",
          "arrow-down",
          "arrow-first",
          "arrow-head-down",
          "arrow-head-left",
          "arrow-head-right",
          "arrow-head-up",
          "arrow-last",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "attachment",
          "augmented-reality",
          "battery-empty",
          "battery-empty-co2",
          "battery-empty-fuel",
          "battery-full",
          "bell",
          "bookmark",
          "bookmark-filled",
          "broadcast",
          "calculator",
          "calendar",
          "camera",
          "car",
          "car-battery",
          "card",
          "charging-active",
          "charging-state",
          "charging-station",
          "chart",
          "chat",
          "check",
          "city",
          "climate",
          "climate-control",
          "clock",
          "close",
          "closed-caption",
          "co2-class",
          "co2-emission",
          "compare",
          "configurate",
          "copy",
          "country-road",
          "cubic-capacity",
          "delete",
          "disable",
          "dislike",
          "dislike-filled",
          "document",
          "download",
          "duration",
          "edit",
          "email",
          "error-filled",
          "exclamation",
          "external",
          "filter",
          "fingerprint",
          "flash",
          "fuel-station",
          "garage",
          "gift",
          "globe",
          "grid",
          "heart",
          "heart-filled",
          "highway",
          "home",
          "horn",
          "image",
          "increase",
          "information",
          "information-filled",
          "key",
          "leaf",
          "leather",
          "light",
          "like",
          "like-filled",
          "list",
          "locate",
          "lock",
          "lock-open",
          "logo-apple-podcast",
          "logo-baidu",
          "logo-delicious",
          "logo-digg",
          "logo-facebook",
          "logo-foursquare",
          "logo-gmail",
          "logo-google",
          "logo-hatena",
          "logo-instagram",
          "logo-kaixin",
          "logo-kakaotalk",
          "logo-linkedin",
          "logo-naver",
          "logo-pinterest",
          "logo-qq",
          "logo-qq-share",
          "logo-reddit",
          "logo-skyrock",
          "logo-sohu",
          "logo-spotify",
          "logo-tecent",
          "logo-telegram",
          "logo-tiktok",
          "logo-tumblr",
          "logo-twitter",
          "logo-viber",
          "logo-vk",
          "logo-wechat",
          "logo-weibo",
          "logo-whatsapp",
          "logo-x",
          "logo-xing",
          "logo-yahoo",
          "logo-youku",
          "logo-youtube",
          "logout",
          "map",
          "menu-dots-horizontal",
          "menu-dots-vertical",
          "menu-lines",
          "minus",
          "mobile",
          "moon",
          "new-chat",
          "oil-can",
          "parking-brake",
          "parking-light",
          "pause",
          "phone",
          "pin",
          "pin-filled",
          "play",
          "plug",
          "plus",
          "preheating",
          "printer",
          "purchase",
          "push-pin",
          "push-pin-off",
          "qr",
          "question",
          "racing-flag",
          "refresh",
          "replay",
          "reset",
          "roof-closed",
          "roof-open",
          "route",
          "rss",
          "save",
          "screen",
          "search",
          "send",
          "share",
          "shopping-bag",
          "shopping-bag-filled",
          "shopping-cart",
          "shopping-cart-filled",
          "sidebar",
          "sidelights",
          "snowflake",
          "sort",
          "stack",
          "star",
          "star-filled",
          "steering-wheel",
          "stopwatch",
          "subtract",
          "success",
          "success-filled",
          "sun",
          "switch",
          "tablet",
          "tachometer",
          "tire",
          "truck",
          "upload",
          "user",
          "user-filled",
          "user-group",
          "user-manual",
          "video",
          "view",
          "view-off",
          "volume-off",
          "volume-up",
          "warning",
          "warning-filled",
          "weight",
          "wifi",
          "work",
          "wrench",
          "wrenches",
          "zoom-in",
          "zoom-out",
        ],
        "defaultValue": null,
        "description": "The icon shown.",
        "type": "TagIcon",
      },
      "iconSource": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "A URL path to a custom icon.",
        "type": "string",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the tag color depending on the theme.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the tag content.",
      },
    },
    "styling": "jss",
  },
  "p-tag-dismissible": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "TagDismissibleAriaAttribute",
      },
      "color": {
        "allowedValues": [
          "background-base",
          "background-surface",
          "background-default",
        ],
        "defaultValue": "background-surface",
        "deprecatedValues": [
          "background-default",
        ],
        "description": "Background color variations",
        "type": "TagDismissibleColor",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The label text.",
        "type": "string",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color when used on dark background.",
        "type": "Theme",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the tag content.",
      },
    },
    "styling": "jss",
  },
  "p-text": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "align": {
        "allowedValues": [
          "start",
          "center",
          "end",
          "inherit",
          "left",
          "right",
        ],
        "defaultValue": "start",
        "deprecatedValues": [
          "left",
          "right",
        ],
        "description": "Text alignment of the component.",
        "type": "TextAlign",
      },
      "color": {
        "allowedValues": [
          "primary",
          "contrast-low",
          "contrast-medium",
          "contrast-high",
          "notification-success",
          "notification-warning",
          "notification-error",
          "notification-info",
          "inherit",
          "brand",
          "default",
          "neutral-contrast-low",
          "neutral-contrast-medium",
          "neutral-contrast-high",
          "notification-neutral",
        ],
        "defaultValue": "primary",
        "deprecatedValues": [
          "brand",
          "default",
          "neutral-contrast-low",
          "neutral-contrast-medium",
          "neutral-contrast-high",
          "notification-neutral",
        ],
        "description": "Basic text color variations depending on theme property.",
        "type": "TextColor",
      },
      "ellipsis": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Adds an ellipsis to a single line of text if it overflows.",
        "type": "boolean",
      },
      "size": {
        "allowedValues": [
          "xx-small",
          "x-small",
          "small",
          "medium",
          "large",
          "x-large",
          "inherit",
        ],
        "defaultValue": "small",
        "description": "Size of the text. Also defines the size for specific breakpoints, like {base: "small", l: "medium"}. You always need to provide a base value when doing this.",
        "isBreakpointCustomizable": true,
        "type": "TextSize",
      },
      "tag": {
        "allowedValues": [
          "p",
          "span",
          "div",
          "address",
          "blockquote",
          "figcaption",
          "cite",
          "time",
          "legend",
        ],
        "defaultValue": "p",
        "description": "Sets a custom HTML tag depending on the usage of the text component.",
        "type": "TextTag",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the text color depending on the theme. Has no effect when "inherit" is set as color prop.",
        "type": "Theme",
      },
      "weight": {
        "allowedValues": [
          "regular",
          "semi-bold",
          "bold",
          "thin",
          "semibold",
        ],
        "defaultValue": "regular",
        "deprecatedValues": [
          "thin",
          "semibold",
        ],
        "description": "The weight of the text.",
        "type": "TextWeight",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the text to render.",
      },
    },
    "styling": "jss",
  },
  "p-text-field-wrapper": {
    "eventsMeta": {
      "action": {
        "description": "Emitted when the action button is clicked.",
        "type": "void",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": true,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-button-pure",
      "p-icon",
    ],
    "observedAttributes": [
      "disabled",
      "readonly",
      "required",
      "maxlength",
    ],
    "propsMeta": {
      "actionIcon": {
        "allowedValues": [
          null,
          "locate",
        ],
        "defaultValue": null,
        "description": "Action icon can be set to \`locate\` for \`input type="search"\` in order to display an action button.",
        "type": "TextFieldWrapperActionIcon",
      },
      "actionLoading": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Disables the action button and shows a loading indicator. No events will be triggered while loading state is active.",
        "type": "boolean",
      },
      "description": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The description text.",
        "type": "string",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label and description text. For better accessibility it is recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "showCharacterCount": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`showCounter\` instead. Show or hide max character count.",
        "isDeprecated": true,
        "type": "boolean",
      },
      "showCounter": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "Show or hide max character count.",
        "type": "boolean",
      },
      "showPasswordToggle": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "@experimental Show or hide password toggle for \`input type="password"\`.",
        "isExperimental": true,
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "TextFieldWrapperState",
      },
      "submitButton": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "Show search button if wrapped inside a form.",
        "type": "boolean",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color depending on the theme.",
        "type": "Theme",
      },
      "unit": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The unit text.",
        "type": "string",
      },
      "unitPosition": {
        "allowedValues": [
          "prefix",
          "suffix",
        ],
        "defaultValue": "prefix",
        "description": "The unit position.",
        "type": "TextFieldWrapperUnitPosition",
      },
    },
    "requiredChild": "input type=text",
    "requiredChildSelector": "input[type=text],input[type=number],input[type=email],input[type=tel],input[type=search],input[type=url],input[type=date],input[type=time],input[type=month],input[type=week],input[type=password]",
    "slotsMeta": {
      "": {
        "description": "Default slot for the input.",
      },
      "description": {
        "description": "Shows a description. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-text-list": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "listType": {
        "allowedValues": [
          null,
          "unordered",
          "ordered",
        ],
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`type\` instead. The type of the list.",
        "isDeprecated": true,
        "type": "TextListListType",
      },
      "orderType": {
        "allowedValues": [
          null,
          "numbered",
          "alphabetically",
        ],
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`type\` instead. The list style type of ordered list. Only has effect when list type is set to 'ordered'.",
        "isDeprecated": true,
        "type": "TextListOrderType",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the text color depending on the theme.",
        "type": "Theme",
      },
      "type": {
        "allowedValues": [
          "unordered",
          "numbered",
          "alphabetically",
        ],
        "defaultValue": "unordered",
        "description": "The list style type.",
        "type": "TextListType",
      },
    },
    "slotsMeta": {
      "": {
        "description": "Default slot for the \`p-text-list-item\` tags or nested \`p-text-list\` tags.",
      },
    },
    "styling": "jss",
  },
  "p-text-list-item": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "hostAttributes": {
      "role": "listitem",
    },
    "isChunked": false,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": false,
    "requiredParent": "p-text-list",
    "slotsMeta": {
      "": {
        "description": "Default slot for the content.",
      },
    },
    "styling": "jss",
  },
  "p-textarea": {
    "eventsMeta": {
      "blur": {
        "description": "Emitted when the textarea has lost focus.",
        "type": "TextareaBlurEventDetail",
        "typeDetail": "Event",
      },
      "change": {
        "description": "Emitted when the textarea loses focus after its value was changed.",
        "type": "TextareaChangeEventDetail",
        "typeDetail": "Event",
      },
      "input": {
        "description": "Emitted when the value has been changed as a direct result of a user action.",
        "type": "TextareaInputEventDetail",
        "typeDetail": "InputEvent",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "propsMeta": {
      "autoComplete": {
        "allowedValues": [
          "off",
          "on",
          "",
        ],
        "defaultValue": "",
        "description": "Specifies whether the input can be autofilled by the browser",
        "type": "TextareaAutoComplete",
      },
      "description": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The description text.",
        "type": "string",
      },
      "disabled": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Marks the textarea as disabled.",
        "type": "boolean",
      },
      "form": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The id of a form element the textarea should be associated with.",
        "type": "string",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it is recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "maxLength": {
        "allowedValues": "number",
        "defaultValue": null,
        "description": "The max length of the textarea.",
        "type": "number",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "minLength": {
        "allowedValues": "number",
        "defaultValue": null,
        "description": "The min length of the textarea.",
        "type": "number",
      },
      "name": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "The name of the textarea.",
        "isRequired": true,
        "type": "string",
      },
      "placeholder": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The placeholder text.",
        "type": "string",
      },
      "readOnly": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Specifies whether the textarea should be read-only.",
        "type": "boolean",
      },
      "required": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Marks the textarea as required.",
        "type": "boolean",
      },
      "resize": {
        "allowedValues": [
          "none",
          "both",
          "horizontal",
          "vertical",
          "block",
          "inline",
        ],
        "defaultValue": "vertical",
        "description": "Controls whether the textarea is resizable and in which direction.",
        "type": "TextareaResize",
      },
      "rows": {
        "allowedValues": "number",
        "defaultValue": 7,
        "description": "The amount of rows of the textarea.",
        "type": "number",
      },
      "showCounter": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "Show or hide max character count.",
        "type": "boolean",
      },
      "spellCheck": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "Specifies whether the input should have its spelling and grammar checked",
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "TextareaState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color depending on the theme.",
        "type": "Theme",
      },
      "value": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The textarea value.",
        "type": "string",
      },
      "wrap": {
        "allowedValues": [
          "hard",
          "soft",
          "off",
        ],
        "defaultValue": "soft",
        "description": "Handles wrapping behaviour of elements.",
        "type": "TextareaWrap",
      },
    },
    "slotsMeta": {
      "description": {
        "description": "Shows a description. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-textarea-wrapper": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": true,
    "hasObserveChildren": false,
    "hasSlot": true,
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
    ],
    "observedAttributes": [
      "disabled",
      "readonly",
      "required",
      "maxlength",
    ],
    "propsMeta": {
      "description": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The description text.",
        "type": "string",
      },
      "hideLabel": {
        "allowedValues": "boolean",
        "defaultValue": false,
        "description": "Show or hide label. For better accessibility it is recommended to show the label.",
        "isBreakpointCustomizable": true,
        "type": "boolean",
      },
      "label": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The label text.",
        "type": "string",
      },
      "message": {
        "allowedValues": "string",
        "defaultValue": "",
        "description": "The message styled depending on validation state.",
        "type": "string",
      },
      "showCharacterCount": {
        "allowedValues": "boolean",
        "defaultValue": null,
        "description": "@deprecated since v3.0.0, will be removed with next major release, use \`showCounter\` instead. Show or hide max character count.",
        "isDeprecated": true,
        "type": "boolean",
      },
      "showCounter": {
        "allowedValues": "boolean",
        "defaultValue": true,
        "description": "Show or hide max character count.",
        "type": "boolean",
      },
      "state": {
        "allowedValues": [
          "none",
          "error",
          "success",
        ],
        "defaultValue": "none",
        "description": "The validation state.",
        "type": "TextareaWrapperState",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the color depending on the theme.",
        "type": "Theme",
      },
    },
    "requiredChild": "textarea",
    "requiredChildSelector": "textarea",
    "slotsMeta": {
      "": {
        "description": "Default slot for the textarea.",
      },
      "description": {
        "description": "Shows a description. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "label": {
        "description": "Shows a label. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
      "message": {
        "description": "Shows a state message. Only [phrasing content](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content) is allowed.",
      },
    },
    "styling": "jss",
  },
  "p-toast": {
    "hasAriaProp": false,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": false,
    "hostAttributes": {
      "aria-live": "polite",
      "role": "status",
    },
    "isChunked": true,
    "isDelegatingFocus": false,
    "isInternal": false,
    "isThemeable": true,
    "nestedComponents": [
      "p-toast-item",
    ],
    "propsMeta": {
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts the toast color depending on the theme.",
        "type": "Theme",
      },
    },
    "styling": "jss",
  },
  "p-toast-item": {
    "eventsMeta": {
      "dismiss": {
        "description": "Emitted when the close button is clicked.",
        "type": "void",
      },
    },
    "hasAriaProp": false,
    "hasEvent": true,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": false,
    "hostAttributes": {
      "popover": "manual",
    },
    "isChunked": false,
    "isDelegatingFocus": false,
    "isInternal": true,
    "isThemeable": true,
    "nestedComponents": [
      "p-icon",
      "p-button",
    ],
    "propsMeta": {
      "state": {
        "defaultValue": "info",
        "description": "State of the toast-item.",
        "type": "ToastState",
      },
      "text": {
        "defaultValue": "",
        "description": "Text of the toast-item.",
        "type": "string",
      },
      "theme": {
        "defaultValue": "light",
        "description": "Adapts the toast-item color depending on the theme.",
        "type": "Theme",
      },
    },
    "requiredRootNode": [
      "p-toast",
    ],
    "styling": "jss",
  },
  "p-wordmark": {
    "hasAriaProp": true,
    "hasEvent": false,
    "hasObserveAttributes": false,
    "hasObserveChildren": false,
    "hasSlot": false,
    "isChunked": true,
    "isDelegatingFocus": true,
    "isInternal": false,
    "isThemeable": true,
    "propsMeta": {
      "aria": {
        "allowedValues": {
          "aria-current": "string",
          "aria-haspopup": "string",
          "aria-label": "string",
        },
        "defaultValue": null,
        "description": "Add ARIA attributes.",
        "isAria": true,
        "type": "WordmarkAriaAttribute",
      },
      "href": {
        "allowedValues": "string",
        "defaultValue": null,
        "description": "When providing an url then the component will be rendered as \`<a>\`.",
        "type": "string",
      },
      "size": {
        "allowedValues": [
          "small",
          "inherit",
        ],
        "defaultValue": "small",
        "description": "Adapts sizing of wordmark.",
        "type": "WordmarkSize",
      },
      "target": {
        "allowedValues": [
          "_self",
          "_blank",
          "_parent",
          "_top",
          "string",
        ],
        "defaultValue": "_self",
        "description": "Target attribute where the link should be opened.",
        "type": "WordmarkTarget",
      },
      "theme": {
        "allowedValues": [
          "light",
          "dark",
          "auto",
        ],
        "defaultValue": "light",
        "description": "Adapts color depending on theme.",
        "type": "Theme",
      },
    },
    "styling": "jss",
  },
}
`;
